{"ast":null,"code":"/**\n * @module ol/render/canvas/BuilderGroup\n */\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nvar BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder\n};\nvar BuilderGroup = /** @class */function () {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} declutter Decluttering enabled.\n   */\n  function BuilderGroup(tolerance, maxExtent, resolution, pixelRatio, declutter) {\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.declutter_ = declutter;\n    /**\n     * @type {import(\"../canvas.js\").DeclutterGroups}\n     * @private\n     */\n    this.declutterGroups_ = null;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n  /**\n   * @param {boolean} group Group with previous builder.\n   * @return {import(\"../canvas\").DeclutterGroups} The resulting instruction groups.\n   */\n  BuilderGroup.prototype.addDeclutter = function (group) {\n    /** @type {Array<*>} */\n    var declutter = null;\n    if (this.declutter_) {\n      if (group) {\n        declutter = this.declutterGroups_;\n        /** @type {number} */\n        declutter[0][0]++;\n      } else {\n        declutter = [[1]];\n        this.declutterGroups_ = declutter;\n      }\n    }\n    return declutter;\n  };\n  /**\n   * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  BuilderGroup.prototype.finish = function () {\n    var builderInstructions = {};\n    for (var zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      var builders = this.buildersByZIndex_[zKey];\n      for (var builderKey in builders) {\n        var builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  };\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  BuilderGroup.prototype.getBuilder = function (zIndex, builderType) {\n    var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    var replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    var replay = replays[builderType];\n    if (replay === undefined) {\n      var Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(this.tolerance_, this.maxExtent_, this.resolution_, this.pixelRatio_);\n      replays[builderType] = replay;\n    }\n    return replay;\n  };\n  return BuilderGroup;\n}();\nexport default BuilderGroup;","map":{"version":3,"names":["Builder","ImageBuilder","LineStringBuilder","PolygonBuilder","TextBuilder","BATCH_CONSTRUCTORS","BuilderGroup","tolerance","maxExtent","resolution","pixelRatio","declutter","declutter_","declutterGroups_","tolerance_","maxExtent_","pixelRatio_","resolution_","buildersByZIndex_","prototype","addDeclutter","group","finish","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","zIndex","builderType","zIndexKey","undefined","toString","replays","replay","Constructor"],"sources":["/Users/mariovicky/Skripsi_OpenLayers/node_modules/ol/src/render/canvas/BuilderGroup.js"],"sourcesContent":["/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} declutter Decluttering enabled.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio, declutter) {\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.declutter_ = declutter;\n\n    /**\n     * @type {import(\"../canvas.js\").DeclutterGroups}\n     * @private\n     */\n    this.declutterGroups_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @param {boolean} group Group with previous builder.\n   * @return {import(\"../canvas\").DeclutterGroups} The resulting instruction groups.\n   */\n  addDeclutter(group) {\n    /** @type {Array<*>} */\n    let declutter = null;\n    if (this.declutter_) {\n      if (group) {\n        declutter = this.declutterGroups_;\n        /** @type {number} */ (declutter[0][0])++;\n      } else {\n        declutter = [[1]];\n        this.declutterGroups_ = declutter;\n      }\n    }\n    return declutter;\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}