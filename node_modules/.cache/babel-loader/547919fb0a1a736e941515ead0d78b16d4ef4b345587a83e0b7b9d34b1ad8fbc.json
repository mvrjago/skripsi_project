{"ast":null,"code":"/**\n * @module ol/source/Stamen\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport XYZ from './XYZ.js';\nimport { ATTRIBUTION as OSM_ATTRIBUTION } from './OSM.js';\n/**\n * @const\n * @type {Array<string>}\n */\nvar ATTRIBUTIONS = ['Map tiles by <a href=\"https://stamen.com/\" target=\"_blank\">Stamen Design</a>, ' + 'under <a href=\"https://creativecommons.org/licenses/by/3.0/\" target=\"_blank\">CC BY' + ' 3.0</a>.', OSM_ATTRIBUTION];\n/**\n * @type {Object<string, {extension: string, opaque: boolean}>}\n */\nvar LayerConfig = {\n  'terrain': {\n    extension: 'jpg',\n    opaque: true\n  },\n  'terrain-background': {\n    extension: 'jpg',\n    opaque: true\n  },\n  'terrain-labels': {\n    extension: 'png',\n    opaque: false\n  },\n  'terrain-lines': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-background': {\n    extension: 'png',\n    opaque: true\n  },\n  'toner': {\n    extension: 'png',\n    opaque: true\n  },\n  'toner-hybrid': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-labels': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-lines': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-lite': {\n    extension: 'png',\n    opaque: true\n  },\n  'watercolor': {\n    extension: 'jpg',\n    opaque: true\n  }\n};\n/**\n * @type {Object<string, {minZoom: number, maxZoom: number}>}\n */\nvar ProviderConfig = {\n  'terrain': {\n    minZoom: 0,\n    maxZoom: 18\n  },\n  'toner': {\n    minZoom: 0,\n    maxZoom: 20\n  },\n  'watercolor': {\n    minZoom: 0,\n    maxZoom: 18\n  }\n};\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {string} layer Layer name.\n * @property {number} [minZoom] Minimum zoom.\n * @property {number} [maxZoom] Maximum zoom.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n/**\n * @classdesc\n * Layer source for the Stamen tile server.\n * @api\n */\nvar Stamen = /** @class */function (_super) {\n  __extends(Stamen, _super);\n  /**\n   * @param {Options} options Stamen options.\n   */\n  function Stamen(options) {\n    var _this = this;\n    var i = options.layer.indexOf('-');\n    var provider = i == -1 ? options.layer : options.layer.slice(0, i);\n    var providerConfig = ProviderConfig[provider];\n    var layerConfig = LayerConfig[options.layer];\n    var url = options.url !== undefined ? options.url : 'https://stamen-tiles-{a-d}.a.ssl.fastly.net/' + options.layer + '/{z}/{x}/{y}.' + layerConfig.extension;\n    _this = _super.call(this, {\n      attributions: ATTRIBUTIONS,\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      imageSmoothing: options.imageSmoothing,\n      maxZoom: options.maxZoom != undefined ? options.maxZoom : providerConfig.maxZoom,\n      minZoom: options.minZoom != undefined ? options.minZoom : providerConfig.minZoom,\n      opaque: layerConfig.opaque,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX\n    }) || this;\n    return _this;\n  }\n  return Stamen;\n}(XYZ);\nexport default Stamen;","map":{"version":3,"names":["XYZ","ATTRIBUTION","OSM_ATTRIBUTION","ATTRIBUTIONS","LayerConfig","extension","opaque","ProviderConfig","minZoom","maxZoom","Stamen","_super","__extends","options","_this","i","layer","indexOf","provider","slice","providerConfig","layerConfig","url","undefined","call","attributions","cacheSize","crossOrigin","imageSmoothing","reprojectionErrorThreshold","tileLoadFunction","transition","wrapX"],"sources":["/Users/mariovicky/Skripsi_OpenLayers/node_modules/ol/src/source/Stamen.js"],"sourcesContent":["/**\n * @module ol/source/Stamen\n */\n\nimport XYZ from './XYZ.js';\nimport {ATTRIBUTION as OSM_ATTRIBUTION} from './OSM.js';\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst ATTRIBUTIONS = [\n  'Map tiles by <a href=\"https://stamen.com/\" target=\"_blank\">Stamen Design</a>, ' +\n    'under <a href=\"https://creativecommons.org/licenses/by/3.0/\" target=\"_blank\">CC BY' +\n    ' 3.0</a>.',\n  OSM_ATTRIBUTION,\n];\n\n/**\n * @type {Object<string, {extension: string, opaque: boolean}>}\n */\nconst LayerConfig = {\n  'terrain': {\n    extension: 'jpg',\n    opaque: true,\n  },\n  'terrain-background': {\n    extension: 'jpg',\n    opaque: true,\n  },\n  'terrain-labels': {\n    extension: 'png',\n    opaque: false,\n  },\n  'terrain-lines': {\n    extension: 'png',\n    opaque: false,\n  },\n  'toner-background': {\n    extension: 'png',\n    opaque: true,\n  },\n  'toner': {\n    extension: 'png',\n    opaque: true,\n  },\n  'toner-hybrid': {\n    extension: 'png',\n    opaque: false,\n  },\n  'toner-labels': {\n    extension: 'png',\n    opaque: false,\n  },\n  'toner-lines': {\n    extension: 'png',\n    opaque: false,\n  },\n  'toner-lite': {\n    extension: 'png',\n    opaque: true,\n  },\n  'watercolor': {\n    extension: 'jpg',\n    opaque: true,\n  },\n};\n\n/**\n * @type {Object<string, {minZoom: number, maxZoom: number}>}\n */\nconst ProviderConfig = {\n  'terrain': {\n    minZoom: 0,\n    maxZoom: 18,\n  },\n  'toner': {\n    minZoom: 0,\n    maxZoom: 20,\n  },\n  'watercolor': {\n    minZoom: 0,\n    maxZoom: 18,\n  },\n};\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {string} layer Layer name.\n * @property {number} [minZoom] Minimum zoom.\n * @property {number} [maxZoom] Maximum zoom.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n/**\n * @classdesc\n * Layer source for the Stamen tile server.\n * @api\n */\nclass Stamen extends XYZ {\n  /**\n   * @param {Options} options Stamen options.\n   */\n  constructor(options) {\n    const i = options.layer.indexOf('-');\n    const provider = i == -1 ? options.layer : options.layer.slice(0, i);\n    const providerConfig = ProviderConfig[provider];\n\n    const layerConfig = LayerConfig[options.layer];\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://stamen-tiles-{a-d}.a.ssl.fastly.net/' +\n          options.layer +\n          '/{z}/{x}/{y}.' +\n          layerConfig.extension;\n\n    super({\n      attributions: ATTRIBUTIONS,\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      imageSmoothing: options.imageSmoothing,\n      maxZoom:\n        options.maxZoom != undefined ? options.maxZoom : providerConfig.maxZoom,\n      minZoom:\n        options.minZoom != undefined ? options.minZoom : providerConfig.minZoom,\n      opaque: layerConfig.opaque,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n    });\n  }\n}\n\nexport default Stamen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}