{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/layer/Image\n */\nimport BaseImageLayer from './BaseImage.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar ImageLayer = /** @class */function (_super) {\n  __extends(ImageLayer, _super);\n  /**\n   * @param {import(\"./BaseImage.js\").Options=} opt_options Layer options.\n   */\n  function ImageLayer(opt_options) {\n    return _super.call(this, opt_options) || this;\n  }\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   */\n  ImageLayer.prototype.createRenderer = function () {\n    return new CanvasImageLayerRenderer(this);\n  };\n  return ImageLayer;\n}(BaseImageLayer);\nexport default ImageLayer;","map":{"version":3,"names":["BaseImageLayer","CanvasImageLayerRenderer","ImageLayer","_super","__extends","opt_options","call","prototype","createRenderer"],"sources":["/Users/mariovicky/Skripsi_OpenLayers/node_modules/ol/src/layer/Image.js"],"sourcesContent":["/**\n * @module ol/layer/Image\n */\nimport BaseImageLayer from './BaseImage.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nclass ImageLayer extends BaseImageLayer {\n  /**\n   * @param {import(\"./BaseImage.js\").Options=} opt_options Layer options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   */\n  createRenderer() {\n    return new CanvasImageLayerRenderer(this);\n  }\n}\n\nexport default ImageLayer;\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;;AAGA,OAAOA,cAAc,MAAM,gBAAgB;AAC3C,OAAOC,wBAAwB,MAAM,kCAAkC;AAEvE;;;;;;;;;;AAUA,IAAAC,UAAA,0BAAAC,MAAA;EAAyBC,SAAA,CAAAF,UAAA,EAAAC,MAAA;EACvB;;;EAGA,SAAAD,WAAYG,WAAW;WACrBF,MAAA,CAAAG,IAAA,OAAMD,WAAW,CAAC;EACpB;EAEA;;;;EAIAH,UAAA,CAAAK,SAAA,CAAAC,cAAc,GAAd;IACE,OAAO,IAAIP,wBAAwB,CAAC,IAAI,CAAC;EAC3C,CAAC;EACH,OAAAC,UAAC;AAAD,CAAC,CAfwBF,cAAc;AAiBvC,eAAeE,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}