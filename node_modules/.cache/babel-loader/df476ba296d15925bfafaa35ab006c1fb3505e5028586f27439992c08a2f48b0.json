{"ast":null,"code":"var _jsxFileName = \"/Users/mariovicky/Skripsi_OpenLayers/src/containers/Map/OpenlayerMaps/Map.js\";\nimport React, { Component } from 'react';\nimport 'ol/ol.css';\nimport './Map.css';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport { Stroke, Style, Icon } from 'ol/style';\nimport { Tile as TileLayer, Vector as VectorLayer } from 'ol/layer';\nimport OSM from 'ol/source/OSM';\nimport VectorSource from 'ol/source/Vector';\nimport Feature from 'ol/Feature';\nimport LineString from 'ol/geom/LineString';\nimport { getVectorContext } from 'ol/render';\nimport { getWidth } from 'ol/extent';\nimport airplaneimg from './614.png';\nclass MapComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.animateFlights = event => {\n      const vectorContext = getVectorContext(event);\n      const frameState = event.frameState;\n      vectorContext.setStyle(this.style);\n      const features = this.flightsSource.getFeatures();\n      for (let i = 0; i < features.length; i++) {\n        const feature = features[i];\n        if (!feature.get('finished')) {\n          const coords = feature.getGeometry().getCoordinates();\n          const elapsedTime = frameState.time - feature.get('start');\n          if (elapsedTime >= 0) {\n            const elapsedPoints = elapsedTime * this.pointsPerMs;\n            if (elapsedPoints >= coords.length) {\n              feature.set('finished', true);\n            }\n            const maxIndex = Math.min(elapsedPoints, coords.length);\n            const currentLine = new LineString(coords.slice(0, maxIndex));\n            const worldWidth = getWidth(this.map.getView().getProjection().getExtent());\n            const offset = Math.floor(this.map.getView().getCenter()[0] / worldWidth);\n            currentLine.translate(offset * worldWidth, 0);\n            vectorContext.drawGeometry(currentLine);\n            currentLine.translate(worldWidth, 0);\n            vectorContext.drawGeometry(currentLine);\n          }\n        }\n      }\n      this.map.render();\n    };\n    this.handleCoordinateInputChange = event => {\n      this.setState({\n        coordinateInput: event.target.value\n      });\n    };\n    this.handleCoordinateSubmit = () => {\n      const {\n        coordinateInput\n      } = this.state;\n      // Parse koordinat dari string input\n      const coordinates = coordinateInput.split(',').map(coord => parseFloat(coord.trim()));\n      // Cek apakah koordinat valid\n      if (coordinates.length === 2 && !isNaN(coordinates[0]) && !isNaN(coordinates[1])) {\n        // Atur tampilan ke koordinat yang dipilih\n        const view = this.map.getView();\n        view.setCenter(coordinates);\n        view.setZoom(10); // Ganti dengan zoom level yang diinginkan\n      } else {\n        // Tampilkan pesan kesalahan jika koordinat tidak valid\n        alert('Koordinat tidak valid!');\n      }\n    };\n    this.mapRef = /*#__PURE__*/React.createRef();\n    this.map = null;\n    this.flightsSource = null;\n    this.tileLayer = null;\n    this.flightsLayer = null;\n    this.style = null;\n    this.airplaneIcon = null;\n    this.pointsPerMs = 0.02;\n    this.state = {\n      coordinateInput: ''\n    };\n  }\n  componentDidMount() {\n    this.initializeMap();\n  }\n  initializeMap() {\n    this.tileLayer = new TileLayer({\n      source: new OSM()\n    });\n    this.map = new Map({\n      layers: [this.tileLayer],\n      target: this.mapRef.current,\n      view: new View({\n        center: [-11000000, 4600000],\n        zoom: 2\n      })\n    });\n    this.airplaneIcon = new Icon({\n      src: airplaneimg,\n      scale: 0.5\n    });\n    this.style = new Style({\n      stroke: new Stroke({\n        color: 'red',\n        width: 2\n      }),\n      image: this.airplaneIcon\n    });\n    this.flightsSource = new VectorSource({\n      attributions: 'Flight data by ' + '<a href=\"https://openflights.org/data.html\">OpenFlights</a>',\n      loader: () => {\n        const url = '/data/openflights/flights.json';\n        fetch(url).then(response => {\n          if (!response.ok) {\n            throw new Error('Network response was not ok');\n          }\n          return response.json();\n        }).then(json => {\n          const flightsData = json.flights;\n          for (let i = 0; i < flightsData.length; i++) {\n            const flight = flightsData[i];\n            const from = flight[0];\n            const to = flight[1];\n            const line = new LineString([from, to]);\n            line.transform('EPSG:4326', 'EPSG:3857');\n            const feature = new Feature({\n              geometry: line,\n              finished: false\n            });\n            this.addLater(feature, i * 50);\n          }\n          this.tileLayer.on('postrender', this.animateFlights);\n        }).catch(error => {\n          console.error('Error fetching JSON:', error);\n          console.error('URL:', url);\n        });\n      }\n    });\n    this.flightsLayer = new VectorLayer({\n      source: this.flightsSource,\n      style: feature => {\n        if (feature.get('finished')) {\n          return this.style;\n        }\n        return null;\n      }\n    });\n    this.map.addLayer(this.flightsLayer);\n  }\n  addLater(feature, timeout) {\n    window.setTimeout(() => {\n      let start = Date.now();\n      feature.set('start', start);\n      this.flightsSource.addFeature(feature);\n      const duration = (feature.getGeometry().getCoordinates().length - 1) / this.pointsPerMs;\n      start += duration;\n    }, timeout);\n  }\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"coordinate-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.coordinateInput,\n      onChange: this.handleCoordinateInputChange,\n      placeholder: \"Masukkan koordinat (lat, lon)\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleCoordinateSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }\n    }, \"Zoom\")), /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.mapRef,\n      className: \"map\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }\n    }));\n  }\n}\nexport default MapComponent;","map":{"version":3,"names":["React","Component","Map","View","Stroke","Style","Icon","Tile","TileLayer","Vector","VectorLayer","OSM","VectorSource","Feature","LineString","getVectorContext","getWidth","airplaneimg","MapComponent","constructor","props","animateFlights","event","vectorContext","frameState","setStyle","style","features","flightsSource","getFeatures","i","length","feature","get","coords","getGeometry","getCoordinates","elapsedTime","time","elapsedPoints","pointsPerMs","set","maxIndex","Math","min","currentLine","slice","worldWidth","map","getView","getProjection","getExtent","offset","floor","getCenter","translate","drawGeometry","render","handleCoordinateInputChange","setState","coordinateInput","target","value","handleCoordinateSubmit","state","coordinates","split","coord","parseFloat","trim","isNaN","view","setCenter","setZoom","alert","mapRef","createRef","tileLayer","flightsLayer","airplaneIcon","componentDidMount","initializeMap","source","layers","current","center","zoom","src","scale","stroke","color","width","image","attributions","loader","url","fetch","then","response","ok","Error","json","flightsData","flights","flight","from","to","line","transform","geometry","finished","addLater","on","catch","error","console","addLayer","timeout","window","setTimeout","start","Date","now","addFeature","duration","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","type","onChange","placeholder","onClick","ref"],"sources":["/Users/mariovicky/Skripsi_OpenLayers/src/containers/Map/OpenlayerMaps/Map.js"],"sourcesContent":["import React, { Component } from 'react';\nimport 'ol/ol.css';\nimport './Map.css';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport { Stroke, Style, Icon } from 'ol/style';\nimport { Tile as TileLayer, Vector as VectorLayer } from 'ol/layer';\nimport OSM from 'ol/source/OSM';\nimport VectorSource from 'ol/source/Vector';\nimport Feature from 'ol/Feature';\nimport LineString from 'ol/geom/LineString';\nimport { getVectorContext } from 'ol/render';\nimport { getWidth } from 'ol/extent';\n\nimport airplaneimg from './614.png';\n\nclass MapComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.mapRef = React.createRef();\n    this.map = null;\n    this.flightsSource = null;\n    this.tileLayer = null;\n    this.flightsLayer = null;\n    this.style = null;\n    this.airplaneIcon = null;\n    this.pointsPerMs = 0.02;\n    this.state = {\n      coordinateInput: '',\n    };\n  }\n\n  componentDidMount() {\n    this.initializeMap();\n  }\n\n  initializeMap() {\n    this.tileLayer = new TileLayer({\n      source: new OSM(),\n    });\n\n    this.map = new Map({\n      layers: [this.tileLayer],\n      target: this.mapRef.current,\n      view: new View({\n        center: [-11000000, 4600000],\n        zoom: 2,\n      }),\n    });\n\n    this.airplaneIcon = new Icon({\n      src: airplaneimg,\n      scale: 0.5,\n    });\n\n    this.style = new Style({\n      stroke: new Stroke({\n        color: 'red',\n        width: 2,\n      }),\n      image: this.airplaneIcon,\n    });\n\n    this.flightsSource = new VectorSource({\n      attributions:\n        'Flight data by ' +\n        '<a href=\"https://openflights.org/data.html\">OpenFlights</a>',\n      loader: () => {\n        const url = '/data/openflights/flights.json';\n        fetch(url)\n          .then((response) => {\n            if (!response.ok) {\n              throw new Error('Network response was not ok');\n            }\n            return response.json();\n          })\n          .then((json) => {\n            const flightsData = json.flights;\n            for (let i = 0; i < flightsData.length; i++) {\n              const flight = flightsData[i];\n              const from = flight[0];\n              const to = flight[1];\n\n              const line = new LineString([from, to]);\n              line.transform('EPSG:4326', 'EPSG:3857');\n\n              const feature = new Feature({\n                geometry: line,\n                finished: false,\n              });\n\n              this.addLater(feature, i * 50);\n            }\n\n            this.tileLayer.on('postrender', this.animateFlights);\n          })\n          .catch((error) => {\n            console.error('Error fetching JSON:', error);\n            console.error('URL:', url);\n          });\n      },\n    });\n\n    this.flightsLayer = new VectorLayer({\n      source: this.flightsSource,\n      style: (feature) => {\n        if (feature.get('finished')) {\n          return this.style;\n        }\n        return null;\n      },\n    });\n\n    this.map.addLayer(this.flightsLayer);\n  }\n\n  animateFlights = (event) => {\n    const vectorContext = getVectorContext(event);\n    const frameState = event.frameState;\n    vectorContext.setStyle(this.style);\n\n    const features = this.flightsSource.getFeatures();\n    for (let i = 0; i < features.length; i++) {\n      const feature = features[i];\n      if (!feature.get('finished')) {\n        const coords = feature.getGeometry().getCoordinates();\n        const elapsedTime = frameState.time - feature.get('start');\n        if (elapsedTime >= 0) {\n          const elapsedPoints = elapsedTime * this.pointsPerMs;\n\n          if (elapsedPoints >= coords.length) {\n            feature.set('finished', true);\n          }\n\n          const maxIndex = Math.min(elapsedPoints, coords.length);\n          const currentLine = new LineString(coords.slice(0, maxIndex));\n\n          const worldWidth = getWidth(this.map.getView().getProjection().getExtent());\n          const offset = Math.floor(this.map.getView().getCenter()[0] / worldWidth);\n\n          currentLine.translate(offset * worldWidth, 0);\n          vectorContext.drawGeometry(currentLine);\n          currentLine.translate(worldWidth, 0);\n          vectorContext.drawGeometry(currentLine);\n        }\n      }\n    }\n\n    this.map.render();\n  };\n\n  addLater(feature, timeout) {\n    window.setTimeout(() => {\n      let start = Date.now();\n      feature.set('start', start);\n      this.flightsSource.addFeature(feature);\n      const duration =\n        (feature.getGeometry().getCoordinates().length - 1) / this.pointsPerMs;\n      start += duration;\n    }, timeout);\n  }\n\n  handleCoordinateInputChange = (event) => {\n    this.setState({ coordinateInput: event.target.value });\n  };\n\n  handleCoordinateSubmit = () => {\n    const { coordinateInput } = this.state;\n    // Parse koordinat dari string input\n    const coordinates = coordinateInput.split(',').map((coord) => parseFloat(coord.trim()));\n    // Cek apakah koordinat valid\n    if (coordinates.length === 2 && !isNaN(coordinates[0]) && !isNaN(coordinates[1])) {\n      // Atur tampilan ke koordinat yang dipilih\n      const view = this.map.getView();\n      view.setCenter(coordinates);\n      view.setZoom(10); // Ganti dengan zoom level yang diinginkan\n    } else {\n      // Tampilkan pesan kesalahan jika koordinat tidak valid\n      alert('Koordinat tidak valid!');\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"coordinate-input\">\n          <input\n            type=\"text\"\n            value={this.state.coordinateInput}\n            onChange={this.handleCoordinateInputChange}\n            placeholder=\"Masukkan koordinat (lat, lon)\"\n          />\n          <button onClick={this.handleCoordinateSubmit}>Zoom</button>\n        </div>\n        <div ref={this.mapRef} className=\"map\" />\n      </div>\n    );\n  }\n}\n\nexport default MapComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}