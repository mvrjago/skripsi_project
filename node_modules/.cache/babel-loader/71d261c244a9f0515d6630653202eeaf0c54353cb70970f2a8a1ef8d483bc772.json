{"ast":null,"code":"var _jsxFileName = \"/Users/mariovicky/Skripsi_OpenLayers/src/containers/Map/Map.js\";\nimport React, { Component } from 'react';\nimport 'ol/ol.css';\nimport './Map.css';\nimport Map from 'ol/Map.js';\nimport View from 'ol/View.js';\nimport { Stroke, Style, Icon } from 'ol/style.js';\nimport { Tile as TileLayer, Vector as VectorLayer } from 'ol/layer.js';\nimport OSM from 'ol/source/OSM.js'; // Import OSM source\nimport VectorSource from 'ol/source/Vector.js';\nimport Feature from 'ol/Feature.js';\nimport LineString from 'ol/geom/LineString.js';\nimport { getVectorContext } from 'ol/render.js';\nimport { getWidth } from 'ol/extent.js';\nimport arc from 'arc';\nimport airplaneimg from './614.png';\nclass MapComponent extends Component {\n  componentDidMount() {\n    const tileLayer = new TileLayer({\n      source: new OSM() // Use OSM source\n    });\n\n    const map = new Map({\n      layers: [tileLayer],\n      target: 'map',\n      // Update target to match the ID of the HTML element\n      view: new View({\n        center: [-11000000, 4600000],\n        zoom: 2\n      })\n    });\n    const airplaneIcon = new Icon({\n      src: airplaneimg,\n      // Use the imported image file\n      scale: 0.5 // Scale the size of the icon if needed\n    });\n\n    const style = new Style({\n      stroke: new Stroke({\n        color: 'red',\n        width: 2\n      }),\n      image: airplaneIcon // Set the airplane icon as the symbol\n    });\n\n    const flightsSource = new VectorSource({\n      attributions: 'Flight data by ' + '<a href=\"https://openflights.org/data.html\">OpenFlights</a>,',\n      loader: function () {\n        const url = '/data/openflights/flights.json'; // Update the URL\n        fetch(url).then(function (response) {\n          if (!response.ok) {\n            throw new Error('Network response was not ok');\n          }\n          return response.json();\n        }).then(function (json) {\n          const flightsData = json.flights;\n          for (let i = 0; i < flightsData.length; i++) {\n            const flight = flightsData[i];\n            const from = flight[0];\n            const to = flight[1];\n            const arcGenerator = new arc.GreatCircle({\n              x: from[1],\n              y: from[0]\n            }, {\n              x: to[1],\n              y: to[0]\n            });\n            const arcLine = arcGenerator.Arc(100, {\n              offset: 10\n            });\n            const features = [];\n            arcLine.geometries.forEach(function (geometry) {\n              const line = new LineString(geometry.coords);\n              line.transform('EPSG:4326', 'EPSG:3857');\n              features.push(new Feature({\n                geometry: line,\n                finished: false\n              }));\n            });\n            addLater(features, i * 50);\n          }\n          tileLayer.on('postrender', animateFlights);\n        }).catch(function (error) {\n          console.error('Error fetching JSON:', error);\n          console.error('URL:', url);\n        });\n      }\n    });\n    const flightsLayer = new VectorLayer({\n      source: flightsSource,\n      style: function (feature) {\n        if (feature.get('finished')) {\n          return style;\n        }\n        return null;\n      }\n    });\n    map.addLayer(flightsLayer);\n    const pointsPerMs = 0.02;\n    function animateFlights(event) {\n      const vectorContext = getVectorContext(event);\n      const frameState = event.frameState;\n      vectorContext.setStyle(style);\n      const features = flightsSource.getFeatures();\n      for (let i = 0; i < features.length; i++) {\n        const feature = features[i];\n        if (!feature.get('finished')) {\n          const coords = feature.getGeometry().getCoordinates();\n          const elapsedTime = frameState.time - feature.get('start');\n          if (elapsedTime >= 0) {\n            const elapsedPoints = elapsedTime * pointsPerMs;\n            if (elapsedPoints >= coords.length) {\n              feature.set('finished', true);\n            }\n            const maxIndex = Math.min(elapsedPoints, coords.length);\n            const currentLine = new LineString(coords.slice(0, maxIndex));\n            const worldWidth = getWidth(map.getView().calculateExtent());\n            const offset = Math.floor(map.getView().getCenter()[0] / worldWidth);\n            currentLine.translate(offset * worldWidth, 0);\n            vectorContext.drawGeometry(currentLine);\n            currentLine.translate(worldWidth, 0);\n            vectorContext.drawGeometry(currentLine);\n          }\n        }\n      }\n      map.render();\n    }\n    function addLater(features, timeout) {\n      window.setTimeout(function () {\n        let start = Date.now();\n        features.forEach(function (feature) {\n          feature.set('start', start);\n          flightsSource.addFeature(feature);\n          const duration = (feature.getGeometry().getCoordinates().length - 1) / pointsPerMs;\n          start += duration;\n        });\n      }, timeout);\n    }\n    map.setTarget(this.mapRef);\n  }\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: ref => this.mapRef = ref,\n      className: \"map\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 12\n      }\n    });\n  }\n}\nexport default MapComponent;","map":{"version":3,"names":["React","Component","Map","View","Stroke","Style","Icon","Tile","TileLayer","Vector","VectorLayer","OSM","VectorSource","Feature","LineString","getVectorContext","getWidth","arc","airplaneimg","MapComponent","componentDidMount","tileLayer","source","map","layers","target","view","center","zoom","airplaneIcon","src","scale","style","stroke","color","width","image","flightsSource","attributions","loader","url","fetch","then","response","ok","Error","json","flightsData","flights","i","length","flight","from","to","arcGenerator","GreatCircle","x","y","arcLine","Arc","offset","features","geometries","forEach","geometry","line","coords","transform","push","finished","addLater","on","animateFlights","catch","error","console","flightsLayer","feature","get","addLayer","pointsPerMs","event","vectorContext","frameState","setStyle","getFeatures","getGeometry","getCoordinates","elapsedTime","time","elapsedPoints","set","maxIndex","Math","min","currentLine","slice","worldWidth","getView","calculateExtent","floor","getCenter","translate","drawGeometry","render","timeout","window","setTimeout","start","Date","now","addFeature","duration","setTarget","mapRef","createElement","ref","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/mariovicky/Skripsi_OpenLayers/src/containers/Map/Map.js"],"sourcesContent":["import React, { Component } from 'react';\nimport 'ol/ol.css';\nimport './Map.css';\nimport Map from 'ol/Map.js';\nimport View from 'ol/View.js';\nimport { Stroke, Style, Icon } from 'ol/style.js';\nimport { Tile as TileLayer, Vector as VectorLayer } from 'ol/layer.js';\nimport OSM from 'ol/source/OSM.js'; // Import OSM source\nimport VectorSource from 'ol/source/Vector.js';\nimport Feature from 'ol/Feature.js';\nimport LineString from 'ol/geom/LineString.js';\nimport { getVectorContext } from 'ol/render.js';\nimport { getWidth } from 'ol/extent.js';\nimport arc from 'arc';\nimport airplaneimg from './614.png';\n\nclass MapComponent extends Component {\n  componentDidMount() {\n    const tileLayer = new TileLayer({\n      source: new OSM(), // Use OSM source\n    });\n\n    const map = new Map({\n      layers: [tileLayer],\n      target: 'map', // Update target to match the ID of the HTML element\n      view: new View({\n        center: [-11000000, 4600000],\n        zoom: 2,\n      }),\n    });\n\n    const airplaneIcon = new Icon({\n      src: airplaneimg, // Use the imported image file\n      scale: 0.5, // Scale the size of the icon if needed\n    });\n\n    const style = new Style({\n      stroke: new Stroke({\n        color: 'red',\n        width: 2,\n      }),\n      image: airplaneIcon, // Set the airplane icon as the symbol\n    });\n\n    const flightsSource = new VectorSource({\n      attributions:\n        'Flight data by ' +\n        '<a href=\"https://openflights.org/data.html\">OpenFlights</a>,',\n      loader: function () {\n        const url = '/data/openflights/flights.json'; // Update the URL\n        fetch(url)\n          .then(function (response) {\n            if (!response.ok) {\n              throw new Error('Network response was not ok');\n            }\n            return response.json();\n          })\n          .then(function (json) {\n            const flightsData = json.flights;\n            for (let i = 0; i < flightsData.length; i++) {\n              const flight = flightsData[i];\n              const from = flight[0];\n              const to = flight[1];\n\n              const arcGenerator = new arc.GreatCircle(\n                { x: from[1], y: from[0] },\n                { x: to[1], y: to[0] }\n              );\n\n              const arcLine = arcGenerator.Arc(100, { offset: 10 });\n              const features = [];\n              arcLine.geometries.forEach(function (geometry) {\n                const line = new LineString(geometry.coords);\n                line.transform('EPSG:4326', 'EPSG:3857');\n\n                features.push(\n                  new Feature({\n                    geometry: line,\n                    finished: false,\n                  })\n                );\n              });\n\n              addLater(features, i * 50);\n            }\n\n            tileLayer.on('postrender', animateFlights);\n          })\n          .catch(function (error) {\n            console.error('Error fetching JSON:', error);\n            console.error('URL:', url);\n          });\n      },\n    });\n\n    const flightsLayer = new VectorLayer({\n      source: flightsSource,\n      style: function (feature) {\n        if (feature.get('finished')) {\n          return style;\n        }\n        return null;\n      },\n    });\n\n    map.addLayer(flightsLayer);\n\n    const pointsPerMs = 0.02;\n    function animateFlights(event) {\n      const vectorContext = getVectorContext(event);\n      const frameState = event.frameState;\n      vectorContext.setStyle(style);\n\n      const features = flightsSource.getFeatures();\n      for (let i = 0; i < features.length; i++) {\n        const feature = features[i];\n        if (!feature.get('finished')) {\n          const coords = feature.getGeometry().getCoordinates();\n          const elapsedTime = frameState.time - feature.get('start');\n          if (elapsedTime >= 0) {\n            const elapsedPoints = elapsedTime * pointsPerMs;\n\n            if (elapsedPoints >= coords.length) {\n              feature.set('finished', true);\n            }\n\n            const maxIndex = Math.min(elapsedPoints, coords.length);\n            const currentLine = new LineString(coords.slice(0, maxIndex));\n\n            const worldWidth = getWidth(map.getView().calculateExtent());\n            const offset = Math.floor(map.getView().getCenter()[0] / worldWidth);\n\n            currentLine.translate(offset * worldWidth, 0);\n            vectorContext.drawGeometry(currentLine);\n            currentLine.translate(worldWidth, 0);\n            vectorContext.drawGeometry(currentLine);\n          }\n        }\n      }\n\n      map.render();\n    }\n\n    function addLater(features, timeout) {\n      window.setTimeout(function () {\n        let start = Date.now();\n        features.forEach(function (feature) {\n          feature.set('start', start);\n          flightsSource.addFeature(feature);\n          const duration =\n            (feature.getGeometry().getCoordinates().length - 1) / pointsPerMs;\n          start += duration;\n        });\n      }, timeout);\n    }\n\n    map.setTarget(this.mapRef);\n  }\n\n  render() {\n    return <div ref={(ref) => (this.mapRef = ref)} className=\"map\" />;\n  }\n}\n\nexport default MapComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}