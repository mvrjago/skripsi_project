{"ast":null,"code":"'use strict';\n\nvar D2R = Math.PI / 180;\nvar R2D = 180 / Math.PI;\nvar Coord = function Coord(lon, lat) {\n  this.lon = lon;\n  this.lat = lat;\n  this.x = D2R * lon;\n  this.y = D2R * lat;\n};\nvar roundCoords = function roundCoords(coords) {\n  // round coordinate decimal values to 6 places\n  var PRECISION = 6;\n  var MULTIPLIER = Math.pow(10, PRECISION);\n  for (var i = 0; i < coords.length; i++) {\n    // https://stackoverflow.com/questions/11832914/how-to-round-to-at-most-2-decimal-places-if-necessary\n    coords[i] = Math.round((coords[i] + Number.EPSILON) * MULTIPLIER) / MULTIPLIER;\n  }\n  return coords;\n};\nCoord.prototype.view = function () {\n  return String(this.lon).slice(0, 4) + ',' + String(this.lat).slice(0, 4);\n};\nCoord.prototype.antipode = function () {\n  var anti_lat = -1 * this.lat;\n  var anti_lon = this.lon < 0 ? 180 + this.lon : (180 - this.lon) * -1;\n  return new Coord(anti_lon, anti_lat);\n};\nvar LineString = function LineString() {\n  this.coords = [];\n  this.length = 0;\n};\nLineString.prototype.move_to = function (coord) {\n  this.length++;\n  this.coords.push(coord);\n};\nvar Arc = function Arc(properties) {\n  this.properties = properties || {};\n  this.geometries = [];\n};\nArc.prototype.json = function () {\n  if (this.geometries.length <= 0) {\n    return {\n      'geometry': {\n        'type': 'LineString',\n        'coordinates': null\n      },\n      'type': 'Feature',\n      'properties': this.properties\n    };\n  } else if (this.geometries.length == 1) {\n    return {\n      'geometry': {\n        'type': 'LineString',\n        'coordinates': this.geometries[0].coords\n      },\n      'type': 'Feature',\n      'properties': this.properties\n    };\n  } else {\n    var multiline = [];\n    for (var i = 0; i < this.geometries.length; i++) {\n      multiline.push(this.geometries[i].coords);\n    }\n    return {\n      'geometry': {\n        'type': 'MultiLineString',\n        'coordinates': multiline\n      },\n      'type': 'Feature',\n      'properties': this.properties\n    };\n  }\n};\n\n// TODO - output proper multilinestring\nArc.prototype.wkt = function () {\n  var wkt_string = '';\n  var wkt = 'LINESTRING(';\n  var collect = function collect(c) {\n    wkt += c[0] + ' ' + c[1] + ',';\n  };\n  for (var i = 0; i < this.geometries.length; i++) {\n    if (this.geometries[i].coords.length === 0) {\n      return 'LINESTRING(empty)';\n    } else {\n      var coords = this.geometries[i].coords;\n      coords.forEach(collect);\n      wkt_string += wkt.substring(0, wkt.length - 1) + ')';\n    }\n  }\n  return wkt_string;\n};\n\n/*\n * http://en.wikipedia.org/wiki/Great-circle_distance\n *\n */\nvar GreatCircle = function GreatCircle(start, end, properties) {\n  if (!start || start.x === undefined || start.y === undefined) {\n    throw new Error(\"GreatCircle constructor expects two args: start and end objects with x and y properties\");\n  }\n  if (!end || end.x === undefined || end.y === undefined) {\n    throw new Error(\"GreatCircle constructor expects two args: start and end objects with x and y properties\");\n  }\n  this.start = new Coord(start.x, start.y);\n  this.end = new Coord(end.x, end.y);\n  this.properties = properties || {};\n  var w = this.start.x - this.end.x;\n  var h = this.start.y - this.end.y;\n  var z = Math.pow(Math.sin(h / 2.0), 2) + Math.cos(this.start.y) * Math.cos(this.end.y) * Math.pow(Math.sin(w / 2.0), 2);\n  this.g = 2.0 * Math.asin(Math.sqrt(z));\n  if (this.g == Math.PI) {\n    throw new Error('it appears ' + this.start.view() + ' and ' + this.end.view() + \" are 'antipodal', e.g diametrically opposite, thus there is no single route but rather infinite\");\n  } else if (isNaN(this.g)) {\n    throw new Error('could not calculate great circle between ' + start + ' and ' + end);\n  }\n};\n\n/*\n * http://williams.best.vwh.net/avform.htm#Intermediate\n */\nGreatCircle.prototype.interpolate = function (f) {\n  var A = Math.sin((1 - f) * this.g) / Math.sin(this.g);\n  var B = Math.sin(f * this.g) / Math.sin(this.g);\n  var x = A * Math.cos(this.start.y) * Math.cos(this.start.x) + B * Math.cos(this.end.y) * Math.cos(this.end.x);\n  var y = A * Math.cos(this.start.y) * Math.sin(this.start.x) + B * Math.cos(this.end.y) * Math.sin(this.end.x);\n  var z = A * Math.sin(this.start.y) + B * Math.sin(this.end.y);\n  var lat = R2D * Math.atan2(z, Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2)));\n  var lon = R2D * Math.atan2(y, x);\n  return [lon, lat];\n};\n\n/*\n * Generate points along the great circle\n */\nGreatCircle.prototype.Arc = function (npoints, options) {\n  var first_pass = [];\n  if (!npoints || npoints <= 2) {\n    first_pass.push([this.start.lon, this.start.lat]);\n    first_pass.push([this.end.lon, this.end.lat]);\n  } else {\n    var delta = 1.0 / (npoints - 1);\n    for (var i = 0; i < npoints; ++i) {\n      var step = delta * i;\n      var pair = this.interpolate(step);\n      first_pass.push(pair);\n    }\n  }\n  /* partial port of dateline handling from:\n    gdal/ogr/ogrgeometryfactory.cpp\n     TODO - does not handle all wrapping scenarios yet\n  */\n  var bHasBigDiff = false;\n  var dfMaxSmallDiffLong = 0;\n  // from http://www.gdal.org/ogr2ogr.html\n  // -datelineoffset:\n  // (starting with GDAL 1.10) offset from dateline in degrees (default long. = +/- 10deg, geometries within 170deg to -170deg will be splited)\n  var dfDateLineOffset = options && options.offset ? options.offset : 10;\n  var dfLeftBorderX = 180 - dfDateLineOffset;\n  var dfRightBorderX = -180 + dfDateLineOffset;\n  var dfDiffSpace = 360 - dfDateLineOffset;\n\n  // https://github.com/OSGeo/gdal/blob/7bfb9c452a59aac958bff0c8386b891edf8154ca/gdal/ogr/ogrgeometryfactory.cpp#L2342\n  for (var j = 1; j < first_pass.length; ++j) {\n    var dfPrevX = first_pass[j - 1][0];\n    var dfX = first_pass[j][0];\n    var dfDiffLong = Math.abs(dfX - dfPrevX);\n    if (dfDiffLong > dfDiffSpace && (dfX > dfLeftBorderX && dfPrevX < dfRightBorderX || dfPrevX > dfLeftBorderX && dfX < dfRightBorderX)) {\n      bHasBigDiff = true;\n    } else if (dfDiffLong > dfMaxSmallDiffLong) {\n      dfMaxSmallDiffLong = dfDiffLong;\n    }\n  }\n  var poMulti = [];\n  if (bHasBigDiff && dfMaxSmallDiffLong < dfDateLineOffset) {\n    var poNewLS = [];\n    poMulti.push(poNewLS);\n    for (var k = 0; k < first_pass.length; ++k) {\n      var dfX0 = parseFloat(first_pass[k][0]);\n      if (k > 0 && Math.abs(dfX0 - first_pass[k - 1][0]) > dfDiffSpace) {\n        var dfX1 = parseFloat(first_pass[k - 1][0]);\n        var dfY1 = parseFloat(first_pass[k - 1][1]);\n        var dfX2 = parseFloat(first_pass[k][0]);\n        var dfY2 = parseFloat(first_pass[k][1]);\n        if (dfX1 > -180 && dfX1 < dfRightBorderX && dfX2 == 180 && k + 1 < first_pass.length && first_pass[k - 1][0] > -180 && first_pass[k - 1][0] < dfRightBorderX) {\n          poNewLS.push([-180, first_pass[k][1]]);\n          k++;\n          poNewLS.push([first_pass[k][0], first_pass[k][1]]);\n          continue;\n        } else if (dfX1 > dfLeftBorderX && dfX1 < 180 && dfX2 == -180 && k + 1 < first_pass.length && first_pass[k - 1][0] > dfLeftBorderX && first_pass[k - 1][0] < 180) {\n          poNewLS.push([180, first_pass[k][1]]);\n          k++;\n          poNewLS.push([first_pass[k][0], first_pass[k][1]]);\n          continue;\n        }\n        if (dfX1 < dfRightBorderX && dfX2 > dfLeftBorderX) {\n          // swap dfX1, dfX2\n          var tmpX = dfX1;\n          dfX1 = dfX2;\n          dfX2 = tmpX;\n          // swap dfY1, dfY2\n          var tmpY = dfY1;\n          dfY1 = dfY2;\n          dfY2 = tmpY;\n        }\n        if (dfX1 > dfLeftBorderX && dfX2 < dfRightBorderX) {\n          dfX2 += 360;\n        }\n        if (dfX1 <= 180 && dfX2 >= 180 && dfX1 < dfX2) {\n          var dfRatio = (180 - dfX1) / (dfX2 - dfX1);\n          var dfY = dfRatio * dfY2 + (1 - dfRatio) * dfY1;\n          poNewLS.push([first_pass[k - 1][0] > dfLeftBorderX ? 180 : -180, dfY]);\n          poNewLS = [];\n          poNewLS.push([first_pass[k - 1][0] > dfLeftBorderX ? -180 : 180, dfY]);\n          poMulti.push(poNewLS);\n        } else {\n          poNewLS = [];\n          poMulti.push(poNewLS);\n        }\n        poNewLS.push([dfX0, first_pass[k][1]]);\n      } else {\n        poNewLS.push([first_pass[k][0], first_pass[k][1]]);\n      }\n    }\n  } else {\n    // add normally\n    var poNewLS0 = [];\n    poMulti.push(poNewLS0);\n    for (var l = 0; l < first_pass.length; ++l) {\n      poNewLS0.push([first_pass[l][0], first_pass[l][1]]);\n    }\n  }\n  var arc = new Arc(this.properties);\n  for (var m = 0; m < poMulti.length; ++m) {\n    var line = new LineString();\n    arc.geometries.push(line);\n    var points = poMulti[m];\n    for (var j0 = 0; j0 < points.length; ++j0) {\n      line.move_to(roundCoords(points[j0]));\n    }\n  }\n  return arc;\n};\nif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  // nodejs\n  module.exports.Coord = Coord;\n  module.exports.Arc = Arc;\n  module.exports.GreatCircle = GreatCircle;\n} else {\n  // browser\n  var arc = {};\n  arc.Coord = Coord;\n  arc.Arc = Arc;\n  arc.GreatCircle = GreatCircle;\n}","map":{"version":3,"names":["D2R","Math","PI","R2D","Coord","lon","lat","x","y","roundCoords","coords","PRECISION","MULTIPLIER","pow","i","length","round","Number","EPSILON","prototype","view","String","slice","antipode","anti_lat","anti_lon","LineString","move_to","coord","push","Arc","properties","geometries","json","multiline","wkt","wkt_string","collect","c","forEach","substring","GreatCircle","start","end","undefined","Error","w","h","z","sin","cos","g","asin","sqrt","isNaN","interpolate","f","A","B","atan2","npoints","options","first_pass","delta","step","pair","bHasBigDiff","dfMaxSmallDiffLong","dfDateLineOffset","offset","dfLeftBorderX","dfRightBorderX","dfDiffSpace","j","dfPrevX","dfX","dfDiffLong","abs","poMulti","poNewLS","k","dfX0","parseFloat","dfX1","dfY1","dfX2","dfY2","tmpX","tmpY","dfRatio","dfY","poNewLS0","l","arc","m","line","points","j0","module","exports"],"sources":["/Users/mariovicky/Skripsi_OpenLayers/node_modules/arc/arc.js"],"sourcesContent":["'use strict';\n\nvar D2R = Math.PI / 180;\nvar R2D = 180 / Math.PI;\n\nvar Coord = function(lon,lat) {\n    this.lon = lon;\n    this.lat = lat;\n    this.x = D2R * lon;\n    this.y = D2R * lat;\n};\n\nvar roundCoords = function(coords) {\n    // round coordinate decimal values to 6 places\n    var PRECISION = 6;\n    var MULTIPLIER = Math.pow(10, PRECISION)\n\n    for (var i = 0; i < coords.length; i++) {\n        // https://stackoverflow.com/questions/11832914/how-to-round-to-at-most-2-decimal-places-if-necessary\n        coords[i] = Math.round(\n            (coords[i] + Number.EPSILON) * MULTIPLIER\n        ) / MULTIPLIER\n    }\n\n    return coords;\n}\n\nCoord.prototype.view = function() {\n    return String(this.lon).slice(0, 4) + ',' + String(this.lat).slice(0, 4);\n};\n\nCoord.prototype.antipode = function() {\n    var anti_lat = -1 * this.lat;\n    var anti_lon = (this.lon < 0) ? 180 + this.lon : (180 - this.lon) * -1;\n    return new Coord(anti_lon, anti_lat);\n};\n\nvar LineString = function() {\n    this.coords = [];\n    this.length = 0;\n};\n\nLineString.prototype.move_to = function(coord) {\n    this.length++;\n    this.coords.push(coord);\n};\n\nvar Arc = function(properties) {\n    this.properties = properties || {};\n    this.geometries = [];\n};\n\nArc.prototype.json = function() {\n    if (this.geometries.length <= 0) {\n        return {'geometry': { 'type': 'LineString', 'coordinates': null },\n                'type': 'Feature', 'properties': this.properties\n               };\n    } else if (this.geometries.length == 1) {\n        return {'geometry': { 'type': 'LineString', 'coordinates': this.geometries[0].coords },\n                'type': 'Feature', 'properties': this.properties\n               };\n    } else {\n        var multiline = [];\n        for (var i = 0; i < this.geometries.length; i++) {\n            multiline.push(this.geometries[i].coords);\n        }\n        return {'geometry': { 'type': 'MultiLineString', 'coordinates': multiline },\n                'type': 'Feature', 'properties': this.properties\n               };\n    }\n};\n\n// TODO - output proper multilinestring\nArc.prototype.wkt = function() {\n    var wkt_string = '';\n    var wkt = 'LINESTRING(';\n    var collect = function(c) { wkt += c[0] + ' ' + c[1] + ','; };\n    for (var i = 0; i < this.geometries.length; i++) {\n        if (this.geometries[i].coords.length === 0) {\n            return 'LINESTRING(empty)';\n        } else {\n            var coords = this.geometries[i].coords;\n            coords.forEach(collect);\n            wkt_string += wkt.substring(0, wkt.length - 1) + ')';\n        }\n    }\n    return wkt_string;\n};\n\n/*\n * http://en.wikipedia.org/wiki/Great-circle_distance\n *\n */\nvar GreatCircle = function(start,end,properties) {\n    if (!start || start.x === undefined || start.y === undefined) {\n        throw new Error(\"GreatCircle constructor expects two args: start and end objects with x and y properties\");\n    }\n    if (!end || end.x === undefined || end.y === undefined) {\n        throw new Error(\"GreatCircle constructor expects two args: start and end objects with x and y properties\");\n    }\n    this.start = new Coord(start.x,start.y);\n    this.end = new Coord(end.x,end.y);\n    this.properties = properties || {};\n\n    var w = this.start.x - this.end.x;\n    var h = this.start.y - this.end.y;\n    var z = Math.pow(Math.sin(h / 2.0), 2) +\n                Math.cos(this.start.y) *\n                   Math.cos(this.end.y) *\n                     Math.pow(Math.sin(w / 2.0), 2);\n    this.g = 2.0 * Math.asin(Math.sqrt(z));\n\n    if (this.g == Math.PI) {\n        throw new Error('it appears ' + this.start.view() + ' and ' + this.end.view() + \" are 'antipodal', e.g diametrically opposite, thus there is no single route but rather infinite\");\n    } else if (isNaN(this.g)) {\n        throw new Error('could not calculate great circle between ' + start + ' and ' + end);\n    }\n};\n\n/*\n * http://williams.best.vwh.net/avform.htm#Intermediate\n */\nGreatCircle.prototype.interpolate = function(f) {\n    var A = Math.sin((1 - f) * this.g) / Math.sin(this.g);\n    var B = Math.sin(f * this.g) / Math.sin(this.g);\n    var x = A * Math.cos(this.start.y) * Math.cos(this.start.x) + B * Math.cos(this.end.y) * Math.cos(this.end.x);\n    var y = A * Math.cos(this.start.y) * Math.sin(this.start.x) + B * Math.cos(this.end.y) * Math.sin(this.end.x);\n    var z = A * Math.sin(this.start.y) + B * Math.sin(this.end.y);\n    var lat = R2D * Math.atan2(z, Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2)));\n    var lon = R2D * Math.atan2(y, x);\n    return [lon, lat];\n};\n\n\n\n/*\n * Generate points along the great circle\n */\nGreatCircle.prototype.Arc = function(npoints,options) {\n    var first_pass = [];\n    if (!npoints || npoints <= 2) {\n        first_pass.push([this.start.lon, this.start.lat]);\n        first_pass.push([this.end.lon, this.end.lat]);\n    } else {\n        var delta = 1.0 / (npoints - 1);\n        for (var i = 0; i < npoints; ++i) {\n            var step = delta * i;\n            var pair = this.interpolate(step);\n            first_pass.push(pair);\n        }\n    }\n    /* partial port of dateline handling from:\n      gdal/ogr/ogrgeometryfactory.cpp\n\n      TODO - does not handle all wrapping scenarios yet\n    */\n    var bHasBigDiff = false;\n    var dfMaxSmallDiffLong = 0;\n    // from http://www.gdal.org/ogr2ogr.html\n    // -datelineoffset:\n    // (starting with GDAL 1.10) offset from dateline in degrees (default long. = +/- 10deg, geometries within 170deg to -170deg will be splited)\n    var dfDateLineOffset = options && options.offset ? options.offset : 10;\n    var dfLeftBorderX = 180 - dfDateLineOffset;\n    var dfRightBorderX = -180 + dfDateLineOffset;\n    var dfDiffSpace = 360 - dfDateLineOffset;\n\n    // https://github.com/OSGeo/gdal/blob/7bfb9c452a59aac958bff0c8386b891edf8154ca/gdal/ogr/ogrgeometryfactory.cpp#L2342\n    for (var j = 1; j < first_pass.length; ++j) {\n        var dfPrevX = first_pass[j-1][0];\n        var dfX = first_pass[j][0];\n        var dfDiffLong = Math.abs(dfX - dfPrevX);\n        if (dfDiffLong > dfDiffSpace &&\n            ((dfX > dfLeftBorderX && dfPrevX < dfRightBorderX) || (dfPrevX > dfLeftBorderX && dfX < dfRightBorderX))) {\n            bHasBigDiff = true;\n        } else if (dfDiffLong > dfMaxSmallDiffLong) {\n            dfMaxSmallDiffLong = dfDiffLong;\n        }\n    }\n\n    var poMulti = [];\n    if (bHasBigDiff && dfMaxSmallDiffLong < dfDateLineOffset) {\n        var poNewLS = [];\n        poMulti.push(poNewLS);\n        for (var k = 0; k < first_pass.length; ++k) {\n            var dfX0 = parseFloat(first_pass[k][0]);\n            if (k > 0 &&  Math.abs(dfX0 - first_pass[k-1][0]) > dfDiffSpace) {\n                var dfX1 = parseFloat(first_pass[k-1][0]);\n                var dfY1 = parseFloat(first_pass[k-1][1]);\n                var dfX2 = parseFloat(first_pass[k][0]);\n                var dfY2 = parseFloat(first_pass[k][1]);\n                if (dfX1 > -180 && dfX1 < dfRightBorderX && dfX2 == 180 &&\n                    k+1 < first_pass.length &&\n                   first_pass[k-1][0] > -180 && first_pass[k-1][0] < dfRightBorderX)\n                {\n                     poNewLS.push([-180, first_pass[k][1]]);\n                     k++;\n                     poNewLS.push([first_pass[k][0], first_pass[k][1]]);\n                     continue;\n                } else if (dfX1 > dfLeftBorderX && dfX1 < 180 && dfX2 == -180 &&\n                     k+1 < first_pass.length &&\n                     first_pass[k-1][0] > dfLeftBorderX && first_pass[k-1][0] < 180)\n                {\n                     poNewLS.push([180, first_pass[k][1]]);\n                     k++;\n                     poNewLS.push([first_pass[k][0], first_pass[k][1]]);\n                     continue;\n                }\n\n                if (dfX1 < dfRightBorderX && dfX2 > dfLeftBorderX)\n                {\n                    // swap dfX1, dfX2\n                    var tmpX = dfX1;\n                    dfX1 = dfX2;\n                    dfX2 = tmpX;\n                    // swap dfY1, dfY2\n                    var tmpY = dfY1;\n                    dfY1 = dfY2;\n                    dfY2 = tmpY;\n                }\n                if (dfX1 > dfLeftBorderX && dfX2 < dfRightBorderX) {\n                    dfX2 += 360;\n                }\n\n                if (dfX1 <= 180 && dfX2 >= 180 && dfX1 < dfX2)\n                {\n                    var dfRatio = (180 - dfX1) / (dfX2 - dfX1);\n                    var dfY = dfRatio * dfY2 + (1 - dfRatio) * dfY1;\n                    poNewLS.push([first_pass[k-1][0] > dfLeftBorderX ? 180 : -180, dfY]);\n                    poNewLS = [];\n                    poNewLS.push([first_pass[k-1][0] > dfLeftBorderX ? -180 : 180, dfY]);\n                    poMulti.push(poNewLS);\n                }\n                else\n                {\n                    poNewLS = [];\n                    poMulti.push(poNewLS);\n                }\n                poNewLS.push([dfX0, first_pass[k][1]]);\n            } else {\n                poNewLS.push([first_pass[k][0], first_pass[k][1]]);\n            }\n        }\n    } else {\n        // add normally\n        var poNewLS0 = [];\n        poMulti.push(poNewLS0);\n        for (var l = 0; l < first_pass.length; ++l) {\n            poNewLS0.push([first_pass[l][0],first_pass[l][1]]);\n        }\n    }\n\n    var arc = new Arc(this.properties);\n    for (var m = 0; m < poMulti.length; ++m) {\n        var line = new LineString();\n        arc.geometries.push(line);\n        var points = poMulti[m];\n        for (var j0 = 0; j0 < points.length; ++j0) {\n            line.move_to(roundCoords(points[j0]));\n        }\n    }\n    return arc;\n};\n\nif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  // nodejs\n  module.exports.Coord = Coord;\n  module.exports.Arc = Arc;\n  module.exports.GreatCircle = GreatCircle;\n\n} else {\n  // browser\n  var arc = {};\n  arc.Coord = Coord;\n  arc.Arc = Arc;\n  arc.GreatCircle = GreatCircle;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}