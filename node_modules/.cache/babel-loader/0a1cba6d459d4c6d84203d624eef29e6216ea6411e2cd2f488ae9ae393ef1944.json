{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LENGTH: 'length'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nvar CollectionEvent = /** @class */function (_super) {\n  __extends(CollectionEvent, _super);\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {*=} opt_element Element.\n   * @param {number=} opt_index The index of the added or removed element.\n   */\n  function CollectionEvent(type, opt_element, opt_index) {\n    var _this = _super.call(this, type) || this;\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    _this.element = opt_element;\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    _this.index = opt_index;\n    return _this;\n  }\n  return CollectionEvent;\n}(Event);\nexport { CollectionEvent };\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /** @class */function (_super) {\n  __extends(Collection, _super);\n  /**\n   * @param {Array<T>=} opt_array Array.\n   * @param {Options=} opt_options Collection options.\n   */\n  function Collection(opt_array, opt_options) {\n    var _this = _super.call(this) || this;\n    var options = opt_options || {};\n    /**\n     * @private\n     * @type {boolean}\n     */\n    _this.unique_ = !!options.unique;\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    _this.array_ = opt_array ? opt_array : [];\n    if (_this.unique_) {\n      for (var i = 0, ii = _this.array_.length; i < ii; ++i) {\n        _this.assertUnique_(_this.array_[i], i);\n      }\n    }\n    _this.updateLength_();\n    return _this;\n  }\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  Collection.prototype.clear = function () {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  };\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  Collection.prototype.extend = function (arr) {\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  };\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  Collection.prototype.forEach = function (f) {\n    var array = this.array_;\n    for (var i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  };\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  Collection.prototype.getArray = function () {\n    return this.array_;\n  };\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  Collection.prototype.item = function (index) {\n    return this.array_[index];\n  };\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  Collection.prototype.getLength = function () {\n    return this.get(Property.LENGTH);\n  };\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  Collection.prototype.insertAt = function (index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n  };\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  Collection.prototype.pop = function () {\n    return this.removeAt(this.getLength() - 1);\n  };\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  Collection.prototype.push = function (elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    var n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  };\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  Collection.prototype.remove = function (elem) {\n    var arr = this.array_;\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  };\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  Collection.prototype.removeAt = function (index) {\n    var prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n    return prev;\n  };\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  Collection.prototype.setAt = function (index, elem) {\n    var n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      var prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n      this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n    } else {\n      for (var j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  };\n  /**\n   * @private\n   */\n  Collection.prototype.updateLength_ = function () {\n    this.set(Property.LENGTH, this.array_.length);\n  };\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number=} opt_except Optional index to ignore.\n   */\n  Collection.prototype.assertUnique_ = function (elem, opt_except) {\n    for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  };\n  return Collection;\n}(BaseObject);\nexport default Collection;","map":{"version":3,"names":["AssertionError","BaseObject","CollectionEventType","Event","Property","LENGTH","CollectionEvent","_super","__extends","type","opt_element","opt_index","_this","call","element","index","Collection","opt_array","opt_options","options","unique_","unique","array_","i","ii","length","assertUnique_","updateLength_","prototype","clear","getLength","pop","extend","arr","push","forEach","f","array","getArray","item","get","insertAt","elem","splice","dispatchEvent","ADD","removeAt","n","remove","undefined","prev","REMOVE","setAt","j","set","opt_except"],"sources":["/Users/mariovicky/Skripsi_OpenLayers/node_modules/ol/src/Collection.js"],"sourcesContent":["/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {*=} opt_element Element.\n   * @param {number=} opt_index The index of the added or removed element.\n   */\n  constructor(type, opt_element, opt_index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = opt_index;\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>=} opt_array Array.\n   * @param {Options=} opt_options Collection options.\n   */\n  constructor(opt_array, opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      const prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      );\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      );\n    } else {\n      for (let j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number=} opt_except Optional index to ignore.\n   */\n  assertUnique_(elem, opt_except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}