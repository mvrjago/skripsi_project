{"ast":null,"code":"/**\n * @module ol/webgl\n */\n/**\n * Constants taken from goog.webgl\n */\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing vertices data, such as\n * position, color, texture coordinate, etc. These vertices are then referenced by an index buffer\n * to be drawn on screen (see {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER}).\n * @const\n * @type {number}\n * @api\n */\nexport var ARRAY_BUFFER = 0x8892;\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing indices data.\n * Index buffers are essentially lists of references to vertices defined in a vertex buffer\n * (see {@link module:ol/webgl.ARRAY_BUFFER}), and define the primitives (triangles) to be drawn.\n * @const\n * @type {number}\n * @api\n */\nexport var ELEMENT_ARRAY_BUFFER = 0x8893;\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport var STREAM_DRAW = 0x88e0;\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport var STATIC_DRAW = 0x88e4;\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport var DYNAMIC_DRAW = 0x88e8;\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_BYTE = 0x1401;\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_SHORT = 0x1403;\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_INT = 0x1405;\n/**\n * @const\n * @type {number}\n */\nexport var FLOAT = 0x1406;\n/** end of goog.webgl constants\n */\n/**\n * @const\n * @type {Array<string>}\n */\nvar CONTEXT_IDS = ['experimental-webgl', 'webgl', 'webkit-3d', 'moz-webgl'];\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object=} opt_attributes Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, opt_attributes) {\n  var ii = CONTEXT_IDS.length;\n  for (var i = 0; i < ii; ++i) {\n    try {\n      var context = canvas.getContext(CONTEXT_IDS[i], opt_attributes);\n      if (context) {\n        return (/** @type {!WebGLRenderingContext} */context\n        );\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n}\n/**\n * @type {Array<string>}\n */\nvar supportedExtensions;\n/**\n * @return {Array<string>} List of supported WebGL extensions.\n */\nexport function getSupportedExtensions() {\n  if (!supportedExtensions) {\n    var canvas = document.createElement('canvas');\n    var gl = getContext(canvas);\n    if (gl) {\n      supportedExtensions = gl.getSupportedExtensions();\n    }\n  }\n  return supportedExtensions;\n}","map":{"version":3,"names":["ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","STREAM_DRAW","STATIC_DRAW","DYNAMIC_DRAW","UNSIGNED_BYTE","UNSIGNED_SHORT","UNSIGNED_INT","FLOAT","CONTEXT_IDS","getContext","canvas","opt_attributes","ii","length","i","context","e","supportedExtensions","getSupportedExtensions","document","createElement","gl"],"sources":["/Users/mariovicky/Skripsi_OpenLayers/node_modules/ol/src/webgl.js"],"sourcesContent":["/**\n * @module ol/webgl\n */\n\n/**\n * Constants taken from goog.webgl\n */\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing vertices data, such as\n * position, color, texture coordinate, etc. These vertices are then referenced by an index buffer\n * to be drawn on screen (see {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER}).\n * @const\n * @type {number}\n * @api\n */\nexport const ARRAY_BUFFER = 0x8892;\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing indices data.\n * Index buffers are essentially lists of references to vertices defined in a vertex buffer\n * (see {@link module:ol/webgl.ARRAY_BUFFER}), and define the primitives (triangles) to be drawn.\n * @const\n * @type {number}\n * @api\n */\nexport const ELEMENT_ARRAY_BUFFER = 0x8893;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STREAM_DRAW = 0x88e0;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STATIC_DRAW = 0x88e4;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const DYNAMIC_DRAW = 0x88e8;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_BYTE = 0x1401;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_SHORT = 0x1403;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_INT = 0x1405;\n\n/**\n * @const\n * @type {number}\n */\nexport const FLOAT = 0x1406;\n\n/** end of goog.webgl constants\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst CONTEXT_IDS = ['experimental-webgl', 'webgl', 'webkit-3d', 'moz-webgl'];\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object=} opt_attributes Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, opt_attributes) {\n  const ii = CONTEXT_IDS.length;\n  for (let i = 0; i < ii; ++i) {\n    try {\n      const context = canvas.getContext(CONTEXT_IDS[i], opt_attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */ (context);\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n}\n\n/**\n * @type {Array<string>}\n */\nlet supportedExtensions;\n\n/**\n * @return {Array<string>} List of supported WebGL extensions.\n */\nexport function getSupportedExtensions() {\n  if (!supportedExtensions) {\n    const canvas = document.createElement('canvas');\n    const gl = getContext(canvas);\n    if (gl) {\n      supportedExtensions = gl.getSupportedExtensions();\n    }\n  }\n  return supportedExtensions;\n}\n"],"mappings":"AAAA;;;AAIA;;;AAIA;;;;;;;;AAQA,OAAO,IAAMA,YAAY,GAAG,MAAM;AAElC;;;;;;;;AAQA,OAAO,IAAMC,oBAAoB,GAAG,MAAM;AAE1C;;;;;;AAMA,OAAO,IAAMC,WAAW,GAAG,MAAM;AAEjC;;;;;;AAMA,OAAO,IAAMC,WAAW,GAAG,MAAM;AAEjC;;;;;;AAMA,OAAO,IAAMC,YAAY,GAAG,MAAM;AAElC;;;;AAIA,OAAO,IAAMC,aAAa,GAAG,MAAM;AAEnC;;;;AAIA,OAAO,IAAMC,cAAc,GAAG,MAAM;AAEpC;;;;AAIA,OAAO,IAAMC,YAAY,GAAG,MAAM;AAElC;;;;AAIA,OAAO,IAAMC,KAAK,GAAG,MAAM;AAE3B;;AAGA;;;;AAIA,IAAMC,WAAW,GAAG,CAAC,oBAAoB,EAAE,OAAO,EAAE,WAAW,EAAE,WAAW,CAAC;AAE7E;;;;;AAKA,OAAM,SAAUC,UAAUA,CAACC,MAAM,EAAEC,cAAc;EAC/C,IAAMC,EAAE,GAAGJ,WAAW,CAACK,MAAM;EAC7B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,EAAE,EAAE,EAAEE,CAAC,EAAE;IAC3B,IAAI;MACF,IAAMC,OAAO,GAAGL,MAAM,CAACD,UAAU,CAACD,WAAW,CAACM,CAAC,CAAC,EAAEH,cAAc,CAAC;MACjE,IAAII,OAAO,EAAE;QACX,OAAO,sCAAuCA;QAAO;;KAExD,CAAC,OAAOC,CAAC,EAAE;MACV;IAAA;;EAGJ,OAAO,IAAI;AACb;AAEA;;;AAGA,IAAIC,mBAAmB;AAEvB;;;AAGA,OAAM,SAAUC,sBAAsBA,CAAA;EACpC,IAAI,CAACD,mBAAmB,EAAE;IACxB,IAAMP,MAAM,GAAGS,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAC/C,IAAMC,EAAE,GAAGZ,UAAU,CAACC,MAAM,CAAC;IAC7B,IAAIW,EAAE,EAAE;MACNJ,mBAAmB,GAAGI,EAAE,CAACH,sBAAsB,EAAE;;;EAGrD,OAAOD,mBAAmB;AAC5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}