{"ast":null,"code":"'use strict';\n\nconst fs = require('../utils/fs');\nconst _ = require('lodash');\nconst specification = require('./specification');\nconst path = require('path');\nconst extension = require('./extension');\nasync function load(apiDir, spec, loaded) {\n  // validate user schema\n  specification.validateSchema(spec);\n\n  // load disk schema\n  const diskSchema = await specification.loadSchema(apiDir, spec);\n\n  // validate user schema content using the real schema\n  specification.validateContent(spec, diskSchema);\n  return loadSpecs(apiDir, spec, diskSchema, loaded);\n}\nasync function loadSpecs(location, userSpec, loadedSpec, loaded) {\n  const existingSpecs = [];\n  for (const spec of userSpec) {\n    existingSpecs.push(spec.name);\n    if (spec.type === 'module') {\n      const loadedModule = fs.loadModules(path.join(location, spec.name), true);\n      loaded[loadedModule.name] = loadedModule.data;\n    } else if (spec.type === 'component') {\n      const loadedComponent = _.find(loadedSpec, {\n        name: spec.name\n      });\n      if (!loaded[spec.name]) {\n        loaded[spec.name] = {};\n      }\n      loadComponent(location, spec, loadedComponent, loaded[spec.name]);\n      await extension.execComponent({\n        location,\n        component: loaded[spec.name],\n        componentName: spec.name\n      });\n    }\n  }\n  for (const spec of loadedSpec) {\n    if (_.includes(existingSpecs, spec.name)) {\n      continue;\n    }\n    existingSpecs.push(spec.name);\n    if (spec.type === 'module') {\n      const loadedModule = fs.loadModules(path.join(location, spec.name), true);\n      loaded[loadedModule.name] = loadedModule.data;\n    } else if (spec.type === 'component') {\n      if (!loaded[spec.name]) {\n        loaded[spec.name] = {};\n      }\n      loadComponent(location, spec, null, loaded[spec.name]);\n      await extension.execComponent({\n        location,\n        component: loaded[spec.name],\n        componentName: spec.name\n      });\n    }\n  }\n  return loaded;\n}\nfunction loadComponent(location, userComponent, loadedComponent, loadedModules) {\n  const validationArray = [];\n  _.forEach(userComponent.modules, moduleToLoad => {\n    _loadModules(validationArray, loadedModules, moduleToLoad, location, userComponent.name, moduleToLoad.name);\n  });\n  if (loadedComponent) {\n    _.forEach(loadedComponent.modules, moduleToLoad => {\n      _loadModules(validationArray, loadedModules, moduleToLoad, location, loadedComponent.name, moduleToLoad.name);\n    });\n  }\n  return loadedModules;\n}\nfunction _loadModules(validationArray, loadedModules, moduleToLoad) {\n  if (!_.find(validationArray, moduleToLoad.name)) {\n    for (var _len = arguments.length, modulePath = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n      modulePath[_key - 3] = arguments[_key];\n    }\n    const componentPath = path.join(...modulePath);\n    const loadedModule = fs.loadModules(componentPath, true);\n    loadedModules[loadedModule.name] = loadedModule.data;\n    validationArray.push(loadedModule.name);\n  }\n}\nmodule.exports = {\n  load,\n  loadSpecs,\n  loadComponent\n};","map":{"version":3,"names":["fs","require","_","specification","path","extension","load","apiDir","spec","loaded","validateSchema","diskSchema","loadSchema","validateContent","loadSpecs","location","userSpec","loadedSpec","existingSpecs","push","name","type","loadedModule","loadModules","join","data","loadedComponent","find","loadComponent","execComponent","component","componentName","includes","userComponent","loadedModules","validationArray","forEach","modules","moduleToLoad","_loadModules","_len","arguments","length","modulePath","Array","_key","componentPath","module","exports"],"sources":["/Users/mariovicky/Skripsi_OpenLayers/node_modules/arc.js/lib/loader.js"],"sourcesContent":["'use strict';\n\nconst fs = require('../utils/fs');\nconst _ = require('lodash');\nconst specification = require('./specification');\nconst path = require('path');\nconst extension = require('./extension');\n\nasync function load (apiDir, spec, loaded) {\n  // validate user schema\n  specification.validateSchema(spec);\n\n  // load disk schema\n  const diskSchema = await specification.loadSchema(apiDir, spec);\n\n  // validate user schema content using the real schema\n  specification.validateContent(spec, diskSchema);\n\n  return loadSpecs(apiDir, spec, diskSchema, loaded);\n}\n\nasync function loadSpecs (location, userSpec, loadedSpec, loaded) {\n  const existingSpecs = [];\n\n  for (const spec of userSpec) {\n    existingSpecs.push(spec.name);\n\n    if (spec.type === 'module') {\n      const loadedModule = fs.loadModules(path.join(location, spec.name), true);\n      loaded[loadedModule.name] = loadedModule.data;\n    }\n    else if (spec.type === 'component') {\n      const loadedComponent = _.find(loadedSpec, { name: spec.name });\n      if (!loaded[spec.name]) {\n        loaded[spec.name] = {};\n      }\n      loadComponent(location, spec, loadedComponent, loaded[spec.name]);\n      await extension.execComponent({\n        location,\n        component: loaded[spec.name],\n        componentName: spec.name\n      });\n    }\n  }\n\n  for (const spec of loadedSpec) {\n    if (_.includes(existingSpecs, spec.name)) {\n      continue;\n    }\n\n    existingSpecs.push(spec.name);\n    if (spec.type === 'module') {\n      const loadedModule = fs.loadModules(path.join(location, spec.name), true);\n      loaded[loadedModule.name] = loadedModule.data;\n    }\n    else if (spec.type === 'component') {\n      if (!loaded[spec.name]) {\n        loaded[spec.name] = {};\n      }\n      loadComponent(location, spec, null, loaded[spec.name]);\n      await extension.execComponent({\n        location,\n        component: loaded[spec.name],\n        componentName: spec.name\n      });\n    }\n  }\n\n  return loaded;\n}\n\nfunction loadComponent (\n  location,\n  userComponent,\n  loadedComponent,\n  loadedModules\n) {\n  const validationArray = [];\n\n  _.forEach(userComponent.modules, (moduleToLoad) => {\n    _loadModules(\n      validationArray,\n      loadedModules,\n      moduleToLoad,\n      location,\n      userComponent.name,\n      moduleToLoad.name\n    );\n  });\n\n  if (loadedComponent) {\n    _.forEach(loadedComponent.modules, (moduleToLoad) => {\n      _loadModules(\n        validationArray,\n        loadedModules,\n        moduleToLoad,\n        location,\n        loadedComponent.name,\n        moduleToLoad.name\n      );\n    });\n  }\n\n  return loadedModules;\n}\n\nfunction _loadModules (\n  validationArray,\n  loadedModules,\n  moduleToLoad,\n  ...modulePath\n) {\n  if (!_.find(validationArray, moduleToLoad.name)) {\n    const componentPath = path.join(...modulePath);\n    const loadedModule = fs.loadModules(componentPath, true);\n    loadedModules[loadedModule.name] = loadedModule.data;\n    validationArray.push(loadedModule.name);\n  }\n}\n\nmodule.exports = {\n  load,\n  loadSpecs,\n  loadComponent\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}