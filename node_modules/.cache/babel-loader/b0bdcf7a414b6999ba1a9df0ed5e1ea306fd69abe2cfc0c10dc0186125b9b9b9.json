{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/interaction/Extent\n */\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport { always } from '../events/condition.js';\nimport { boundingExtent, getArea } from '../extent.js';\nimport { closestOnSegment, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, squaredDistanceToSegment } from '../coordinate.js';\nimport { createEditingStyle } from '../style/Style.js';\nimport { fromExtent as polygonFromExtent } from '../geom/Polygon.js';\nimport { toUserExtent } from '../proj.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~always}.\n * @property {import(\"../extent.js\").Extent} [extent] Initial extent. Defaults to no\n * initial extent.\n * @property {import(\"../style/Style.js\").StyleLike} [boxStyle]\n * Style for the drawn extent box. Defaults to\n * {@link module:ol/style/Style~createEditing()['Polygon']}\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [pointerStyle]\n * Style for the cursor used to draw the extent. Defaults to\n * {@link module:ol/style/Style~createEditing()['Point']}\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\n * in the X direction? Only affects visuals, not functionality.\n */\n/**\n * @enum {string}\n */\nvar ExtentEventType = {\n  /**\n   * Triggered after the extent is changed\n   * @event ExtentEvent#extentchanged\n   * @api\n   */\n  EXTENTCHANGED: 'extentchanged'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Extent~Extent} instances are\n * instances of this type.\n */\nvar ExtentEvent = /** @class */function (_super) {\n  __extends(ExtentEvent, _super);\n  /**\n   * @param {import(\"../extent.js\").Extent} extent the new extent\n   */\n  function ExtentEvent(extent) {\n    var _this = _super.call(this, ExtentEventType.EXTENTCHANGED) || this;\n    /**\n     * The current extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    _this.extent = extent;\n    return _this;\n  }\n  return ExtentEvent;\n}(Event);\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map.\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\n * This interaction is only supported for mouse devices.\n *\n * @fires ExtentEvent\n * @api\n */\nvar Extent = /** @class */function (_super) {\n  __extends(Extent, _super);\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  function Extent(opt_options) {\n    var _this = this;\n    var options = opt_options || {};\n    _this = _super.call(this, /** @type {import(\"./Pointer.js\").Options} */options) || this;\n    /**\n     * Condition\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    _this.condition_ = options.condition ? options.condition : always;\n    /**\n     * Extent of the drawn box\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    _this.extent_ = null;\n    /**\n     * Handler for pointer move events\n     * @type {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null}\n     * @private\n     */\n    _this.pointerHandler_ = null;\n    /**\n     * Pixel threshold to snap to extent\n     * @type {number}\n     * @private\n     */\n    _this.pixelTolerance_ = options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n    /**\n     * Is the pointer snapped to an extent vertex\n     * @type {boolean}\n     * @private\n     */\n    _this.snappedToVertex_ = false;\n    /**\n     * Feature for displaying the visible extent\n     * @type {Feature}\n     * @private\n     */\n    _this.extentFeature_ = null;\n    /**\n     * Feature for displaying the visible pointer\n     * @type {Feature<Point>}\n     * @private\n     */\n    _this.vertexFeature_ = null;\n    if (!opt_options) {\n      opt_options = {};\n    }\n    /**\n     * Layer for the extentFeature\n     * @type {VectorLayer}\n     * @private\n     */\n    _this.extentOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!opt_options.wrapX\n      }),\n      style: opt_options.boxStyle ? opt_options.boxStyle : getDefaultExtentStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n    /**\n     * Layer for the vertexFeature\n     * @type {VectorLayer}\n     * @private\n     */\n    _this.vertexOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!opt_options.wrapX\n      }),\n      style: opt_options.pointerStyle ? opt_options.pointerStyle : getDefaultPointerStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n    if (opt_options.extent) {\n      _this.setExtent(opt_options.extent);\n    }\n    return _this;\n  }\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel cursor location\n   * @param {import(\"../PluggableMap.js\").default} map map\n   * @returns {import(\"../coordinate.js\").Coordinate|null} snapped vertex on extent\n   * @private\n   */\n  Extent.prototype.snapToVertex_ = function (pixel, map) {\n    var pixelCoordinate = map.getCoordinateFromPixelInternal(pixel);\n    var sortByDistance = function sortByDistance(a, b) {\n      return squaredDistanceToSegment(pixelCoordinate, a) - squaredDistanceToSegment(pixelCoordinate, b);\n    };\n    var extent = this.getExtentInternal();\n    if (extent) {\n      //convert extents to line segments and find the segment closest to pixelCoordinate\n      var segments = getSegments(extent);\n      segments.sort(sortByDistance);\n      var closestSegment = segments[0];\n      var vertex = closestOnSegment(pixelCoordinate, closestSegment);\n      var vertexPixel = map.getPixelFromCoordinateInternal(vertex);\n      //if the distance is within tolerance, snap to the segment\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        //test if we should further snap to a vertex\n        var pixel1 = map.getPixelFromCoordinateInternal(closestSegment[0]);\n        var pixel2 = map.getPixelFromCoordinateInternal(closestSegment[1]);\n        var squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n        var squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n        var dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\n        if (this.snappedToVertex_) {\n          vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n        }\n        return vertex;\n      }\n    }\n    return null;\n  };\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent pointer move event\n   * @private\n   */\n  Extent.prototype.handlePointerMove_ = function (mapBrowserEvent) {\n    var pixel = mapBrowserEvent.pixel;\n    var map = mapBrowserEvent.map;\n    var vertex = this.snapToVertex_(pixel, map);\n    if (!vertex) {\n      vertex = map.getCoordinateFromPixelInternal(pixel);\n    }\n    this.createOrUpdatePointerFeature_(vertex);\n  };\n  /**\n   * @param {import(\"../extent.js\").Extent} extent extent\n   * @returns {Feature} extent as featrue\n   * @private\n   */\n  Extent.prototype.createOrUpdateExtentFeature_ = function (extent) {\n    var extentFeature = this.extentFeature_;\n    if (!extentFeature) {\n      if (!extent) {\n        extentFeature = new Feature({});\n      } else {\n        extentFeature = new Feature(polygonFromExtent(extent));\n      }\n      this.extentFeature_ = extentFeature;\n      this.extentOverlay_.getSource().addFeature(extentFeature);\n    } else {\n      if (!extent) {\n        extentFeature.setGeometry(undefined);\n      } else {\n        extentFeature.setGeometry(polygonFromExtent(extent));\n      }\n    }\n    return extentFeature;\n  };\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} vertex location of feature\n   * @returns {Feature} vertex as feature\n   * @private\n   */\n  Extent.prototype.createOrUpdatePointerFeature_ = function (vertex) {\n    var vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(vertex));\n      this.vertexFeature_ = vertexFeature;\n      this.vertexOverlay_.getSource().addFeature(vertexFeature);\n    } else {\n      var geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(vertex);\n    }\n    return vertexFeature;\n  };\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  Extent.prototype.handleEvent = function (mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent || !this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    //display pointer (if not dragging)\n    if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE && !this.handlingDownUpSequence) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    //call pointer to determine up/down/drag\n    _super.prototype.handleEvent.call(this, mapBrowserEvent);\n    //return false to stop propagation\n    return false;\n  };\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  Extent.prototype.handleDownEvent = function (mapBrowserEvent) {\n    var pixel = mapBrowserEvent.pixel;\n    var map = mapBrowserEvent.map;\n    var extent = this.getExtentInternal();\n    var vertex = this.snapToVertex_(pixel, map);\n    //find the extent corner opposite the passed corner\n    var getOpposingPoint = function getOpposingPoint(point) {\n      var x_ = null;\n      var y_ = null;\n      if (point[0] == extent[0]) {\n        x_ = extent[2];\n      } else if (point[0] == extent[2]) {\n        x_ = extent[0];\n      }\n      if (point[1] == extent[1]) {\n        y_ = extent[3];\n      } else if (point[1] == extent[3]) {\n        y_ = extent[1];\n      }\n      if (x_ !== null && y_ !== null) {\n        return [x_, y_];\n      }\n      return null;\n    };\n    if (vertex && extent) {\n      var x = vertex[0] == extent[0] || vertex[0] == extent[2] ? vertex[0] : null;\n      var y = vertex[1] == extent[1] || vertex[1] == extent[3] ? vertex[1] : null;\n      //snap to point\n      if (x !== null && y !== null) {\n        this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\n        //snap to edge\n      } else if (x !== null) {\n        this.pointerHandler_ = getEdgeHandler(getOpposingPoint([x, extent[1]]), getOpposingPoint([x, extent[3]]));\n      } else if (y !== null) {\n        this.pointerHandler_ = getEdgeHandler(getOpposingPoint([extent[0], y]), getOpposingPoint([extent[2], y]));\n      }\n      //no snap - new bbox\n    } else {\n      vertex = map.getCoordinateFromPixelInternal(pixel);\n      this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\n      this.pointerHandler_ = getPointHandler(vertex);\n    }\n    return true; //event handled; start downup sequence\n  };\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  Extent.prototype.handleDragEvent = function (mapBrowserEvent) {\n    if (this.pointerHandler_) {\n      var pixelCoordinate = mapBrowserEvent.coordinate;\n      this.setExtent(this.pointerHandler_(pixelCoordinate));\n      this.createOrUpdatePointerFeature_(pixelCoordinate);\n    }\n  };\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  Extent.prototype.handleUpEvent = function (mapBrowserEvent) {\n    this.pointerHandler_ = null;\n    //If bbox is zero area, set to null;\n    var extent = this.getExtentInternal();\n    if (!extent || getArea(extent) === 0) {\n      this.setExtent(null);\n    }\n    return false; //Stop handling downup sequence\n  };\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  Extent.prototype.setMap = function (map) {\n    this.extentOverlay_.setMap(map);\n    this.vertexOverlay_.setMap(map);\n    _super.prototype.setMap.call(this, map);\n  };\n  /**\n   * Returns the current drawn extent in the view projection (or user projection if set)\n   *\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n   * @api\n   */\n  Extent.prototype.getExtent = function () {\n    return toUserExtent(this.getExtentInternal(), this.getMap().getView().getProjection());\n  };\n  /**\n   * Returns the current drawn extent in the view projection\n   *\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n   * @api\n   */\n  Extent.prototype.getExtentInternal = function () {\n    return this.extent_;\n  };\n  /**\n   * Manually sets the drawn extent, using the view projection.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent\n   * @api\n   */\n  Extent.prototype.setExtent = function (extent) {\n    //Null extent means no bbox\n    this.extent_ = extent ? extent : null;\n    this.createOrUpdateExtentFeature_(extent);\n    this.dispatchEvent(new ExtentEvent(this.extent_));\n  };\n  return Extent;\n}(PointerInteraction);\n/**\n * Returns the default style for the drawn bbox\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default Extent style\n */\nfunction getDefaultExtentStyleFunction() {\n  var style = createEditingStyle();\n  return function (feature, resolution) {\n    return style[GeometryType.POLYGON];\n  };\n}\n/**\n * Returns the default style for the pointer\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default pointer style\n */\nfunction getDefaultPointerStyleFunction() {\n  var style = createEditingStyle();\n  return function (feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedPoint corner that will be unchanged in the new extent\n * @returns {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent} event handler\n */\nfunction getPointHandler(fixedPoint) {\n  return function (point) {\n    return boundingExtent([fixedPoint, point]);\n  };\n}\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedP1 first corner that will be unchanged in the new extent\n * @param {import(\"../coordinate.js\").Coordinate} fixedP2 second corner that will be unchanged in the new extent\n * @returns {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null} event handler\n */\nfunction getEdgeHandler(fixedP1, fixedP2) {\n  if (fixedP1[0] == fixedP2[0]) {\n    return function (point) {\n      return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\n    };\n  } else if (fixedP1[1] == fixedP2[1]) {\n    return function (point) {\n      return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\n    };\n  } else {\n    return null;\n  }\n}\n/**\n * @param {import(\"../extent.js\").Extent} extent extent\n * @returns {Array<Array<import(\"../coordinate.js\").Coordinate>>} extent line segments\n */\nfunction getSegments(extent) {\n  return [[[extent[0], extent[1]], [extent[0], extent[3]]], [[extent[0], extent[3]], [extent[2], extent[3]]], [[extent[2], extent[3]], [extent[2], extent[1]]], [[extent[2], extent[1]], [extent[0], extent[1]]]];\n}\nexport default Extent;","map":{"version":3,"names":["Event","Feature","GeometryType","MapBrowserEventType","Point","PointerInteraction","VectorLayer","VectorSource","always","boundingExtent","getArea","closestOnSegment","distance","coordinateDistance","squaredDistance","squaredCoordinateDistance","squaredDistanceToSegment","createEditingStyle","fromExtent","polygonFromExtent","toUserExtent","ExtentEventType","EXTENTCHANGED","ExtentEvent","_super","__extends","extent","_this","call","Extent","opt_options","options","condition_","condition","extent_","pointerHandler_","pixelTolerance_","pixelTolerance","undefined","snappedToVertex_","extentFeature_","vertexFeature_","extentOverlay_","source","useSpatialIndex","wrapX","style","boxStyle","getDefaultExtentStyleFunction","updateWhileAnimating","updateWhileInteracting","vertexOverlay_","pointerStyle","getDefaultPointerStyleFunction","setExtent","prototype","snapToVertex_","pixel","map","pixelCoordinate","getCoordinateFromPixelInternal","sortByDistance","a","b","getExtentInternal","segments","getSegments","sort","closestSegment","vertex","vertexPixel","getPixelFromCoordinateInternal","pixel1","pixel2","squaredDist1","squaredDist2","dist","Math","sqrt","min","handlePointerMove_","mapBrowserEvent","createOrUpdatePointerFeature_","createOrUpdateExtentFeature_","extentFeature","getSource","addFeature","setGeometry","vertexFeature","geometry","getGeometry","setCoordinates","handleEvent","originalEvent","type","POINTERMOVE","handlingDownUpSequence","handleDownEvent","getOpposingPoint","point","x_","y_","x","y","getPointHandler","getEdgeHandler","handleDragEvent","coordinate","handleUpEvent","setMap","getExtent","getMap","getView","getProjection","dispatchEvent","feature","resolution","POLYGON","POINT","fixedPoint","fixedP1","fixedP2"],"sources":["/Users/mariovicky/Skripsi_OpenLayers/node_modules/ol/src/interaction/Extent.js"],"sourcesContent":["/**\n * @module ol/interaction/Extent\n */\nimport Event from '../events/Event.js';\nimport Feature from '../Feature.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {always} from '../events/condition.js';\nimport {boundingExtent, getArea} from '../extent.js';\nimport {\n  closestOnSegment,\n  distance as coordinateDistance,\n  squaredDistance as squaredCoordinateDistance,\n  squaredDistanceToSegment,\n} from '../coordinate.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport {toUserExtent} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~always}.\n * @property {import(\"../extent.js\").Extent} [extent] Initial extent. Defaults to no\n * initial extent.\n * @property {import(\"../style/Style.js\").StyleLike} [boxStyle]\n * Style for the drawn extent box. Defaults to\n * {@link module:ol/style/Style~createEditing()['Polygon']}\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [pointerStyle]\n * Style for the cursor used to draw the extent. Defaults to\n * {@link module:ol/style/Style~createEditing()['Point']}\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\n * in the X direction? Only affects visuals, not functionality.\n */\n\n/**\n * @enum {string}\n */\nconst ExtentEventType = {\n  /**\n   * Triggered after the extent is changed\n   * @event ExtentEvent#extentchanged\n   * @api\n   */\n  EXTENTCHANGED: 'extentchanged',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Extent~Extent} instances are\n * instances of this type.\n */\nclass ExtentEvent extends Event {\n  /**\n   * @param {import(\"../extent.js\").Extent} extent the new extent\n   */\n  constructor(extent) {\n    super(ExtentEventType.EXTENTCHANGED);\n\n    /**\n     * The current extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = extent;\n  }\n}\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map.\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\n * This interaction is only supported for mouse devices.\n *\n * @fires ExtentEvent\n * @api\n */\nclass Extent extends PointerInteraction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /**\n     * Condition\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * Extent of the drawn box\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.extent_ = null;\n\n    /**\n     * Handler for pointer move events\n     * @type {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null}\n     * @private\n     */\n    this.pointerHandler_ = null;\n\n    /**\n     * Pixel threshold to snap to extent\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ =\n      options.pixelTolerance !== undefined ? options.pixelTolerance : 10;\n\n    /**\n     * Is the pointer snapped to an extent vertex\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Feature for displaying the visible extent\n     * @type {Feature}\n     * @private\n     */\n    this.extentFeature_ = null;\n\n    /**\n     * Feature for displaying the visible pointer\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    if (!opt_options) {\n      opt_options = {};\n    }\n\n    /**\n     * Layer for the extentFeature\n     * @type {VectorLayer}\n     * @private\n     */\n    this.extentOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!opt_options.wrapX,\n      }),\n      style: opt_options.boxStyle\n        ? opt_options.boxStyle\n        : getDefaultExtentStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    /**\n     * Layer for the vertexFeature\n     * @type {VectorLayer}\n     * @private\n     */\n    this.vertexOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!opt_options.wrapX,\n      }),\n      style: opt_options.pointerStyle\n        ? opt_options.pointerStyle\n        : getDefaultPointerStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true,\n    });\n\n    if (opt_options.extent) {\n      this.setExtent(opt_options.extent);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel cursor location\n   * @param {import(\"../PluggableMap.js\").default} map map\n   * @returns {import(\"../coordinate.js\").Coordinate|null} snapped vertex on extent\n   * @private\n   */\n  snapToVertex_(pixel, map) {\n    const pixelCoordinate = map.getCoordinateFromPixelInternal(pixel);\n    const sortByDistance = function (a, b) {\n      return (\n        squaredDistanceToSegment(pixelCoordinate, a) -\n        squaredDistanceToSegment(pixelCoordinate, b)\n      );\n    };\n    const extent = this.getExtentInternal();\n    if (extent) {\n      //convert extents to line segments and find the segment closest to pixelCoordinate\n      const segments = getSegments(extent);\n      segments.sort(sortByDistance);\n      const closestSegment = segments[0];\n\n      let vertex = closestOnSegment(pixelCoordinate, closestSegment);\n      const vertexPixel = map.getPixelFromCoordinateInternal(vertex);\n\n      //if the distance is within tolerance, snap to the segment\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        //test if we should further snap to a vertex\n        const pixel1 = map.getPixelFromCoordinateInternal(closestSegment[0]);\n        const pixel2 = map.getPixelFromCoordinateInternal(closestSegment[1]);\n        const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n        const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n        const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\n        if (this.snappedToVertex_) {\n          vertex =\n            squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n        }\n        return vertex;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent pointer move event\n   * @private\n   */\n  handlePointerMove_(mapBrowserEvent) {\n    const pixel = mapBrowserEvent.pixel;\n    const map = mapBrowserEvent.map;\n\n    let vertex = this.snapToVertex_(pixel, map);\n    if (!vertex) {\n      vertex = map.getCoordinateFromPixelInternal(pixel);\n    }\n    this.createOrUpdatePointerFeature_(vertex);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent extent\n   * @returns {Feature} extent as featrue\n   * @private\n   */\n  createOrUpdateExtentFeature_(extent) {\n    let extentFeature = this.extentFeature_;\n\n    if (!extentFeature) {\n      if (!extent) {\n        extentFeature = new Feature({});\n      } else {\n        extentFeature = new Feature(polygonFromExtent(extent));\n      }\n      this.extentFeature_ = extentFeature;\n      this.extentOverlay_.getSource().addFeature(extentFeature);\n    } else {\n      if (!extent) {\n        extentFeature.setGeometry(undefined);\n      } else {\n        extentFeature.setGeometry(polygonFromExtent(extent));\n      }\n    }\n    return extentFeature;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} vertex location of feature\n   * @returns {Feature} vertex as feature\n   * @private\n   */\n  createOrUpdatePointerFeature_(vertex) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(vertex));\n      this.vertexFeature_ = vertexFeature;\n      this.vertexOverlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(vertex);\n    }\n    return vertexFeature;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent || !this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    //display pointer (if not dragging)\n    if (\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence\n    ) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    //call pointer to determine up/down/drag\n    super.handleEvent(mapBrowserEvent);\n    //return false to stop propagation\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    const pixel = mapBrowserEvent.pixel;\n    const map = mapBrowserEvent.map;\n\n    const extent = this.getExtentInternal();\n    let vertex = this.snapToVertex_(pixel, map);\n\n    //find the extent corner opposite the passed corner\n    const getOpposingPoint = function (point) {\n      let x_ = null;\n      let y_ = null;\n      if (point[0] == extent[0]) {\n        x_ = extent[2];\n      } else if (point[0] == extent[2]) {\n        x_ = extent[0];\n      }\n      if (point[1] == extent[1]) {\n        y_ = extent[3];\n      } else if (point[1] == extent[3]) {\n        y_ = extent[1];\n      }\n      if (x_ !== null && y_ !== null) {\n        return [x_, y_];\n      }\n      return null;\n    };\n    if (vertex && extent) {\n      const x =\n        vertex[0] == extent[0] || vertex[0] == extent[2] ? vertex[0] : null;\n      const y =\n        vertex[1] == extent[1] || vertex[1] == extent[3] ? vertex[1] : null;\n\n      //snap to point\n      if (x !== null && y !== null) {\n        this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\n        //snap to edge\n      } else if (x !== null) {\n        this.pointerHandler_ = getEdgeHandler(\n          getOpposingPoint([x, extent[1]]),\n          getOpposingPoint([x, extent[3]])\n        );\n      } else if (y !== null) {\n        this.pointerHandler_ = getEdgeHandler(\n          getOpposingPoint([extent[0], y]),\n          getOpposingPoint([extent[2], y])\n        );\n      }\n      //no snap - new bbox\n    } else {\n      vertex = map.getCoordinateFromPixelInternal(pixel);\n      this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\n      this.pointerHandler_ = getPointHandler(vertex);\n    }\n    return true; //event handled; start downup sequence\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (this.pointerHandler_) {\n      const pixelCoordinate = mapBrowserEvent.coordinate;\n      this.setExtent(this.pointerHandler_(pixelCoordinate));\n      this.createOrUpdatePointerFeature_(pixelCoordinate);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.pointerHandler_ = null;\n    //If bbox is zero area, set to null;\n    const extent = this.getExtentInternal();\n    if (!extent || getArea(extent) === 0) {\n      this.setExtent(null);\n    }\n    return false; //Stop handling downup sequence\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.extentOverlay_.setMap(map);\n    this.vertexOverlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Returns the current drawn extent in the view projection (or user projection if set)\n   *\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n   * @api\n   */\n  getExtent() {\n    return toUserExtent(\n      this.getExtentInternal(),\n      this.getMap().getView().getProjection()\n    );\n  }\n\n  /**\n   * Returns the current drawn extent in the view projection\n   *\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n   * @api\n   */\n  getExtentInternal() {\n    return this.extent_;\n  }\n\n  /**\n   * Manually sets the drawn extent, using the view projection.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent\n   * @api\n   */\n  setExtent(extent) {\n    //Null extent means no bbox\n    this.extent_ = extent ? extent : null;\n    this.createOrUpdateExtentFeature_(extent);\n    this.dispatchEvent(new ExtentEvent(this.extent_));\n  }\n}\n\n/**\n * Returns the default style for the drawn bbox\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default Extent style\n */\nfunction getDefaultExtentStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style[GeometryType.POLYGON];\n  };\n}\n\n/**\n * Returns the default style for the pointer\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default pointer style\n */\nfunction getDefaultPointerStyleFunction() {\n  const style = createEditingStyle();\n  return function (feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedPoint corner that will be unchanged in the new extent\n * @returns {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent} event handler\n */\nfunction getPointHandler(fixedPoint) {\n  return function (point) {\n    return boundingExtent([fixedPoint, point]);\n  };\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedP1 first corner that will be unchanged in the new extent\n * @param {import(\"../coordinate.js\").Coordinate} fixedP2 second corner that will be unchanged in the new extent\n * @returns {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null} event handler\n */\nfunction getEdgeHandler(fixedP1, fixedP2) {\n  if (fixedP1[0] == fixedP2[0]) {\n    return function (point) {\n      return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\n    };\n  } else if (fixedP1[1] == fixedP2[1]) {\n    return function (point) {\n      return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\n    };\n  } else {\n    return null;\n  }\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent extent\n * @returns {Array<Array<import(\"../coordinate.js\").Coordinate>>} extent line segments\n */\nfunction getSegments(extent) {\n  return [\n    [\n      [extent[0], extent[1]],\n      [extent[0], extent[3]],\n    ],\n    [\n      [extent[0], extent[3]],\n      [extent[2], extent[3]],\n    ],\n    [\n      [extent[2], extent[3]],\n      [extent[2], extent[1]],\n    ],\n    [\n      [extent[2], extent[1]],\n      [extent[0], extent[1]],\n    ],\n  ];\n}\n\nexport default Extent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}