{"ast":null,"code":"'use strict';\n\n// most of this code was written by Andrew Kelley\n// licensed under the BSD license: see\n// https://github.com/andrewrk/node-mv/blob/master/package.json\n\n// this needs a cleanup\nconst u = require('universalify').fromCallback;\nconst fs = require('graceful-fs');\nconst ncp = require('../copy/ncp');\nconst path = require('path');\nconst remove = require('../remove').remove;\nconst mkdirp = require('../mkdirs').mkdirs;\nfunction move(src, dest, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  const overwrite = options.overwrite || options.clobber || false;\n  isSrcSubdir(src, dest, (err, itIs) => {\n    if (err) return callback(err);\n    if (itIs) return callback(new Error(`Cannot move '${src}' to a subdirectory of itself, '${dest}'.`));\n    mkdirp(path.dirname(dest), err => {\n      if (err) return callback(err);\n      doRename();\n    });\n  });\n  function doRename() {\n    if (path.resolve(src) === path.resolve(dest)) {\n      fs.access(src, callback);\n    } else if (overwrite) {\n      fs.rename(src, dest, err => {\n        if (!err) return callback();\n        if (err.code === 'ENOTEMPTY' || err.code === 'EEXIST') {\n          remove(dest, err => {\n            if (err) return callback(err);\n            options.overwrite = false; // just overwriteed it, no need to do it again\n            move(src, dest, options, callback);\n          });\n          return;\n        }\n\n        // weird Windows shit\n        if (err.code === 'EPERM') {\n          setTimeout(() => {\n            remove(dest, err => {\n              if (err) return callback(err);\n              options.overwrite = false;\n              move(src, dest, options, callback);\n            });\n          }, 200);\n          return;\n        }\n        if (err.code !== 'EXDEV') return callback(err);\n        moveAcrossDevice(src, dest, overwrite, callback);\n      });\n    } else {\n      fs.link(src, dest, err => {\n        if (err) {\n          if (err.code === 'EXDEV' || err.code === 'EISDIR' || err.code === 'EPERM' || err.code === 'ENOTSUP') {\n            return moveAcrossDevice(src, dest, overwrite, callback);\n          }\n          return callback(err);\n        }\n        return fs.unlink(src, callback);\n      });\n    }\n  }\n}\nfunction moveAcrossDevice(src, dest, overwrite, callback) {\n  fs.stat(src, (err, stat) => {\n    if (err) return callback(err);\n    if (stat.isDirectory()) {\n      moveDirAcrossDevice(src, dest, overwrite, callback);\n    } else {\n      moveFileAcrossDevice(src, dest, overwrite, callback);\n    }\n  });\n}\nfunction moveFileAcrossDevice(src, dest, overwrite, callback) {\n  const flags = overwrite ? 'w' : 'wx';\n  const ins = fs.createReadStream(src);\n  const outs = fs.createWriteStream(dest, {\n    flags\n  });\n  ins.on('error', err => {\n    ins.destroy();\n    outs.destroy();\n    outs.removeListener('close', onClose);\n\n    // may want to create a directory but `out` line above\n    // creates an empty file for us: See #108\n    // don't care about error here\n    fs.unlink(dest, () => {\n      // note: `err` here is from the input stream errror\n      if (err.code === 'EISDIR' || err.code === 'EPERM') {\n        moveDirAcrossDevice(src, dest, overwrite, callback);\n      } else {\n        callback(err);\n      }\n    });\n  });\n  outs.on('error', err => {\n    ins.destroy();\n    outs.destroy();\n    outs.removeListener('close', onClose);\n    callback(err);\n  });\n  outs.once('close', onClose);\n  ins.pipe(outs);\n  function onClose() {\n    fs.unlink(src, callback);\n  }\n}\nfunction moveDirAcrossDevice(src, dest, overwrite, callback) {\n  const options = {\n    overwrite: false\n  };\n  if (overwrite) {\n    remove(dest, err => {\n      if (err) return callback(err);\n      startNcp();\n    });\n  } else {\n    startNcp();\n  }\n  function startNcp() {\n    ncp(src, dest, options, err => {\n      if (err) return callback(err);\n      remove(src, callback);\n    });\n  }\n}\n\n// return true if dest is a subdir of src, otherwise false.\n// extract dest base dir and check if that is the same as src basename\nfunction isSrcSubdir(src, dest, cb) {\n  fs.stat(src, (err, st) => {\n    if (err) return cb(err);\n    if (st.isDirectory()) {\n      const baseDir = dest.split(path.dirname(src) + path.sep)[1];\n      if (baseDir) {\n        const destBasename = baseDir.split(path.sep)[0];\n        if (destBasename) return cb(null, src !== dest && dest.indexOf(src) > -1 && destBasename === path.basename(src));\n        return cb(null, false);\n      }\n      return cb(null, false);\n    }\n    return cb(null, false);\n  });\n}\nmodule.exports = {\n  move: u(move)\n};","map":{"version":3,"names":["u","require","fromCallback","fs","ncp","path","remove","mkdirp","mkdirs","move","src","dest","options","callback","overwrite","clobber","isSrcSubdir","err","itIs","Error","dirname","doRename","resolve","access","rename","code","setTimeout","moveAcrossDevice","link","unlink","stat","isDirectory","moveDirAcrossDevice","moveFileAcrossDevice","flags","ins","createReadStream","outs","createWriteStream","on","destroy","removeListener","onClose","once","pipe","startNcp","cb","st","baseDir","split","sep","destBasename","indexOf","basename","module","exports"],"sources":["/Users/mariovicky/Skripsi_OpenLayers/node_modules/arc.js/node_modules/fs-extra/lib/move/index.js"],"sourcesContent":["'use strict'\n\n// most of this code was written by Andrew Kelley\n// licensed under the BSD license: see\n// https://github.com/andrewrk/node-mv/blob/master/package.json\n\n// this needs a cleanup\n\nconst u = require('universalify').fromCallback\nconst fs = require('graceful-fs')\nconst ncp = require('../copy/ncp')\nconst path = require('path')\nconst remove = require('../remove').remove\nconst mkdirp = require('../mkdirs').mkdirs\n\nfunction move (src, dest, options, callback) {\n  if (typeof options === 'function') {\n    callback = options\n    options = {}\n  }\n\n  const overwrite = options.overwrite || options.clobber || false\n\n  isSrcSubdir(src, dest, (err, itIs) => {\n    if (err) return callback(err)\n    if (itIs) return callback(new Error(`Cannot move '${src}' to a subdirectory of itself, '${dest}'.`))\n    mkdirp(path.dirname(dest), err => {\n      if (err) return callback(err)\n      doRename()\n    })\n  })\n\n  function doRename () {\n    if (path.resolve(src) === path.resolve(dest)) {\n      fs.access(src, callback)\n    } else if (overwrite) {\n      fs.rename(src, dest, err => {\n        if (!err) return callback()\n\n        if (err.code === 'ENOTEMPTY' || err.code === 'EEXIST') {\n          remove(dest, err => {\n            if (err) return callback(err)\n            options.overwrite = false // just overwriteed it, no need to do it again\n            move(src, dest, options, callback)\n          })\n          return\n        }\n\n        // weird Windows shit\n        if (err.code === 'EPERM') {\n          setTimeout(() => {\n            remove(dest, err => {\n              if (err) return callback(err)\n              options.overwrite = false\n              move(src, dest, options, callback)\n            })\n          }, 200)\n          return\n        }\n\n        if (err.code !== 'EXDEV') return callback(err)\n        moveAcrossDevice(src, dest, overwrite, callback)\n      })\n    } else {\n      fs.link(src, dest, err => {\n        if (err) {\n          if (err.code === 'EXDEV' || err.code === 'EISDIR' || err.code === 'EPERM' || err.code === 'ENOTSUP') {\n            return moveAcrossDevice(src, dest, overwrite, callback)\n          }\n          return callback(err)\n        }\n        return fs.unlink(src, callback)\n      })\n    }\n  }\n}\n\nfunction moveAcrossDevice (src, dest, overwrite, callback) {\n  fs.stat(src, (err, stat) => {\n    if (err) return callback(err)\n\n    if (stat.isDirectory()) {\n      moveDirAcrossDevice(src, dest, overwrite, callback)\n    } else {\n      moveFileAcrossDevice(src, dest, overwrite, callback)\n    }\n  })\n}\n\nfunction moveFileAcrossDevice (src, dest, overwrite, callback) {\n  const flags = overwrite ? 'w' : 'wx'\n  const ins = fs.createReadStream(src)\n  const outs = fs.createWriteStream(dest, { flags })\n\n  ins.on('error', err => {\n    ins.destroy()\n    outs.destroy()\n    outs.removeListener('close', onClose)\n\n    // may want to create a directory but `out` line above\n    // creates an empty file for us: See #108\n    // don't care about error here\n    fs.unlink(dest, () => {\n      // note: `err` here is from the input stream errror\n      if (err.code === 'EISDIR' || err.code === 'EPERM') {\n        moveDirAcrossDevice(src, dest, overwrite, callback)\n      } else {\n        callback(err)\n      }\n    })\n  })\n\n  outs.on('error', err => {\n    ins.destroy()\n    outs.destroy()\n    outs.removeListener('close', onClose)\n    callback(err)\n  })\n\n  outs.once('close', onClose)\n  ins.pipe(outs)\n\n  function onClose () {\n    fs.unlink(src, callback)\n  }\n}\n\nfunction moveDirAcrossDevice (src, dest, overwrite, callback) {\n  const options = {\n    overwrite: false\n  }\n\n  if (overwrite) {\n    remove(dest, err => {\n      if (err) return callback(err)\n      startNcp()\n    })\n  } else {\n    startNcp()\n  }\n\n  function startNcp () {\n    ncp(src, dest, options, err => {\n      if (err) return callback(err)\n      remove(src, callback)\n    })\n  }\n}\n\n// return true if dest is a subdir of src, otherwise false.\n// extract dest base dir and check if that is the same as src basename\nfunction isSrcSubdir (src, dest, cb) {\n  fs.stat(src, (err, st) => {\n    if (err) return cb(err)\n    if (st.isDirectory()) {\n      const baseDir = dest.split(path.dirname(src) + path.sep)[1]\n      if (baseDir) {\n        const destBasename = baseDir.split(path.sep)[0]\n        if (destBasename) return cb(null, src !== dest && dest.indexOf(src) > -1 && destBasename === path.basename(src))\n        return cb(null, false)\n      }\n      return cb(null, false)\n    }\n    return cb(null, false)\n  })\n}\n\nmodule.exports = {\n  move: u(move)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}