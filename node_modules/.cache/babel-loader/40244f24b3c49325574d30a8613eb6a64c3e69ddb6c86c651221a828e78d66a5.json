{"ast":null,"code":"var _jsxFileName = \"/Users/mariovicky/Skripsi_OpenLayers/src/containers/Map/Map.js\";\nimport React, { Component } from 'react';\nimport 'ol/ol.css';\nimport './Map.css';\nimport Map from 'ol/Map.js';\nimport View from 'ol/View.js';\nimport { Stroke, Style, Icon, Fill } from 'ol/style.js';\nimport { Tile as TileLayer, Vector as VectorLayer } from 'ol/layer.js';\nimport OSM from 'ol/source/OSM.js';\nimport VectorSource from 'ol/source/Vector.js';\nimport Feature from 'ol/Feature.js';\nimport LineString from 'ol/geom/LineString.js';\nimport Polygon from 'ol/geom/Polygon.js';\nimport { fromExtent, getVectorContext } from 'ol/render.js';\nimport { getWidth } from 'ol/extent.js';\nimport arc from 'arc';\nimport airplaneimg from './614.png';\nconst tileLayer = new TileLayer({\n  source: new OSM()\n});\nconst map = new Map({\n  layers: [tileLayer],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 2\n  })\n});\nconst airplaneIcon = new Icon({\n  src: airplaneimg,\n  scale: 0.5\n});\nconst style = new Style({\n  stroke: new Stroke({\n    color: 'red',\n    width: 2\n  }),\n  image: airplaneIcon\n});\nconst flightsSource = new VectorSource({\n  attributions: 'Flight data by ' + '<a href=\"https://openflights.org/data.html\">OpenFlights</a>,',\n  loader: function () {\n    const url = '/data/openflights/flights.json';\n    fetch(url).then(function (response) {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(function (json) {\n      const flightsData = json.flights;\n      for (let i = 0; i < flightsData.length; i++) {\n        const flight = flightsData[i];\n        const from = flight[0];\n        const to = flight[1];\n        const arcGenerator = new arc.GreatCircle({\n          x: from[1],\n          y: from[0]\n        }, {\n          x: to[1],\n          y: to[0]\n        });\n        const arcLine = arcGenerator.Arc(100, {\n          offset: 10\n        });\n        const features = [];\n        arcLine.geometries.forEach(function (geometry) {\n          const line = new LineString(geometry.coords);\n          line.transform('EPSG:4326', 'EPSG:3857');\n          features.push(new Feature({\n            geometry: line,\n            finished: false\n          }));\n        });\n        addLater(features, i * 50);\n      }\n      tileLayer.on('postrender', animateFlights);\n    }).catch(function (error) {\n      console.error('Error fetching JSON:', error);\n      console.error('URL:', url);\n    });\n  }\n});\nconst flightsLayer = new VectorLayer({\n  source: flightsSource,\n  style: function (feature) {\n    if (feature.get('finished')) {\n      return style;\n    }\n    return null;\n  }\n});\nmap.addLayer(flightsLayer);\nconst pointsPerMs = 0.02;\nfunction animateFlights(event) {\n  const vectorContext = getVectorContext(event);\n  const frameState = event.frameState;\n  vectorContext.setStyle(style);\n  const features = flightsSource.getFeatures();\n  for (let i = 0; i < features.length; i++) {\n    const feature = features[i];\n    if (!feature.get('finished')) {\n      const coords = feature.getGeometry().getCoordinates();\n      const elapsedTime = frameState.time - feature.get('start');\n      if (elapsedTime >= 0) {\n        const elapsedPoints = elapsedTime * pointsPerMs;\n        if (elapsedPoints >= coords.length) {\n          feature.set('finished', true);\n        }\n        const maxIndex = Math.min(elapsedPoints, coords.length);\n        const currentLine = new LineString(coords.slice(0, maxIndex));\n        const worldWidth = getWidth(map.getView().getProjection().getExtent());\n        const offset = Math.floor(map.getView().getCenter()[0] / worldWidth);\n        currentLine.translate(offset * worldWidth, 0);\n        vectorContext.drawGeometry(currentLine);\n        currentLine.translate(worldWidth, 0);\n        vectorContext.drawGeometry(currentLine);\n      }\n    }\n  }\n  map.render();\n}\nfunction addLater(features, timeout) {\n  window.setTimeout(function () {\n    let start = Date.now();\n    features.forEach(function (feature) {\n      feature.set('start', start);\n      flightsSource.addFeature(feature);\n      const duration = (feature.getGeometry().getCoordinates().length - 1) / pointsPerMs;\n      start += duration;\n    });\n  }, timeout);\n}\nconst bbox = [-180, -90, 180, 90]; // Bounding box coordinates [minx, miny, maxx, maxy]\n\nconst extent = fromExtent(bbox);\nmap.getView().fit(extent, {\n  padding: [50, 50, 50, 50]\n});\nconst boundingBox = new Polygon.fromExtent(bbox);\nconst boundingBoxFeature = new Feature(boundingBox);\nconst boundingBoxLayer = new VectorLayer({\n  source: new VectorSource({\n    features: [boundingBoxFeature]\n  }),\n  style: new Style({\n    stroke: new Stroke({\n      color: 'blue',\n      width: 2\n    }),\n    fill: new Fill({\n      color: 'rgba(0, 0, 255, 0.1)'\n    })\n  })\n});\nmap.addLayer(boundingBoxLayer);\nclass MapComponent extends Component {\n  componentDidMount() {\n    map.setTarget(this.mapRef);\n  }\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: ref => this.mapRef = ref,\n      className: \"map\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 12\n      }\n    });\n  }\n}\nexport default MapComponent;","map":{"version":3,"names":["React","Component","Map","View","Stroke","Style","Icon","Fill","Tile","TileLayer","Vector","VectorLayer","OSM","VectorSource","Feature","LineString","Polygon","fromExtent","getVectorContext","getWidth","arc","airplaneimg","tileLayer","source","map","layers","target","view","center","zoom","airplaneIcon","src","scale","style","stroke","color","width","image","flightsSource","attributions","loader","url","fetch","then","response","ok","Error","json","flightsData","flights","i","length","flight","from","to","arcGenerator","GreatCircle","x","y","arcLine","Arc","offset","features","geometries","forEach","geometry","line","coords","transform","push","finished","addLater","on","animateFlights","catch","error","console","flightsLayer","feature","get","addLayer","pointsPerMs","event","vectorContext","frameState","setStyle","getFeatures","getGeometry","getCoordinates","elapsedTime","time","elapsedPoints","set","maxIndex","Math","min","currentLine","slice","worldWidth","getView","getProjection","getExtent","floor","getCenter","translate","drawGeometry","render","timeout","window","setTimeout","start","Date","now","addFeature","duration","bbox","extent","fit","padding","boundingBox","boundingBoxFeature","boundingBoxLayer","fill","MapComponent","componentDidMount","setTarget","mapRef","createElement","ref","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/mariovicky/Skripsi_OpenLayers/src/containers/Map/Map.js"],"sourcesContent":["import React, { Component } from 'react';\nimport 'ol/ol.css';\nimport './Map.css';\nimport Map from 'ol/Map.js';\nimport View from 'ol/View.js';\nimport { Stroke, Style, Icon, Fill } from 'ol/style.js';\nimport { Tile as TileLayer, Vector as VectorLayer } from 'ol/layer.js';\nimport OSM from 'ol/source/OSM.js';\nimport VectorSource from 'ol/source/Vector.js';\nimport Feature from 'ol/Feature.js';\nimport LineString from 'ol/geom/LineString.js';\nimport Polygon from 'ol/geom/Polygon.js';\nimport { fromExtent, getVectorContext } from 'ol/render.js';\nimport { getWidth } from 'ol/extent.js';\nimport arc from 'arc';\nimport airplaneimg from './614.png';\n\nconst tileLayer = new TileLayer({\n  source: new OSM(),\n});\n\nconst map = new Map({\n  layers: [tileLayer],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 2,\n  }),\n});\n\nconst airplaneIcon = new Icon({\n  src: airplaneimg,\n  scale: 0.5,\n});\n\nconst style = new Style({\n  stroke: new Stroke({\n    color: 'red',\n    width: 2,\n  }),\n  image: airplaneIcon,\n});\n\nconst flightsSource = new VectorSource({\n  attributions:\n    'Flight data by ' +\n    '<a href=\"https://openflights.org/data.html\">OpenFlights</a>,',\n  loader: function () {\n    const url = '/data/openflights/flights.json';\n    fetch(url)\n      .then(function (response) {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then(function (json) {\n        const flightsData = json.flights;\n        for (let i = 0; i < flightsData.length; i++) {\n          const flight = flightsData[i];\n          const from = flight[0];\n          const to = flight[1];\n\n          const arcGenerator = new arc.GreatCircle(\n            { x: from[1], y: from[0] },\n            { x: to[1], y: to[0] }\n          );\n\n          const arcLine = arcGenerator.Arc(100, { offset: 10 });\n          const features = [];\n          arcLine.geometries.forEach(function (geometry) {\n            const line = new LineString(geometry.coords);\n            line.transform('EPSG:4326', 'EPSG:3857');\n\n            features.push(\n              new Feature({\n                geometry: line,\n                finished: false,\n              })\n            );\n          });\n\n          addLater(features, i * 50);\n        }\n\n        tileLayer.on('postrender', animateFlights);\n      })\n      .catch(function (error) {\n        console.error('Error fetching JSON:', error);\n        console.error('URL:', url);\n      });\n  },\n});\n\nconst flightsLayer = new VectorLayer({\n  source: flightsSource,\n  style: function (feature) {\n    if (feature.get('finished')) {\n      return style;\n    }\n    return null;\n  },\n});\n\nmap.addLayer(flightsLayer);\n\nconst pointsPerMs = 0.02;\nfunction animateFlights(event) {\n  const vectorContext = getVectorContext(event);\n  const frameState = event.frameState;\n  vectorContext.setStyle(style);\n\n  const features = flightsSource.getFeatures();\n  for (let i = 0; i < features.length; i++) {\n    const feature = features[i];\n    if (!feature.get('finished')) {\n      const coords = feature.getGeometry().getCoordinates();\n      const elapsedTime = frameState.time - feature.get('start');\n      if (elapsedTime >= 0) {\n        const elapsedPoints = elapsedTime * pointsPerMs;\n\n        if (elapsedPoints >= coords.length) {\n          feature.set('finished', true);\n        }\n\n        const maxIndex = Math.min(elapsedPoints, coords.length);\n        const currentLine = new LineString(coords.slice(0, maxIndex));\n\n        const worldWidth = getWidth(map.getView().getProjection().getExtent());\n        const offset = Math.floor(map.getView().getCenter()[0] / worldWidth);\n\n        currentLine.translate(offset * worldWidth, 0);\n        vectorContext.drawGeometry(currentLine);\n        currentLine.translate(worldWidth, 0);\n        vectorContext.drawGeometry(currentLine);\n      }\n    }\n  }\n\n  map.render();\n}\n\nfunction addLater(features, timeout) {\n  window.setTimeout(function () {\n    let start = Date.now();\n    features.forEach(function (feature) {\n      feature.set('start', start);\n      flightsSource.addFeature(feature);\n      const duration =\n        (feature.getGeometry().getCoordinates().length - 1) / pointsPerMs;\n      start += duration;\n    });\n  }, timeout);\n}\n\nconst bbox = [-180, -90, 180, 90]; // Bounding box coordinates [minx, miny, maxx, maxy]\n\nconst extent = fromExtent(bbox);\nmap.getView().fit(extent, {\n  padding: [50, 50, 50, 50],\n});\n\nconst boundingBox = new Polygon.fromExtent(bbox);\nconst boundingBoxFeature = new Feature(boundingBox);\n\nconst boundingBoxLayer = new VectorLayer({\n  source: new VectorSource({\n    features: [boundingBoxFeature],\n  }),\n  style: new Style({\n    stroke: new Stroke({\n      color: 'blue',\n      width: 2,\n    }),\n    fill: new Fill({\n      color: 'rgba(0, 0, 255, 0.1)',\n    }),\n  }),\n});\n\nmap.addLayer(boundingBoxLayer);\n\nclass MapComponent extends Component {\n  componentDidMount() {\n    map.setTarget(this.mapRef);\n  }\n\n  render() {\n    return <div ref={(ref) => (this.mapRef = ref)} className=\"map\" />;\n  }\n}\n\nexport default MapComponent;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,WAAW;AAClB,OAAO,WAAW;AAClB,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAOC,IAAI,MAAM,YAAY;AAC7B,SAASC,MAAM,EAAEC,KAAK,EAAEC,IAAI,EAAEC,IAAI,QAAQ,aAAa;AACvD,SAASC,IAAI,IAAIC,SAAS,EAAEC,MAAM,IAAIC,WAAW,QAAQ,aAAa;AACtE,OAAOC,GAAG,MAAM,kBAAkB;AAClC,OAAOC,YAAY,MAAM,qBAAqB;AAC9C,OAAOC,OAAO,MAAM,eAAe;AACnC,OAAOC,UAAU,MAAM,uBAAuB;AAC9C,OAAOC,OAAO,MAAM,oBAAoB;AACxC,SAASC,UAAU,EAAEC,gBAAgB,QAAQ,cAAc;AAC3D,SAASC,QAAQ,QAAQ,cAAc;AACvC,OAAOC,GAAG,MAAM,KAAK;AACrB,OAAOC,WAAW,MAAM,WAAW;AAEnC,MAAMC,SAAS,GAAG,IAAIb,SAAS,CAAC;EAC9Bc,MAAM,EAAE,IAAIX,GAAG,CAAC;AAClB,CAAC,CAAC;AAEF,MAAMY,GAAG,GAAG,IAAItB,GAAG,CAAC;EAClBuB,MAAM,EAAE,CAACH,SAAS,CAAC;EACnBI,MAAM,EAAE,KAAK;EACbC,IAAI,EAAE,IAAIxB,IAAI,CAAC;IACbyB,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IACdC,IAAI,EAAE;EACR,CAAC;AACH,CAAC,CAAC;AAEF,MAAMC,YAAY,GAAG,IAAIxB,IAAI,CAAC;EAC5ByB,GAAG,EAAEV,WAAW;EAChBW,KAAK,EAAE;AACT,CAAC,CAAC;AAEF,MAAMC,KAAK,GAAG,IAAI5B,KAAK,CAAC;EACtB6B,MAAM,EAAE,IAAI9B,MAAM,CAAC;IACjB+B,KAAK,EAAE,KAAK;IACZC,KAAK,EAAE;EACT,CAAC,CAAC;EACFC,KAAK,EAAEP;AACT,CAAC,CAAC;AAEF,MAAMQ,aAAa,GAAG,IAAIzB,YAAY,CAAC;EACrC0B,YAAY,EACV,iBAAiB,GACjB,8DAA8D;EAChEC,MAAM,EAAE,SAAAA,CAAA,EAAY;IAClB,MAAMC,GAAG,GAAG,gCAAgC;IAC5CC,KAAK,CAACD,GAAG,CAAC,CACPE,IAAI,CAAC,UAAUC,QAAQ,EAAE;MACxB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDJ,IAAI,CAAC,UAAUI,IAAI,EAAE;MACpB,MAAMC,WAAW,GAAGD,IAAI,CAACE,OAAO;MAChC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,WAAW,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;QAC3C,MAAME,MAAM,GAAGJ,WAAW,CAACE,CAAC,CAAC;QAC7B,MAAMG,IAAI,GAAGD,MAAM,CAAC,CAAC,CAAC;QACtB,MAAME,EAAE,GAAGF,MAAM,CAAC,CAAC,CAAC;QAEpB,MAAMG,YAAY,GAAG,IAAInC,GAAG,CAACoC,WAAW,CACtC;UAAEC,CAAC,EAAEJ,IAAI,CAAC,CAAC,CAAC;UAAEK,CAAC,EAAEL,IAAI,CAAC,CAAC;QAAE,CAAC,EAC1B;UAAEI,CAAC,EAAEH,EAAE,CAAC,CAAC,CAAC;UAAEI,CAAC,EAAEJ,EAAE,CAAC,CAAC;QAAE,CACvB,CAAC;QAED,MAAMK,OAAO,GAAGJ,YAAY,CAACK,GAAG,CAAC,GAAG,EAAE;UAAEC,MAAM,EAAE;QAAG,CAAC,CAAC;QACrD,MAAMC,QAAQ,GAAG,EAAE;QACnBH,OAAO,CAACI,UAAU,CAACC,OAAO,CAAC,UAAUC,QAAQ,EAAE;UAC7C,MAAMC,IAAI,GAAG,IAAInD,UAAU,CAACkD,QAAQ,CAACE,MAAM,CAAC;UAC5CD,IAAI,CAACE,SAAS,CAAC,WAAW,EAAE,WAAW,CAAC;UAExCN,QAAQ,CAACO,IAAI,CACX,IAAIvD,OAAO,CAAC;YACVmD,QAAQ,EAAEC,IAAI;YACdI,QAAQ,EAAE;UACZ,CAAC,CACH,CAAC;QACH,CAAC,CAAC;QAEFC,QAAQ,CAACT,QAAQ,EAAEZ,CAAC,GAAG,EAAE,CAAC;MAC5B;MAEA5B,SAAS,CAACkD,EAAE,CAAC,YAAY,EAAEC,cAAc,CAAC;IAC5C,CAAC,CAAC,CACDC,KAAK,CAAC,UAAUC,KAAK,EAAE;MACtBC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CC,OAAO,CAACD,KAAK,CAAC,MAAM,EAAElC,GAAG,CAAC;IAC5B,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,MAAMoC,YAAY,GAAG,IAAIlE,WAAW,CAAC;EACnCY,MAAM,EAAEe,aAAa;EACrBL,KAAK,EAAE,SAAAA,CAAU6C,OAAO,EAAE;IACxB,IAAIA,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC,EAAE;MAC3B,OAAO9C,KAAK;IACd;IACA,OAAO,IAAI;EACb;AACF,CAAC,CAAC;AAEFT,GAAG,CAACwD,QAAQ,CAACH,YAAY,CAAC;AAE1B,MAAMI,WAAW,GAAG,IAAI;AACxB,SAASR,cAAcA,CAACS,KAAK,EAAE;EAC7B,MAAMC,aAAa,GAAGjE,gBAAgB,CAACgE,KAAK,CAAC;EAC7C,MAAME,UAAU,GAAGF,KAAK,CAACE,UAAU;EACnCD,aAAa,CAACE,QAAQ,CAACpD,KAAK,CAAC;EAE7B,MAAM6B,QAAQ,GAAGxB,aAAa,CAACgD,WAAW,CAAC,CAAC;EAC5C,KAAK,IAAIpC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGY,QAAQ,CAACX,MAAM,EAAED,CAAC,EAAE,EAAE;IACxC,MAAM4B,OAAO,GAAGhB,QAAQ,CAACZ,CAAC,CAAC;IAC3B,IAAI,CAAC4B,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC,EAAE;MAC5B,MAAMZ,MAAM,GAAGW,OAAO,CAACS,WAAW,CAAC,CAAC,CAACC,cAAc,CAAC,CAAC;MACrD,MAAMC,WAAW,GAAGL,UAAU,CAACM,IAAI,GAAGZ,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;MAC1D,IAAIU,WAAW,IAAI,CAAC,EAAE;QACpB,MAAME,aAAa,GAAGF,WAAW,GAAGR,WAAW;QAE/C,IAAIU,aAAa,IAAIxB,MAAM,CAAChB,MAAM,EAAE;UAClC2B,OAAO,CAACc,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC;QAC/B;QAEA,MAAMC,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAACJ,aAAa,EAAExB,MAAM,CAAChB,MAAM,CAAC;QACvD,MAAM6C,WAAW,GAAG,IAAIjF,UAAU,CAACoD,MAAM,CAAC8B,KAAK,CAAC,CAAC,EAAEJ,QAAQ,CAAC,CAAC;QAE7D,MAAMK,UAAU,GAAG/E,QAAQ,CAACK,GAAG,CAAC2E,OAAO,CAAC,CAAC,CAACC,aAAa,CAAC,CAAC,CAACC,SAAS,CAAC,CAAC,CAAC;QACtE,MAAMxC,MAAM,GAAGiC,IAAI,CAACQ,KAAK,CAAC9E,GAAG,CAAC2E,OAAO,CAAC,CAAC,CAACI,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGL,UAAU,CAAC;QAEpEF,WAAW,CAACQ,SAAS,CAAC3C,MAAM,GAAGqC,UAAU,EAAE,CAAC,CAAC;QAC7Cf,aAAa,CAACsB,YAAY,CAACT,WAAW,CAAC;QACvCA,WAAW,CAACQ,SAAS,CAACN,UAAU,EAAE,CAAC,CAAC;QACpCf,aAAa,CAACsB,YAAY,CAACT,WAAW,CAAC;MACzC;IACF;EACF;EAEAxE,GAAG,CAACkF,MAAM,CAAC,CAAC;AACd;AAEA,SAASnC,QAAQA,CAACT,QAAQ,EAAE6C,OAAO,EAAE;EACnCC,MAAM,CAACC,UAAU,CAAC,YAAY;IAC5B,IAAIC,KAAK,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;IACtBlD,QAAQ,CAACE,OAAO,CAAC,UAAUc,OAAO,EAAE;MAClCA,OAAO,CAACc,GAAG,CAAC,OAAO,EAAEkB,KAAK,CAAC;MAC3BxE,aAAa,CAAC2E,UAAU,CAACnC,OAAO,CAAC;MACjC,MAAMoC,QAAQ,GACZ,CAACpC,OAAO,CAACS,WAAW,CAAC,CAAC,CAACC,cAAc,CAAC,CAAC,CAACrC,MAAM,GAAG,CAAC,IAAI8B,WAAW;MACnE6B,KAAK,IAAII,QAAQ;IACnB,CAAC,CAAC;EACJ,CAAC,EAAEP,OAAO,CAAC;AACb;AAEA,MAAMQ,IAAI,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;;AAEnC,MAAMC,MAAM,GAAGnG,UAAU,CAACkG,IAAI,CAAC;AAC/B3F,GAAG,CAAC2E,OAAO,CAAC,CAAC,CAACkB,GAAG,CAACD,MAAM,EAAE;EACxBE,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;AAC1B,CAAC,CAAC;AAEF,MAAMC,WAAW,GAAG,IAAIvG,OAAO,CAACC,UAAU,CAACkG,IAAI,CAAC;AAChD,MAAMK,kBAAkB,GAAG,IAAI1G,OAAO,CAACyG,WAAW,CAAC;AAEnD,MAAME,gBAAgB,GAAG,IAAI9G,WAAW,CAAC;EACvCY,MAAM,EAAE,IAAIV,YAAY,CAAC;IACvBiD,QAAQ,EAAE,CAAC0D,kBAAkB;EAC/B,CAAC,CAAC;EACFvF,KAAK,EAAE,IAAI5B,KAAK,CAAC;IACf6B,MAAM,EAAE,IAAI9B,MAAM,CAAC;MACjB+B,KAAK,EAAE,MAAM;MACbC,KAAK,EAAE;IACT,CAAC,CAAC;IACFsF,IAAI,EAAE,IAAInH,IAAI,CAAC;MACb4B,KAAK,EAAE;IACT,CAAC;EACH,CAAC;AACH,CAAC,CAAC;AAEFX,GAAG,CAACwD,QAAQ,CAACyC,gBAAgB,CAAC;AAE9B,MAAME,YAAY,SAAS1H,SAAS,CAAC;EACnC2H,iBAAiBA,CAAA,EAAG;IAClBpG,GAAG,CAACqG,SAAS,CAAC,IAAI,CAACC,MAAM,CAAC;EAC5B;EAEApB,MAAMA,CAAA,EAAG;IACP,oBAAO1G,KAAA,CAAA+H,aAAA;MAAKC,GAAG,EAAGA,GAAG,IAAM,IAAI,CAACF,MAAM,GAAGE,GAAK;MAACC,SAAS,EAAC,KAAK;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CAAC;EACnE;AACF;AAEA,eAAeZ,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}