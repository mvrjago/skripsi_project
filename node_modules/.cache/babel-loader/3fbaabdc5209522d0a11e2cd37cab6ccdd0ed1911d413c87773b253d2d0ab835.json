{"ast":null,"code":"'use strict';\n\n// Load modules\nconst RFC3986 = require('./rfc3986');\n\n// Declare internals\n\nconst internals = {\n  Ip: {\n    cidrs: {\n      ipv4: {\n        required: '\\\\/(?:' + RFC3986.ipv4Cidr + ')',\n        optional: '(?:\\\\/(?:' + RFC3986.ipv4Cidr + '))?',\n        forbidden: ''\n      },\n      ipv6: {\n        required: '\\\\/' + RFC3986.ipv6Cidr,\n        optional: '(?:\\\\/' + RFC3986.ipv6Cidr + ')?',\n        forbidden: ''\n      },\n      ipvfuture: {\n        required: '\\\\/' + RFC3986.ipv6Cidr,\n        optional: '(?:\\\\/' + RFC3986.ipv6Cidr + ')?',\n        forbidden: ''\n      }\n    },\n    versions: {\n      ipv4: RFC3986.IPv4address,\n      ipv6: RFC3986.IPv6address,\n      ipvfuture: RFC3986.IPvFuture\n    }\n  }\n};\ninternals.Ip.createIpRegex = function (versions, cidr) {\n  let regex;\n  for (let i = 0; i < versions.length; ++i) {\n    const version = versions[i];\n    if (!regex) {\n      regex = '^(?:' + internals.Ip.versions[version] + internals.Ip.cidrs[version][cidr];\n    } else {\n      regex += '|' + internals.Ip.versions[version] + internals.Ip.cidrs[version][cidr];\n    }\n  }\n  return new RegExp(regex + ')$');\n};\nmodule.exports = internals.Ip;","map":{"version":3,"names":["RFC3986","require","internals","Ip","cidrs","ipv4","required","ipv4Cidr","optional","forbidden","ipv6","ipv6Cidr","ipvfuture","versions","IPv4address","IPv6address","IPvFuture","createIpRegex","cidr","regex","i","length","version","RegExp","module","exports"],"sources":["/Users/mariovicky/Skripsi_OpenLayers/node_modules/joi/lib/types/string/ip.js"],"sourcesContent":["'use strict';\n\n// Load modules\n\nconst RFC3986 = require('./rfc3986');\n\n\n// Declare internals\n\nconst internals = {\n    Ip: {\n        cidrs: {\n            ipv4: {\n                required: '\\\\/(?:' + RFC3986.ipv4Cidr + ')',\n                optional: '(?:\\\\/(?:' + RFC3986.ipv4Cidr + '))?',\n                forbidden: ''\n            },\n            ipv6: {\n                required: '\\\\/' + RFC3986.ipv6Cidr,\n                optional: '(?:\\\\/' + RFC3986.ipv6Cidr + ')?',\n                forbidden: ''\n            },\n            ipvfuture: {\n                required: '\\\\/' + RFC3986.ipv6Cidr,\n                optional: '(?:\\\\/' + RFC3986.ipv6Cidr + ')?',\n                forbidden: ''\n            }\n        },\n        versions: {\n            ipv4: RFC3986.IPv4address,\n            ipv6: RFC3986.IPv6address,\n            ipvfuture: RFC3986.IPvFuture\n        }\n    }\n};\n\n\ninternals.Ip.createIpRegex = function (versions, cidr) {\n\n    let regex;\n    for (let i = 0; i < versions.length; ++i) {\n        const version = versions[i];\n        if (!regex) {\n            regex = '^(?:' + internals.Ip.versions[version] + internals.Ip.cidrs[version][cidr];\n        }\n        else {\n            regex += '|' + internals.Ip.versions[version] + internals.Ip.cidrs[version][cidr];\n        }\n    }\n\n    return new RegExp(regex + ')$');\n};\n\nmodule.exports = internals.Ip;\n"],"mappings":"AAAA,YAAY;;AAEZ;AAEA,MAAMA,OAAO,GAAGC,OAAO,CAAC,WAAW,CAAC;;AAGpC;;AAEA,MAAMC,SAAS,GAAG;EACdC,EAAE,EAAE;IACAC,KAAK,EAAE;MACHC,IAAI,EAAE;QACFC,QAAQ,EAAE,QAAQ,GAAGN,OAAO,CAACO,QAAQ,GAAG,GAAG;QAC3CC,QAAQ,EAAE,WAAW,GAAGR,OAAO,CAACO,QAAQ,GAAG,KAAK;QAChDE,SAAS,EAAE;MACf,CAAC;MACDC,IAAI,EAAE;QACFJ,QAAQ,EAAE,KAAK,GAAGN,OAAO,CAACW,QAAQ;QAClCH,QAAQ,EAAE,QAAQ,GAAGR,OAAO,CAACW,QAAQ,GAAG,IAAI;QAC5CF,SAAS,EAAE;MACf,CAAC;MACDG,SAAS,EAAE;QACPN,QAAQ,EAAE,KAAK,GAAGN,OAAO,CAACW,QAAQ;QAClCH,QAAQ,EAAE,QAAQ,GAAGR,OAAO,CAACW,QAAQ,GAAG,IAAI;QAC5CF,SAAS,EAAE;MACf;IACJ,CAAC;IACDI,QAAQ,EAAE;MACNR,IAAI,EAAEL,OAAO,CAACc,WAAW;MACzBJ,IAAI,EAAEV,OAAO,CAACe,WAAW;MACzBH,SAAS,EAAEZ,OAAO,CAACgB;IACvB;EACJ;AACJ,CAAC;AAGDd,SAAS,CAACC,EAAE,CAACc,aAAa,GAAG,UAAUJ,QAAQ,EAAEK,IAAI,EAAE;EAEnD,IAAIC,KAAK;EACT,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,QAAQ,CAACQ,MAAM,EAAE,EAAED,CAAC,EAAE;IACtC,MAAME,OAAO,GAAGT,QAAQ,CAACO,CAAC,CAAC;IAC3B,IAAI,CAACD,KAAK,EAAE;MACRA,KAAK,GAAG,MAAM,GAAGjB,SAAS,CAACC,EAAE,CAACU,QAAQ,CAACS,OAAO,CAAC,GAAGpB,SAAS,CAACC,EAAE,CAACC,KAAK,CAACkB,OAAO,CAAC,CAACJ,IAAI,CAAC;IACvF,CAAC,MACI;MACDC,KAAK,IAAI,GAAG,GAAGjB,SAAS,CAACC,EAAE,CAACU,QAAQ,CAACS,OAAO,CAAC,GAAGpB,SAAS,CAACC,EAAE,CAACC,KAAK,CAACkB,OAAO,CAAC,CAACJ,IAAI,CAAC;IACrF;EACJ;EAEA,OAAO,IAAIK,MAAM,CAACJ,KAAK,GAAG,IAAI,CAAC;AACnC,CAAC;AAEDK,MAAM,CAACC,OAAO,GAAGvB,SAAS,CAACC,EAAE"},"metadata":{},"sourceType":"script","externalDependencies":[]}