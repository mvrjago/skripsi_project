{"ast":null,"code":"'use strict';\n\nconst fs = require('../utils/fs');\nconst _ = require('lodash');\nconst error = require('./error');\nlet before = [];\nlet component = [];\nlet after = [];\nlet _deps = {};\nasync function load(_ref) {\n  let {\n    location,\n    exts,\n    deps\n  } = _ref;\n  _deps = deps;\n  const content = await fs.dirContent(location);\n  const existExts = _.map(fs.formatFileArray(content.folders), 'name');\n  const notFound = _.difference(exts, existExts);\n  if (notFound.length) {\n    throw new Error(error({\n      location: 'extensions loader',\n      description: `the following specified extensions were not found >> ${notFound}`\n    }));\n  }\n  const resolvedPaths = fs.resolvePaths(exts, location);\n  const loadedExts = await fs.loadModules(resolvedPaths);\n  const extsData = _.map(loadedExts, 'data');\n  _.remove(extsData, e => {\n    const extEnv = _.get(e, 'config.env');\n    if (extEnv) {\n      return !_.includes(extEnv, process.env.NODE_ENV);\n    }\n  });\n  before = _.compact(_.map(extsData, 'before'));\n  component = _.compact(_.map(extsData, 'component'));\n  after = _.compact(_.map(extsData, 'after'));\n}\nasync function execBefore() {\n  let args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  _.merge(args, _deps);\n  for (const event of before) {\n    await event(args);\n  }\n}\nasync function execComponent() {\n  let args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  _.merge(args, _deps);\n  for (const event of component) {\n    await event(args);\n  }\n}\nasync function execAfter() {\n  let args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  _.merge(args, _deps);\n  for (const event of after) {\n    await event(args);\n  }\n}\nmodule.exports = {\n  load,\n  execBefore,\n  execComponent,\n  execAfter\n};","map":{"version":3,"names":["fs","require","_","error","before","component","after","_deps","load","_ref","location","exts","deps","content","dirContent","existExts","map","formatFileArray","folders","notFound","difference","length","Error","description","resolvedPaths","resolvePaths","loadedExts","loadModules","extsData","remove","e","extEnv","get","includes","process","env","NODE_ENV","compact","execBefore","args","arguments","undefined","merge","event","execComponent","execAfter","module","exports"],"sources":["/Users/mariovicky/Skripsi_OpenLayers/node_modules/arc.js/lib/extension.js"],"sourcesContent":["'use strict';\n\nconst fs = require('../utils/fs');\nconst _ = require('lodash');\nconst error = require('./error');\n\nlet before = [];\nlet component = [];\nlet after = [];\n\nlet _deps = {};\n\nasync function load ({ location, exts, deps }) {\n\n  _deps = deps;\n\n  const content = await fs.dirContent(location);\n  const existExts = _.map(fs.formatFileArray(content.folders), 'name');\n\n  const notFound = _.difference(exts, existExts);\n  if (notFound.length) {\n    throw new Error(\n      error({\n        location: 'extensions loader',\n        description: `the following specified extensions were not found >> ${notFound}`\n      })\n    );\n  }\n\n  const resolvedPaths = fs.resolvePaths(exts, location);\n  const loadedExts = await fs.loadModules(resolvedPaths);\n  const extsData = _.map(loadedExts, 'data');\n\n  _.remove(extsData, (e) => {\n    const extEnv = _.get(e, 'config.env');\n\n    if (extEnv) {\n      return !_.includes(extEnv, process.env.NODE_ENV);\n    }\n  });\n\n  before = _.compact(_.map(extsData, 'before'));\n  component = _.compact(_.map(extsData, 'component'));\n  after = _.compact(_.map(extsData, 'after'));\n}\n\nasync function execBefore (args = {}) {\n  _.merge(args, _deps);\n  for (const event of before) {\n    await event(args);\n  }\n}\n\nasync function execComponent (args = {}) {\n  _.merge(args, _deps);\n  for (const event of component) {\n    await event(args);\n  }\n}\n\nasync function execAfter (args = {}) {\n  _.merge(args, _deps);\n  for (const event of after) {\n    await event(args);\n  }\n}\n\nmodule.exports = { load, execBefore, execComponent, execAfter };\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}