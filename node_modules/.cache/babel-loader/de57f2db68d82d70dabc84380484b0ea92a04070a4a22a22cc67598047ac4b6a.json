{"ast":null,"code":"var _jsxFileName = \"/Users/mariovicky/Skripsi_OpenLayers/src/containers/Map/OpenlayerMaps/Map.js\";\nimport React, { Component } from 'react';\nimport 'ol/ol.css';\nimport './Map.css';\nimport Map from 'ol/Map.js';\nimport View from 'ol/View.js';\nimport { Stroke, Style, Icon, Fill } from 'ol/style.js';\nimport { Tile as TileLayer, Vector as VectorLayer } from 'ol/layer.js';\nimport OSM from 'ol/source/OSM.js';\nimport VectorSource from 'ol/source/Vector.js';\nimport Feature from 'ol/Feature.js';\nimport { fromLonLat } from 'ol/proj.js';\nimport LineString from 'ol/geom/LineString.js';\nimport { getVectorContext } from 'ol/render.js';\nimport { getWidth } from 'ol/extent.js';\nimport arc from 'arc';\nimport airplaneimg from './614.png';\nclass MapComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.loadFlightsData = () => {\n      const url = '/data/openflights/data_adsb.json';\n      fetch(url).then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      }).then(json => {\n        const flightsData = json.flights;\n        this.setState({\n          flightsData\n        });\n        this.loadFlightsBatch(flightsData);\n      }).catch(error => {\n        console.error('Error fetching JSON:', error);\n        console.error('URL:', url);\n      });\n    };\n    this.animateFlights = event => {\n      const vectorContext = getVectorContext(event);\n      const frameState = event.frameState;\n      vectorContext.setStyle(this.style);\n      const features = this.flightsSource.getFeatures();\n      for (let i = 0; i < features.length; i++) {\n        const feature = features[i];\n        if (!feature.get('finished')) {\n          const coords = feature.getGeometry().getCoordinates();\n          const elapsedTime = frameState.time - feature.get('start');\n          if (elapsedTime >= 0) {\n            const elapsedPoints = elapsedTime * this.pointsPerMs;\n            if (elapsedPoints >= coords.length) {\n              feature.set('finished', true);\n            }\n            const maxIndex = Math.min(elapsedPoints, coords.length);\n            const currentLine = new LineString(coords.slice(0, maxIndex));\n            const worldWidth = getWidth(this.map.getView().getProjection().getExtent());\n            const offset = Math.floor(this.map.getView().getCenter()[0] / worldWidth);\n            currentLine.translate(offset * worldWidth, 0);\n            vectorContext.drawGeometry(currentLine);\n            currentLine.translate(worldWidth, 0);\n            vectorContext.drawGeometry(currentLine);\n          }\n        }\n      }\n      this.map.render();\n    };\n    this.handleCoordinateInputChange = event => {\n      this.setState({\n        coordinateInput: event.target.value\n      });\n    };\n    this.handleCoordinateSubmit = () => {\n      const {\n        coordinateInput\n      } = this.state;\n      const coordinates = coordinateInput.split(',').map(coord => parseFloat(coord.trim()));\n      if (coordinates.length === 4 && !isNaN(coordinates[0]) && !isNaN(coordinates[1]) && !isNaN(coordinates[2]) && !isNaN(coordinates[3])) {\n        const view = this.map.getView();\n        const center = fromLonLat(coordinates);\n        view.setCenter(center);\n        view.setZoom(2);\n        this.setState({\n          lamin: coordinates[1] - 1,\n          lomin: coordinates[0] - 1,\n          lamax: coordinates[3] + 1,\n          lomax: coordinates[2] + 1\n        }, () => {\n          this.drawBoundingBox();\n        });\n      } else {\n        alert('Koordinat tidak valid!');\n      }\n    };\n    this.mapRef = /*#__PURE__*/React.createRef();\n    this.map = null;\n    this.flightsSource = null;\n    this.tileLayer = null;\n    this.flightsLayer = null;\n    this.style = null;\n    this.airplaneIcon = null;\n    this.pointsPerMs = 0.02;\n    this.state = {\n      coordinateInput: '',\n      lamin: null,\n      lomin: null,\n      lamax: null,\n      lomax: null,\n      flightsData: []\n    };\n  }\n  componentDidMount() {\n    this.initializeMap();\n    this.loadFlightsData();\n    setInterval(this.loadFlightsData, 10000);\n  }\n  initializeMap() {\n    this.tileLayer = new TileLayer({\n      source: new OSM()\n    });\n    this.map = new Map({\n      layers: [this.tileLayer],\n      target: this.mapRef.current,\n      view: new View({\n        center: [-11000000, 4600000],\n        zoom: 2\n      })\n    });\n    this.flightsSource = new VectorSource();\n    this.airplaneIcon = new Icon({\n      src: airplaneimg,\n      scale: 0.5\n    });\n    this.style = new Style({\n      stroke: new Stroke({\n        color: 'red',\n        width: 2\n      }),\n      image: this.airplaneIcon\n    });\n    this.flightsLayer = new VectorLayer({\n      source: this.flightsSource,\n      style: feature => {\n        if (feature.get('finished')) {\n          return this.style;\n        }\n        return null;\n      }\n    });\n    this.map.addLayer(this.flightsLayer);\n  }\n  loadFlightsBatch(flightsBatch) {\n    for (let i = 0; i < flightsBatch.length; i++) {\n      const flights = flightsBatch[i];\n      const from = flights[0];\n      const to = flights[1];\n      if (from && from.length >= 2 && to && to.length >= 2) {\n        const arcGenerator = new arc.GreatCircle({\n          x: from[1],\n          y: from[0]\n        }, {\n          x: to[1],\n          y: to[0]\n        });\n        const arcLine = arcGenerator.Arc(100, {\n          offset: 10\n        });\n        const features = [];\n        arcLine.geometries.forEach(geometry => {\n          const line = new LineString(geometry.coords);\n          line.transform('EPSG:4326', 'EPSG:3857');\n          features.push(new Feature({\n            geometry: line,\n            finished: false\n          }));\n        });\n        this.addLater(features, i * 50);\n      }\n    }\n    this.map.on('postrender', this.animateFlights);\n  }\n  addLater(features, timeout) {\n    window.setTimeout(() => {\n      let start = Date.now();\n      features.forEach(feature => {\n        feature.set('start', start);\n        this.flightsSource.addFeature(feature);\n        const duration = (feature.getGeometry().getCoordinates().length - 1) / this.pointsPerMs;\n        start += duration;\n      });\n    }, timeout);\n  }\n  drawBoundingBox() {\n    const {\n      lamin,\n      lomin,\n      lamax,\n      lomax\n    } = this.state;\n    const bboxSource = new VectorSource();\n    const bboxLayer = new VectorLayer({\n      source: bboxSource,\n      style: new Style({\n        stroke: new Stroke({\n          color: 'blue',\n          width: 5\n        }),\n        fill: new Fill({\n          color: 'rgba(0, 0, 255, 0.1)'\n        })\n      })\n    });\n    const bboxCoords = [[lomin, lamin], [lomax, lamin], [lomax, lamax], [lomin, lamax], [lomin, lamin]];\n    const bboxFeature = new Feature({\n      geometry: new LineString(bboxCoords).transform('EPSG:4326', 'EPSG:3857')\n    });\n    bboxSource.addFeature(bboxFeature);\n    this.map.addLayer(bboxLayer);\n  }\n  render() {\n    const {\n      flightsData,\n      coordinateInput\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"map\",\n      ref: this.mapRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"controls\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: coordinateInput,\n      onChange: this.handleCoordinateInputChange,\n      placeholder: \"Masukkan koordinat (lonmin, latmin, lonmax, latmax)\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleCoordinateSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }\n    }, \"Tampilkan\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flights-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }\n    }, \"Informasi Penerbangan\"), flightsData.map((flight, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 15\n      }\n    }, flight[0]), \" to \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 43\n      }\n    }, flight[1])))));\n  }\n}\nexport default MapComponent;","map":{"version":3,"names":["React","Component","Map","View","Stroke","Style","Icon","Fill","Tile","TileLayer","Vector","VectorLayer","OSM","VectorSource","Feature","fromLonLat","LineString","getVectorContext","getWidth","arc","airplaneimg","MapComponent","constructor","props","loadFlightsData","url","fetch","then","response","ok","Error","json","flightsData","flights","setState","loadFlightsBatch","catch","error","console","animateFlights","event","vectorContext","frameState","setStyle","style","features","flightsSource","getFeatures","i","length","feature","get","coords","getGeometry","getCoordinates","elapsedTime","time","elapsedPoints","pointsPerMs","set","maxIndex","Math","min","currentLine","slice","worldWidth","map","getView","getProjection","getExtent","offset","floor","getCenter","translate","drawGeometry","render","handleCoordinateInputChange","coordinateInput","target","value","handleCoordinateSubmit","state","coordinates","split","coord","parseFloat","trim","isNaN","view","center","setCenter","setZoom","lamin","lomin","lamax","lomax","drawBoundingBox","alert","mapRef","createRef","tileLayer","flightsLayer","airplaneIcon","componentDidMount","initializeMap","setInterval","source","layers","current","zoom","src","scale","stroke","color","width","image","addLayer","flightsBatch","from","to","arcGenerator","GreatCircle","x","y","arcLine","Arc","geometries","forEach","geometry","line","transform","push","finished","addLater","on","timeout","window","setTimeout","start","Date","now","addFeature","duration","bboxSource","bboxLayer","fill","bboxCoords","bboxFeature","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","id","ref","className","type","onChange","placeholder","onClick","flight","index","key"],"sources":["/Users/mariovicky/Skripsi_OpenLayers/src/containers/Map/OpenlayerMaps/Map.js"],"sourcesContent":["import React, { Component } from 'react';\nimport 'ol/ol.css';\nimport './Map.css';\nimport Map from 'ol/Map.js';\nimport View from 'ol/View.js';\nimport { Stroke, Style, Icon, Fill } from 'ol/style.js';\nimport { Tile as TileLayer, Vector as VectorLayer } from 'ol/layer.js';\nimport OSM from 'ol/source/OSM.js';\nimport VectorSource from 'ol/source/Vector.js';\nimport Feature from 'ol/Feature.js';\nimport { fromLonLat } from 'ol/proj.js';\nimport LineString from 'ol/geom/LineString.js';\nimport { getVectorContext } from 'ol/render.js';\nimport { getWidth } from 'ol/extent.js';\nimport arc from 'arc';\nimport airplaneimg from './614.png';\n\nclass MapComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.mapRef = React.createRef();\n    this.map = null;\n    this.flightsSource = null;\n    this.tileLayer = null;\n    this.flightsLayer = null;\n    this.style = null;\n    this.airplaneIcon = null;\n    this.pointsPerMs = 0.02;\n    this.state = {\n      coordinateInput: '',\n      lamin: null,\n      lomin: null,\n      lamax: null,\n      lomax: null,\n      flightsData: [],\n    };\n  }\n\n  componentDidMount() {\n    this.initializeMap();\n    this.loadFlightsData();\n    setInterval(this.loadFlightsData, 10000);\n  }\n\n  initializeMap() {\n    this.tileLayer = new TileLayer({\n      source: new OSM(),\n    });\n\n    this.map = new Map({\n      layers: [this.tileLayer],\n      target: this.mapRef.current,\n      view: new View({\n        center: [-11000000, 4600000],\n        zoom: 2,\n      }),\n    });\n\n    this.flightsSource = new VectorSource();\n    this.airplaneIcon = new Icon({\n      src: airplaneimg,\n      scale: 0.5,\n    });\n\n    this.style = new Style({\n      stroke: new Stroke({\n        color: 'red',\n        width: 2,\n      }),\n      image: this.airplaneIcon,\n    });\n\n    this.flightsLayer = new VectorLayer({\n      source: this.flightsSource,\n      style: (feature) => {\n        if (feature.get('finished')) {\n          return this.style;\n        }\n        return null;\n      },\n    });\n\n    this.map.addLayer(this.flightsLayer);\n  }\n\n  loadFlightsData = () => {\n    const url = '/data/openflights/data_adsb.json';\n    fetch(url)\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then((json) => {\n        const flightsData = json.flights;\n        this.setState({ flightsData });\n        this.loadFlightsBatch(flightsData);\n      })\n      .catch((error) => {\n        console.error('Error fetching JSON:', error);\n        console.error('URL:', url);\n      });\n  };\n\n  loadFlightsBatch(flightsBatch) {\n    for (let i = 0; i < flightsBatch.length; i++) {\n      const flights = flightsBatch[i];\n      const from = flights[0];\n      const to = flights[1];\n\n      if (from && from.length >= 2 && to && to.length >= 2) {\n        const arcGenerator = new arc.GreatCircle(\n          { x: from[1], y: from[0] },\n          { x: to[1], y: to[0] }\n        );\n\n        const arcLine = arcGenerator.Arc(100, { offset: 10 });\n        const features = [];\n        arcLine.geometries.forEach((geometry) => {\n          const line = new LineString(geometry.coords);\n          line.transform('EPSG:4326', 'EPSG:3857');\n\n          features.push(\n            new Feature({\n              geometry: line,\n              finished: false,\n            })\n          );\n        });\n\n        this.addLater(features, i * 50);\n      }\n    }\n\n    this.map.on('postrender', this.animateFlights);\n  }\n\n  animateFlights = (event) => {\n    const vectorContext = getVectorContext(event);\n    const frameState = event.frameState;\n    vectorContext.setStyle(this.style);\n\n    const features = this.flightsSource.getFeatures();\n    for (let i = 0; i < features.length; i++) {\n      const feature = features[i];\n      if (!feature.get('finished')) {\n        const coords = feature.getGeometry().getCoordinates();\n        const elapsedTime = frameState.time - feature.get('start');\n        if (elapsedTime >= 0) {\n          const elapsedPoints = elapsedTime * this.pointsPerMs;\n\n          if (elapsedPoints >= coords.length) {\n            feature.set('finished', true);\n          }\n\n          const maxIndex = Math.min(elapsedPoints, coords.length);\n          const currentLine = new LineString(coords.slice(0, maxIndex));\n\n          const worldWidth = getWidth(this.map.getView().getProjection().getExtent());\n          const offset = Math.floor(this.map.getView().getCenter()[0] / worldWidth);\n\n          currentLine.translate(offset * worldWidth, 0);\n          vectorContext.drawGeometry(currentLine);\n          currentLine.translate(worldWidth, 0);\n          vectorContext.drawGeometry(currentLine);\n        }\n      }\n    }\n\n    this.map.render();\n  };\n\n  addLater(features, timeout) {\n    window.setTimeout(() => {\n      let start = Date.now();\n      features.forEach((feature) => {\n        feature.set('start', start);\n        this.flightsSource.addFeature(feature);\n        const duration =\n          (feature.getGeometry().getCoordinates().length - 1) / this.pointsPerMs;\n        start += duration;\n      });\n    }, timeout);\n  }\n\n  handleCoordinateInputChange = (event) => {\n    this.setState({ coordinateInput: event.target.value });\n  };\n\n  handleCoordinateSubmit = () => {\n    const { coordinateInput } = this.state;\n    const coordinates = coordinateInput.split(',').map((coord) => parseFloat(coord.trim()));\n    if (coordinates.length === 4 && !isNaN(coordinates[0]) && !isNaN(coordinates[1]) && !isNaN(coordinates[2]) && !isNaN(coordinates[3])) {\n      const view = this.map.getView();\n      const center = fromLonLat(coordinates);\n      view.setCenter(center);\n      view.setZoom(2);\n\n      this.setState(\n        {\n          lamin: coordinates[1] - 1,\n          lomin: coordinates[0] - 1,\n          lamax: coordinates[3] + 1,\n          lomax: coordinates[2] + 1,\n        },\n        () => {\n          this.drawBoundingBox();\n        }\n      );\n    } else {\n      alert('Koordinat tidak valid!');\n    }\n  };\n\n  drawBoundingBox() {\n    const { lamin, lomin, lamax, lomax } = this.state;\n\n    const bboxSource = new VectorSource();\n    const bboxLayer = new VectorLayer({\n      source: bboxSource,\n      style: new Style({\n        stroke: new Stroke({\n          color: 'blue',\n          width: 5,\n        }),\n        fill: new Fill({\n          color: 'rgba(0, 0, 255, 0.1)',\n        }),\n      }),\n    });\n\n    const bboxCoords = [\n      [lomin, lamin],\n      [lomax, lamin],\n      [lomax, lamax],\n      [lomin, lamax],\n      [lomin, lamin],\n    ];\n\n    const bboxFeature = new Feature({\n      geometry: new LineString(bboxCoords).transform('EPSG:4326', 'EPSG:3857'),\n    });\n\n    bboxSource.addFeature(bboxFeature);\n\n    this.map.addLayer(bboxLayer);\n  }\n\n  render() {\n    const { flightsData, coordinateInput } = this.state;\n    return (\n      <div>\n        <div id=\"map\" ref={this.mapRef}></div>\n        <div className=\"controls\">\n          <input\n            type=\"text\"\n            value={coordinateInput}\n            onChange={this.handleCoordinateInputChange}\n            placeholder=\"Masukkan koordinat (lonmin, latmin, lonmax, latmax)\"\n          />\n          <button onClick={this.handleCoordinateSubmit}>Tampilkan</button>\n        </div>\n        <div className=\"flights-info\">\n          <h2>Informasi Penerbangan</h2>\n          {flightsData.map((flight, index) => (\n            <div key={index}>\n              <span>{flight[0]}</span> to <span>{flight[1]}</span>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MapComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}