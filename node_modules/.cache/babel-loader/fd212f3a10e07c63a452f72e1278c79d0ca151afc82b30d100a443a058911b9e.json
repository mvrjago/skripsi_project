{"ast":null,"code":"/**\n * @module ol/source/ImageStatic\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport EventType from '../events/EventType.js';\nimport ImageSource, { defaultImageLoadFunction } from './Image.js';\nimport ImageState from '../ImageState.js';\nimport ImageWrapper from '../Image.js';\nimport { assign } from '../obj.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { getHeight, getWidth, intersects } from '../extent.js';\nimport { get as getProjection } from '../proj.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../extent.js\").Extent} [imageExtent] Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"../size.js\").Size} [imageSize] Size of the image in pixels. Usually the image size is auto-detected, so this\n * only needs to be set if auto-detection fails for some reason.\n * @property {string} url Image URL.\n */\n/**\n * @classdesc\n * A layer source for displaying a single, static image.\n * @api\n */\nvar Static = /** @class */function (_super) {\n  __extends(Static, _super);\n  /**\n   * @param {Options} options ImageStatic options.\n   */\n  function Static(options) {\n    var _this = this;\n    var crossOrigin = options.crossOrigin !== undefined ? options.crossOrigin : null;\n    var /** @type {import(\"../Image.js\").LoadFunction} */imageLoadFunction = options.imageLoadFunction !== undefined ? options.imageLoadFunction : defaultImageLoadFunction;\n    _this = _super.call(this, {\n      attributions: options.attributions,\n      imageSmoothing: options.imageSmoothing,\n      projection: getProjection(options.projection)\n    }) || this;\n    /**\n     * @private\n     * @type {string}\n     */\n    _this.url_ = options.url;\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    _this.imageExtent_ = options.imageExtent;\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    _this.image_ = new ImageWrapper(_this.imageExtent_, undefined, 1, _this.url_, crossOrigin, imageLoadFunction);\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    _this.imageSize_ = options.imageSize ? options.imageSize : null;\n    _this.image_.addEventListener(EventType.CHANGE, _this.handleImageChange.bind(_this));\n    return _this;\n  }\n  /**\n   * Returns the image extent\n   * @return {import(\"../extent.js\").Extent} image extent.\n   * @api\n   */\n  Static.prototype.getImageExtent = function () {\n    return this.imageExtent_;\n  };\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  Static.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n    if (intersects(extent, this.image_.getExtent())) {\n      return this.image_;\n    }\n    return null;\n  };\n  /**\n   * Return the URL used for this image source.\n   * @return {string} URL.\n   * @api\n   */\n  Static.prototype.getUrl = function () {\n    return this.url_;\n  };\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   */\n  Static.prototype.handleImageChange = function (evt) {\n    if (this.image_.getState() == ImageState.LOADED) {\n      var imageExtent = this.image_.getExtent();\n      var image = this.image_.getImage();\n      var imageWidth = void 0,\n        imageHeight = void 0;\n      if (this.imageSize_) {\n        imageWidth = this.imageSize_[0];\n        imageHeight = this.imageSize_[1];\n      } else {\n        imageWidth = image.width;\n        imageHeight = image.height;\n      }\n      var resolution = getHeight(imageExtent) / imageHeight;\n      var targetWidth = Math.ceil(getWidth(imageExtent) / resolution);\n      if (targetWidth != imageWidth) {\n        var context = createCanvasContext2D(targetWidth, imageHeight);\n        assign(context, this.getContextOptions());\n        var canvas = context.canvas;\n        context.drawImage(image, 0, 0, imageWidth, imageHeight, 0, 0, canvas.width, canvas.height);\n        this.image_.setImage(canvas);\n      }\n    }\n    _super.prototype.handleImageChange.call(this, evt);\n  };\n  return Static;\n}(ImageSource);\nexport default Static;","map":{"version":3,"names":["EventType","ImageSource","defaultImageLoadFunction","ImageState","ImageWrapper","assign","createCanvasContext2D","getHeight","getWidth","intersects","get","getProjection","Static","_super","__extends","options","_this","crossOrigin","undefined","imageLoadFunction","call","attributions","imageSmoothing","projection","url_","url","imageExtent_","imageExtent","image_","imageSize_","imageSize","addEventListener","CHANGE","handleImageChange","bind","prototype","getImageExtent","getImageInternal","extent","resolution","pixelRatio","getExtent","getUrl","evt","getState","LOADED","image","getImage","imageWidth","imageHeight","width","height","targetWidth","Math","ceil","context","getContextOptions","canvas","drawImage","setImage"],"sources":["/Users/mariovicky/Skripsi_OpenLayers/node_modules/ol/src/source/ImageStatic.js"],"sourcesContent":["/**\n * @module ol/source/ImageStatic\n */\n\nimport EventType from '../events/EventType.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport ImageState from '../ImageState.js';\nimport ImageWrapper from '../Image.js';\nimport {assign} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getHeight, getWidth, intersects} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../extent.js\").Extent} [imageExtent] Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"../size.js\").Size} [imageSize] Size of the image in pixels. Usually the image size is auto-detected, so this\n * only needs to be set if auto-detection fails for some reason.\n * @property {string} url Image URL.\n */\n\n/**\n * @classdesc\n * A layer source for displaying a single, static image.\n * @api\n */\nclass Static extends ImageSource {\n  /**\n   * @param {Options} options ImageStatic options.\n   */\n  constructor(options) {\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const /** @type {import(\"../Image.js\").LoadFunction} */ imageLoadFunction =\n        options.imageLoadFunction !== undefined\n          ? options.imageLoadFunction\n          : defaultImageLoadFunction;\n\n    super({\n      attributions: options.attributions,\n      imageSmoothing: options.imageSmoothing,\n      projection: getProjection(options.projection),\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.imageExtent_ = options.imageExtent;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = new ImageWrapper(\n      this.imageExtent_,\n      undefined,\n      1,\n      this.url_,\n      crossOrigin,\n      imageLoadFunction\n    );\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = options.imageSize ? options.imageSize : null;\n\n    this.image_.addEventListener(\n      EventType.CHANGE,\n      this.handleImageChange.bind(this)\n    );\n  }\n\n  /**\n   * Returns the image extent\n   * @return {import(\"../extent.js\").Extent} image extent.\n   * @api\n   */\n  getImageExtent() {\n    return this.imageExtent_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (intersects(extent, this.image_.getExtent())) {\n      return this.image_;\n    }\n    return null;\n  }\n\n  /**\n   * Return the URL used for this image source.\n   * @return {string} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   */\n  handleImageChange(evt) {\n    if (this.image_.getState() == ImageState.LOADED) {\n      const imageExtent = this.image_.getExtent();\n      const image = this.image_.getImage();\n      let imageWidth, imageHeight;\n      if (this.imageSize_) {\n        imageWidth = this.imageSize_[0];\n        imageHeight = this.imageSize_[1];\n      } else {\n        imageWidth = image.width;\n        imageHeight = image.height;\n      }\n      const resolution = getHeight(imageExtent) / imageHeight;\n      const targetWidth = Math.ceil(getWidth(imageExtent) / resolution);\n      if (targetWidth != imageWidth) {\n        const context = createCanvasContext2D(targetWidth, imageHeight);\n        assign(context, this.getContextOptions());\n        const canvas = context.canvas;\n        context.drawImage(\n          image,\n          0,\n          0,\n          imageWidth,\n          imageHeight,\n          0,\n          0,\n          canvas.width,\n          canvas.height\n        );\n        this.image_.setImage(canvas);\n      }\n    }\n    super.handleImageChange(evt);\n  }\n}\n\nexport default Static;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}