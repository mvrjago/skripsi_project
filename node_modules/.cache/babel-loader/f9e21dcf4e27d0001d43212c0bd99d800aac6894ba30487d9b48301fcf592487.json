{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/layer/WebGLPoints\n */\nimport Layer from './Layer.js';\nimport WebGLPointsLayerRenderer from '../renderer/webgl/PointsLayer.js';\nimport { assign } from '../obj.js';\nimport { parseLiteralStyle } from '../webgl/ShaderBuilder.js';\n/**\n * @typedef {Object} Options\n * @property {import('../style/LiteralStyle.js').LiteralStyle} style Literal style to apply to the layer features.\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {boolean} [disableHitDetection=false] Setting this to true will provide a slight performance boost, but will\n * prevent all hit detection on the layer.\n */\n/**\n * @classdesc\n * Layer optimized for rendering large point datasets. Takes a `style` property which\n * is a serializable JSON object describing how the layer should be rendered.\n *\n * Here are a few samples of literal style objects:\n * ```js\n * const style = {\n *   symbol: {\n *     symbolType: 'circle',\n *     size: 8,\n *     color: '#33AAFF',\n *     opacity: 0.9\n *   }\n * }\n * ```\n *\n * ```js\n * const style = {\n *   symbol: {\n *     symbolType: 'image',\n *     offset: [0, 12],\n *     size: [4, 8],\n *     src: '../static/exclamation-mark.png'\n *   }\n * }\n * ```\n *\n * **Important: a `WebGLPoints` layer must be manually disposed when removed, otherwise the underlying WebGL context\n * will not be garbage collected.**\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n */\nvar WebGLPointsLayer = /** @class */function (_super) {\n  __extends(WebGLPointsLayer, _super);\n  /**\n   * @param {Options} options Options.\n   */\n  function WebGLPointsLayer(options) {\n    var _this = this;\n    var baseOptions = assign({}, options);\n    _this = _super.call(this, baseOptions) || this;\n    /**\n     * @private\n     * @type {import('../webgl/ShaderBuilder.js').StyleParseResult}\n     */\n    _this.parseResult_ = parseLiteralStyle(options.style);\n    /**\n     * @private\n     * @type {boolean}\n     */\n    _this.hitDetectionDisabled_ = !!options.disableHitDetection;\n    return _this;\n  }\n  /**\n   * Create a renderer for this layer.\n   * @return {WebGLPointsLayerRenderer} A layer renderer.\n   */\n  WebGLPointsLayer.prototype.createRenderer = function () {\n    return new WebGLPointsLayerRenderer(this, {\n      vertexShader: this.parseResult_.builder.getSymbolVertexShader(),\n      fragmentShader: this.parseResult_.builder.getSymbolFragmentShader(),\n      hitVertexShader: !this.hitDetectionDisabled_ && this.parseResult_.builder.getSymbolVertexShader(true),\n      hitFragmentShader: !this.hitDetectionDisabled_ && this.parseResult_.builder.getSymbolFragmentShader(true),\n      uniforms: this.parseResult_.uniforms,\n      attributes: this.parseResult_.attributes\n    });\n  };\n  /**\n   * Clean up.\n   */\n  WebGLPointsLayer.prototype.disposeInternal = function () {\n    this.getRenderer().disposeInternal();\n    _super.prototype.disposeInternal.call(this);\n  };\n  return WebGLPointsLayer;\n}(Layer);\nexport default WebGLPointsLayer;","map":{"version":3,"names":["Layer","WebGLPointsLayerRenderer","assign","parseLiteralStyle","WebGLPointsLayer","_super","__extends","options","_this","baseOptions","call","parseResult_","style","hitDetectionDisabled_","disableHitDetection","prototype","createRenderer","vertexShader","builder","getSymbolVertexShader","fragmentShader","getSymbolFragmentShader","hitVertexShader","hitFragmentShader","uniforms","attributes","disposeInternal","getRenderer"],"sources":["/Users/mariovicky/Skripsi_OpenLayers/node_modules/ol/src/layer/WebGLPoints.js"],"sourcesContent":["/**\n * @module ol/layer/WebGLPoints\n */\nimport Layer from './Layer.js';\nimport WebGLPointsLayerRenderer from '../renderer/webgl/PointsLayer.js';\nimport {assign} from '../obj.js';\nimport {parseLiteralStyle} from '../webgl/ShaderBuilder.js';\n\n/**\n * @typedef {Object} Options\n * @property {import('../style/LiteralStyle.js').LiteralStyle} style Literal style to apply to the layer features.\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {boolean} [disableHitDetection=false] Setting this to true will provide a slight performance boost, but will\n * prevent all hit detection on the layer.\n */\n\n/**\n * @classdesc\n * Layer optimized for rendering large point datasets. Takes a `style` property which\n * is a serializable JSON object describing how the layer should be rendered.\n *\n * Here are a few samples of literal style objects:\n * ```js\n * const style = {\n *   symbol: {\n *     symbolType: 'circle',\n *     size: 8,\n *     color: '#33AAFF',\n *     opacity: 0.9\n *   }\n * }\n * ```\n *\n * ```js\n * const style = {\n *   symbol: {\n *     symbolType: 'image',\n *     offset: [0, 12],\n *     size: [4, 8],\n *     src: '../static/exclamation-mark.png'\n *   }\n * }\n * ```\n *\n * **Important: a `WebGLPoints` layer must be manually disposed when removed, otherwise the underlying WebGL context\n * will not be garbage collected.**\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n */\nclass WebGLPointsLayer extends Layer {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    const baseOptions = assign({}, options);\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {import('../webgl/ShaderBuilder.js').StyleParseResult}\n     */\n    this.parseResult_ = parseLiteralStyle(options.style);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hitDetectionDisabled_ = !!options.disableHitDetection;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {WebGLPointsLayerRenderer} A layer renderer.\n   */\n  createRenderer() {\n    return new WebGLPointsLayerRenderer(this, {\n      vertexShader: this.parseResult_.builder.getSymbolVertexShader(),\n      fragmentShader: this.parseResult_.builder.getSymbolFragmentShader(),\n      hitVertexShader:\n        !this.hitDetectionDisabled_ &&\n        this.parseResult_.builder.getSymbolVertexShader(true),\n      hitFragmentShader:\n        !this.hitDetectionDisabled_ &&\n        this.parseResult_.builder.getSymbolFragmentShader(true),\n      uniforms: this.parseResult_.uniforms,\n      attributes: this.parseResult_.attributes,\n    });\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.getRenderer().disposeInternal();\n    super.disposeInternal();\n  }\n}\n\nexport default WebGLPointsLayer;\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;;AAGA,OAAOA,KAAK,MAAM,YAAY;AAC9B,OAAOC,wBAAwB,MAAM,kCAAkC;AACvE,SAAQC,MAAM,QAAO,WAAW;AAChC,SAAQC,iBAAiB,QAAO,2BAA2B;AAE3D;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA,IAAAC,gBAAA,0BAAAC,MAAA;EAA+BC,SAAA,CAAAF,gBAAA,EAAAC,MAAA;EAC7B;;;EAGA,SAAAD,iBAAYG,OAAO;IAAnB,IAAAC,KAAA;IACE,IAAMC,WAAW,GAAGP,MAAM,CAAC,EAAE,EAAEK,OAAO,CAAC;IAEvCC,KAAA,GAAAH,MAAA,CAAAK,IAAA,OAAMD,WAAW,CAAC;IAElB;;;;IAIAD,KAAI,CAACG,YAAY,GAAGR,iBAAiB,CAACI,OAAO,CAACK,KAAK,CAAC;IAEpD;;;;IAIAJ,KAAI,CAACK,qBAAqB,GAAG,CAAC,CAACN,OAAO,CAACO,mBAAmB;;EAC5D;EAEA;;;;EAIAV,gBAAA,CAAAW,SAAA,CAAAC,cAAc,GAAd;IACE,OAAO,IAAIf,wBAAwB,CAAC,IAAI,EAAE;MACxCgB,YAAY,EAAE,IAAI,CAACN,YAAY,CAACO,OAAO,CAACC,qBAAqB,EAAE;MAC/DC,cAAc,EAAE,IAAI,CAACT,YAAY,CAACO,OAAO,CAACG,uBAAuB,EAAE;MACnEC,eAAe,EACb,CAAC,IAAI,CAACT,qBAAqB,IAC3B,IAAI,CAACF,YAAY,CAACO,OAAO,CAACC,qBAAqB,CAAC,IAAI,CAAC;MACvDI,iBAAiB,EACf,CAAC,IAAI,CAACV,qBAAqB,IAC3B,IAAI,CAACF,YAAY,CAACO,OAAO,CAACG,uBAAuB,CAAC,IAAI,CAAC;MACzDG,QAAQ,EAAE,IAAI,CAACb,YAAY,CAACa,QAAQ;MACpCC,UAAU,EAAE,IAAI,CAACd,YAAY,CAACc;KAC/B,CAAC;EACJ,CAAC;EAED;;;EAGArB,gBAAA,CAAAW,SAAA,CAAAW,eAAe,GAAf;IACE,IAAI,CAACC,WAAW,EAAE,CAACD,eAAe,EAAE;IACpCrB,MAAA,CAAAU,SAAA,CAAMW,eAAe,CAAAhB,IAAA,MAAE;EACzB,CAAC;EACH,OAAAN,gBAAC;AAAD,CAAC,CAhD8BJ,KAAK;AAkDpC,eAAeI,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}