{"ast":null,"code":"var _jsxFileName = \"/Users/mariovicky/Skripsi_OpenLayers/src/containers/Map/OpenlayerMaps/Map.js\";\nimport React, { Component } from 'react';\nimport 'ol/ol.css';\nimport './Map.css';\nimport Map from 'ol/Map.js';\nimport View from 'ol/View.js';\nimport { Stroke, Style, Icon, Fill } from 'ol/style.js';\nimport { Tile as TileLayer, Vector as VectorLayer } from 'ol/layer.js';\nimport OSM from 'ol/source/OSM.js';\nimport VectorSource from 'ol/source/Vector.js';\nimport Feature from 'ol/Feature.js';\nimport { fromLonLat } from 'ol/proj.js';\nimport LineString from 'ol/geom/LineString.js';\nimport { getVectorContext } from 'ol/render.js';\nimport { getWidth } from 'ol/extent.js';\nimport arc from 'arc';\nimport airplaneimg from './614.png';\nclass MapComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.animateFlights = event => {\n      const {\n        lamin,\n        lomin,\n        lamax,\n        lomax\n      } = this.state;\n\n      // Periksa apakah bbox telah digambar sebelumnya\n      if (lamin !== null && lomin !== null && lamax !== null && lomax !== null) {\n        const vectorContext = getVectorContext(event);\n        const frameState = event.frameState;\n        vectorContext.setStyle(this.style);\n        animateFlights = event => {\n          const {\n            lamin,\n            lomin,\n            lamax,\n            lomax\n          } = this.state;\n\n          // Periksa apakah bbox telah digambar sebelumnya\n          if (lamin !== null && lomin !== null && lamax !== null && lomax !== null) {\n            const vectorContext = getVectorContext(event);\n            const frameState = event.frameState;\n\n            // Atur gaya pesawat\n            vectorContext.setStyle(this.airplaneStyle);\n            const features = this.flightsSource.getFeatures();\n            for (let i = 0; i < features.length; i++) {\n              const feature = features[i];\n              if (!feature.get('finished')) {\n                const coords = feature.getGeometry().getCoordinates();\n                const elapsedTime = frameState.time - feature.get('start');\n                if (elapsedTime >= 0) {\n                  const elapsedPoints = elapsedTime * this.pointsPerMs;\n                  if (elapsedPoints >= coords.length) {\n                    feature.set('finished', true);\n                  }\n                  const maxIndex = Math.min(elapsedPoints, coords.length);\n                  const currentLine = new LineString(coords.slice(0, maxIndex));\n                  const worldWidth = getWidth(this.map.getView().getProjection().getExtent());\n                  const offset = Math.floor(this.map.getView().getCenter()[0] / worldWidth);\n                  currentLine.translate(offset * worldWidth, 0);\n                  vectorContext.drawGeometry(currentLine);\n                  currentLine.translate(worldWidth, 0);\n                  vectorContext.drawGeometry(currentLine);\n\n                  // Perbarui koordinat pesawat\n                  const currentCoordinate = coords[Math.floor(elapsedPoints) - 1];\n                  const airplaneFeature = this.airplaneSource.getFeatures()[0];\n                  airplaneFeature.setGeometry(new Point(currentCoordinate));\n                }\n              }\n            }\n          }\n        };\n        this.map.render();\n      }\n    };\n    this.handleCoordinateInputChange = event => {\n      this.setState({\n        coordinateInput: event.target.value\n      });\n    };\n    this.handleCoordinateSubmit = () => {\n      const {\n        coordinateInput\n      } = this.state;\n      // Parse koordinat dari string input\n      const coordinates = coordinateInput.split(',').map(coord => parseFloat(coord.trim()));\n      // Cek apakah koordinat valid\n      if (coordinates.length === 4 && !isNaN(coordinates[0]) && !isNaN(coordinates[1]) && !isNaN(coordinates[2]) && !isNaN(coordinates[3])) {\n        // Hapus vektor bbox sebelumnya (jika ada)\n        this.removeBoundingBox();\n\n        // Atur tampilan ke koordinat yang dipilih\n        const view = this.map.getView();\n        const center = fromLonLat(coordinates); // Ubah koordinat menjadi titik dalam EPSG:3857\n        view.setCenter(center);\n        view.setZoom(2); // Ganti dengan zoom level yang diinginkan\n\n        // Atur state dengan koordinat terkait\n        this.setState({\n          lamin: coordinates[1] - 1,\n          lomin: coordinates[0] - 1,\n          lamax: coordinates[3] + 1,\n          lomax: coordinates[2] + 1\n        }, () => {\n          this.drawBoundingBox();\n        });\n      } else {\n        // Tampilkan pesan kesalahan jika koordinat tidak valid\n        alert('Koordinat tidak valid!');\n      }\n    };\n    this.mapRef = /*#__PURE__*/React.createRef();\n    this.map = null;\n    this.flightsSource = null;\n    this.tileLayer = null;\n    this.flightsLayer = null;\n    this.style = null;\n    this.airplaneIcon = null;\n    this.pointsPerMs = 0.02;\n    this.state = {\n      coordinateInput: '',\n      lamin: null,\n      lomin: null,\n      lamax: null,\n      lomax: null\n    };\n  }\n  componentDidMount() {\n    this.initializeMap();\n    this.loadFlightsData();\n  }\n  initializeMap() {\n    this.tileLayer = new TileLayer({\n      source: new OSM()\n    });\n    this.map = new Map({\n      layers: [this.tileLayer],\n      target: this.mapRef.current,\n      view: new View({\n        center: [-11000000, 4600000],\n        zoom: 2\n      })\n    });\n    this.flightsSource = new VectorSource({\n      loader: () => {\n        this.loadFlightsData(); // Load data penerbangan saat komponen dipasang\n        // Set interval untuk memuat data penerbangan setiap 10 detik (10000 milidetik)\n        setInterval(() => {\n          this.loadFlightsData();\n        }, 10000);\n      }\n    });\n    this.airplaneIcon = new Icon({\n      src: airplaneimg,\n      scale: 0.5\n    });\n    this.style = new Style({\n      stroke: new Stroke({\n        color: 'red',\n        width: 2\n      }),\n      image: this.airplaneIcon\n    });\n    this.airplanesSource = new VectorSource();\n    this.airplanesLayer = new VectorLayer({\n      source: this.airplanesSource,\n      style: new Style({\n        image: this.airplaneIcon\n      })\n    });\n    this.flightsSource = new VectorSource();\n    this.flightsLayer = new VectorLayer({\n      source: this.flightsSource,\n      style: feature => {\n        if (feature.get('finished')) {\n          return this.style;\n        }\n        return null;\n      }\n    });\n    this.map.addLayer(this.flightsLayer);\n    this.map.addLayer(this.airplanesLayer);\n  }\n  loadFlightsData() {\n    const url = '/data/openflights/data_adsb.json';\n    fetch(url).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(json => {\n      const flightsData = json.flights;\n\n      // Menghitung total batch yang diperlukan\n      const totalBatches = Math.ceil(flightsData.length / 1000);\n\n      // Memuat data dalam batch menggunakan setTimeout\n      let batchIndex = 0;\n      const loadNextBatch = () => {\n        const startIndex = batchIndex * 1000;\n        const endIndex = (batchIndex + 1) * 1000;\n        const flightsBatch = flightsData.slice(startIndex, endIndex);\n        this.loadFlightsBatch(flightsBatch);\n        batchIndex++;\n        if (batchIndex < totalBatches) {\n          setTimeout(loadNextBatch, 1000); // Menunggu 1 detik sebelum memuat batch berikutnya\n        }\n\n        this.map.render();\n      };\n      loadNextBatch();\n    }).catch(error => {\n      console.error('Error fetching JSON:', error);\n      console.error('URL:', url);\n    });\n  }\n  loadFlightsBatch(flightsBatch) {\n    const {\n      lamin,\n      lomin,\n      lamax,\n      lomax\n    } = this.state;\n    for (let i = 0; i < flightsBatch.length; i++) {\n      const flights = flightsBatch[i];\n      const from = flights[0];\n      const to = flights[1];\n\n      // Periksa apakah nilai 'from' dan 'to' valid sebelum mengakses indeksnya\n      if (from && from.length >= 2 && to && to.length >= 2) {\n        const fromLonLat = from.map(coord => parseFloat(coord));\n        const toLonLat = to.map(coord => parseFloat(coord));\n\n        // Periksa apakah koordinat penerbangan berada di dalam bbox\n        if (fromLonLat[1] >= lomin && fromLonLat[1] <= lomax && fromLonLat[0] >= lamin && fromLonLat[0] <= lamax && toLonLat[1] >= lomin && toLonLat[1] <= lomax && toLonLat[0] >= lamin && toLonLat[0] <= lamax) {\n          const arcGenerator = new arc.GreatCircle({\n            x: fromLonLat[1],\n            y: fromLonLat[0]\n          }, {\n            x: toLonLat[1],\n            y: toLonLat[0]\n          });\n          const arcLine = arcGenerator.Arc(100, {\n            offset: 10\n          });\n          const features = [];\n          arcLine.geometries.forEach(geometry => {\n            const line = new LineString(geometry.coords);\n            line.transform('EPSG:4326', 'EPSG:3857');\n            features.push(new Feature({\n              geometry: line,\n              finished: false\n            }));\n          });\n          this.addLater(features, i * 50);\n        }\n      }\n    }\n    this.tileLayer.on('postrender', this.animateFlights);\n  }\n  addLater(features, timeout) {\n    window.setTimeout(() => {\n      let start = Date.now();\n      features.forEach(feature => {\n        feature.set('start', start);\n        this.flightsSource.addFeature(feature);\n        const duration = (feature.getGeometry().getCoordinates().length - 1) / this.pointsPerMs;\n        start += duration;\n      });\n    }, timeout);\n  }\n  removeBoundingBox() {\n    const layers = this.map.getLayers().getArray();\n    const bboxLayers = layers.filter(layer => layer.get('name') === 'bboxLayer');\n    bboxLayers.forEach(bboxLayer => {\n      this.map.removeLayer(bboxLayer);\n    });\n  }\n  drawBoundingBox() {\n    const {\n      lamin,\n      lomin,\n      lamax,\n      lomax\n    } = this.state;\n    const bboxSource = new VectorSource();\n    const bboxLayer = new VectorLayer({\n      source: bboxSource,\n      style: new Style({\n        stroke: new Stroke({\n          color: 'blue',\n          width: 5\n        }),\n        fill: new Fill({\n          color: 'rgba(0, 0, 255, 0.1)'\n        })\n      })\n    });\n    const bboxCoords = [[lomin, lamin], [lomin, lamax], [lomax, lamax], [lomax, lamin], [lomin, lamin]];\n    const bboxFeature = new Feature({\n      geometry: new LineString(bboxCoords).transform('EPSG:4326', 'EPSG:3857')\n    });\n    bboxSource.addFeature(bboxFeature);\n    bboxLayer.set('name', 'bboxLayer'); // Setel nama lapisan untuk dapat diakses saat dihapus\n\n    this.map.addLayer(bboxLayer);\n  }\n  render() {\n    const {\n      lamin,\n      lomin,\n      lamax,\n      lomax\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.mapRef,\n      className: \"map-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"coordinate-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"coordinateInput\",\n      placeholder: \"Masukkan koordinat (longitude, latitude)\",\n      onChange: this.handleCoordinateInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.handleCoordinateSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 13\n      }\n    }, \"Go\"))), lamin !== null && lomin !== null && lamax !== null && lomax !== null && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bbox-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 11\n      }\n    }, \"Bounding box: [\", lamin, \", \", lomin, \", \", lamax, \", \", lomax, \"]\"));\n  }\n}\nexport default MapComponent;","map":{"version":3,"names":["React","Component","Map","View","Stroke","Style","Icon","Fill","Tile","TileLayer","Vector","VectorLayer","OSM","VectorSource","Feature","fromLonLat","LineString","getVectorContext","getWidth","arc","airplaneimg","MapComponent","constructor","props","animateFlights","event","lamin","lomin","lamax","lomax","state","vectorContext","frameState","setStyle","style","airplaneStyle","features","flightsSource","getFeatures","i","length","feature","get","coords","getGeometry","getCoordinates","elapsedTime","time","elapsedPoints","pointsPerMs","set","maxIndex","Math","min","currentLine","slice","worldWidth","map","getView","getProjection","getExtent","offset","floor","getCenter","translate","drawGeometry","currentCoordinate","airplaneFeature","airplaneSource","setGeometry","Point","render","handleCoordinateInputChange","setState","coordinateInput","target","value","handleCoordinateSubmit","coordinates","split","coord","parseFloat","trim","isNaN","removeBoundingBox","view","center","setCenter","setZoom","drawBoundingBox","alert","mapRef","createRef","tileLayer","flightsLayer","airplaneIcon","componentDidMount","initializeMap","loadFlightsData","source","layers","current","zoom","loader","setInterval","src","scale","stroke","color","width","image","airplanesSource","airplanesLayer","addLayer","url","fetch","then","response","ok","Error","json","flightsData","flights","totalBatches","ceil","batchIndex","loadNextBatch","startIndex","endIndex","flightsBatch","loadFlightsBatch","setTimeout","catch","error","console","from","to","toLonLat","arcGenerator","GreatCircle","x","y","arcLine","Arc","geometries","forEach","geometry","line","transform","push","finished","addLater","on","timeout","window","start","Date","now","addFeature","duration","getLayers","getArray","bboxLayers","filter","layer","bboxLayer","removeLayer","bboxSource","fill","bboxCoords","bboxFeature","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","ref","className","type","name","placeholder","onChange","onClick"],"sources":["/Users/mariovicky/Skripsi_OpenLayers/src/containers/Map/OpenlayerMaps/Map.js"],"sourcesContent":["import React, { Component } from 'react';\nimport 'ol/ol.css';\nimport './Map.css';\nimport Map from 'ol/Map.js';\nimport View from 'ol/View.js';\nimport { Stroke, Style, Icon, Fill } from 'ol/style.js';\nimport { Tile as TileLayer, Vector as VectorLayer } from 'ol/layer.js';\nimport OSM from 'ol/source/OSM.js';\nimport VectorSource from 'ol/source/Vector.js';\nimport Feature from 'ol/Feature.js';\nimport { fromLonLat } from 'ol/proj.js';\nimport LineString from 'ol/geom/LineString.js';\nimport { getVectorContext } from 'ol/render.js';\nimport { getWidth } from 'ol/extent.js';\nimport arc from 'arc';\nimport airplaneimg from './614.png';\n\nclass MapComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.mapRef = React.createRef();\n    this.map = null;\n    this.flightsSource = null;\n    this.tileLayer = null;\n    this.flightsLayer = null;\n    this.style = null;\n    this.airplaneIcon = null;\n    this.pointsPerMs = 0.02;\n    this.state = {\n      coordinateInput: '',\n      lamin: null,\n      lomin: null,\n      lamax: null,\n      lomax: null,\n    };\n  }\n\n  componentDidMount() {\n    this.initializeMap();\n    this.loadFlightsData();\n  }\n\n  initializeMap() {\n    this.tileLayer = new TileLayer({\n      source: new OSM(),\n    });\n\n    this.map = new Map({\n      layers: [this.tileLayer],\n      target: this.mapRef.current,\n      view: new View({\n        center: [-11000000, 4600000],\n        zoom: 2,\n      }),\n    });\n\n    this.flightsSource = new VectorSource({\n      loader: () => {\n        this.loadFlightsData(); // Load data penerbangan saat komponen dipasang\n        // Set interval untuk memuat data penerbangan setiap 10 detik (10000 milidetik)\n        setInterval(() => {\n          this.loadFlightsData();\n        }, 10000);\n      }\n    });\n\n    this.airplaneIcon = new Icon({\n      src: airplaneimg,\n      scale: 0.5,\n    });\n\n    this.style = new Style({\n      stroke: new Stroke({\n        color: 'red',\n        width: 2,\n      }),\n      image: this.airplaneIcon\n    });\n\n    this.airplanesSource = new VectorSource();\n    this.airplanesLayer = new VectorLayer({\n      source: this.airplanesSource,\n      style: new Style({\n        image: this.airplaneIcon,\n      }),\n    });\n\n    this.flightsSource = new VectorSource();\n    this.flightsLayer = new VectorLayer({\n      source: this.flightsSource,\n      style: (feature) => {\n        if (feature.get('finished')) {\n          return this.style;\n        }\n        return null;\n      },\n    });\n\n    this.map.addLayer(this.flightsLayer);\n    this.map.addLayer(this.airplanesLayer);\n  }\n\n  loadFlightsData() {\n    const url = '/data/openflights/data_adsb.json';\n    fetch(url)\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then((json) => {\n        const flightsData = json.flights;\n\n        // Menghitung total batch yang diperlukan\n        const totalBatches = Math.ceil(flightsData.length / 1000);\n\n        // Memuat data dalam batch menggunakan setTimeout\n        let batchIndex = 0;\n        const loadNextBatch = () => {\n          const startIndex = batchIndex * 1000;\n          const endIndex = (batchIndex + 1) * 1000;\n          const flightsBatch = flightsData.slice(startIndex, endIndex);\n\n          this.loadFlightsBatch(flightsBatch);\n\n          batchIndex++;\n\n          if (batchIndex < totalBatches) {\n            setTimeout(loadNextBatch, 1000); // Menunggu 1 detik sebelum memuat batch berikutnya\n          }\n\n          this.map.render();\n        };\n\n        loadNextBatch();\n      })\n      .catch((error) => {\n        console.error('Error fetching JSON:', error);\n        console.error('URL:', url);\n      });\n  }\n\n  loadFlightsBatch(flightsBatch) {\n    const { lamin, lomin, lamax, lomax } = this.state;\n  \n    for (let i = 0; i < flightsBatch.length; i++) {\n      const flights = flightsBatch[i];\n      const from = flights[0];\n      const to = flights[1];\n  \n      // Periksa apakah nilai 'from' dan 'to' valid sebelum mengakses indeksnya\n      if (from && from.length >= 2 && to && to.length >= 2) {\n        const fromLonLat = from.map(coord => parseFloat(coord));\n        const toLonLat = to.map(coord => parseFloat(coord));\n  \n        // Periksa apakah koordinat penerbangan berada di dalam bbox\n        if (\n          fromLonLat[1] >= lomin &&\n          fromLonLat[1] <= lomax &&\n          fromLonLat[0] >= lamin &&\n          fromLonLat[0] <= lamax &&\n          toLonLat[1] >= lomin &&\n          toLonLat[1] <= lomax &&\n          toLonLat[0] >= lamin &&\n          toLonLat[0] <= lamax\n        ) {\n          const arcGenerator = new arc.GreatCircle(\n            { x: fromLonLat[1], y: fromLonLat[0] },\n            { x: toLonLat[1], y: toLonLat[0] }\n          );\n  \n          const arcLine = arcGenerator.Arc(100, { offset: 10});\n          const features = [];\n          arcLine.geometries.forEach((geometry) => {\n            const line = new LineString(geometry.coords);\n            line.transform('EPSG:4326', 'EPSG:3857');\n  \n            features.push(\n              new Feature({\n                geometry: line,\n                finished: false,\n              })\n            );\n          });\n  \n          this.addLater(features, i * 50);\n        }\n      }\n    }\n  \n    this.tileLayer.on('postrender', this.animateFlights);\n  }\n  \n\n  animateFlights = (event) => {\n    const { lamin, lomin, lamax, lomax } = this.state;\n\n    // Periksa apakah bbox telah digambar sebelumnya\n    if (lamin !== null && lomin !== null && lamax !== null && lomax !== null) {\n      const vectorContext = getVectorContext(event);\n      const frameState = event.frameState;\n      vectorContext.setStyle(this.style);\n\n      animateFlights = (event) => {\n        const { lamin, lomin, lamax, lomax } = this.state;\n    \n        // Periksa apakah bbox telah digambar sebelumnya\n        if (lamin !== null && lomin !== null && lamax !== null && lomax !== null) {\n          const vectorContext = getVectorContext(event);\n          const frameState = event.frameState;\n    \n          // Atur gaya pesawat\n          vectorContext.setStyle(this.airplaneStyle);\n    \n          const features = this.flightsSource.getFeatures();\n          for (let i = 0; i < features.length; i++) {\n            const feature = features[i];\n            if (!feature.get('finished')) {\n              const coords = feature.getGeometry().getCoordinates();\n              const elapsedTime = frameState.time - feature.get('start');\n              if (elapsedTime >= 0) {\n                const elapsedPoints = elapsedTime * this.pointsPerMs;\n    \n                if (elapsedPoints >= coords.length) {\n                  feature.set('finished', true);\n                }\n    \n                const maxIndex = Math.min(elapsedPoints, coords.length);\n                const currentLine = new LineString(coords.slice(0, maxIndex));\n    \n                const worldWidth = getWidth(this.map.getView().getProjection().getExtent());\n                const offset = Math.floor(this.map.getView().getCenter()[0] / worldWidth);\n    \n                currentLine.translate(offset * worldWidth, 0);\n                vectorContext.drawGeometry(currentLine);\n                currentLine.translate(worldWidth, 0);\n                vectorContext.drawGeometry(currentLine);\n    \n                // Perbarui koordinat pesawat\n                const currentCoordinate = coords[Math.floor(elapsedPoints) - 1];\n                const airplaneFeature = this.airplaneSource.getFeatures()[0];\n                airplaneFeature.setGeometry(new Point(currentCoordinate));\n              }\n            }\n          }\n        }\n      }\n\n      this.map.render();\n    }\n  };\n\n  addLater(features, timeout) {\n    window.setTimeout(() => {\n      let start = Date.now();\n      features.forEach((feature) => {\n        feature.set('start', start);\n        this.flightsSource.addFeature(feature);\n        const duration =\n          (feature.getGeometry().getCoordinates().length - 1) / this.pointsPerMs;\n        start += duration;\n      });\n    }, timeout);\n  }\n\n\n  handleCoordinateInputChange = (event) => {\n    this.setState({ coordinateInput: event.target.value });\n  };\n\nhandleCoordinateSubmit = () => {\n  const { coordinateInput } = this.state;\n  // Parse koordinat dari string input\n  const coordinates = coordinateInput.split(',').map((coord) => parseFloat(coord.trim()));\n  // Cek apakah koordinat valid\n  if (coordinates.length === 4 && !isNaN(coordinates[0]) && !isNaN(coordinates[1]) && !isNaN(coordinates[2]) && !isNaN(coordinates[3])) {\n    // Hapus vektor bbox sebelumnya (jika ada)\n    this.removeBoundingBox();\n\n    // Atur tampilan ke koordinat yang dipilih\n    const view = this.map.getView();\n    const center = fromLonLat(coordinates); // Ubah koordinat menjadi titik dalam EPSG:3857\n    view.setCenter(center);\n    view.setZoom(2); // Ganti dengan zoom level yang diinginkan\n\n    // Atur state dengan koordinat terkait\n    this.setState(\n      {\n        lamin: coordinates[1] - 1,\n        lomin: coordinates[0] - 1,\n        lamax: coordinates[3] + 1,\n        lomax: coordinates[2] + 1,\n      },\n      () => {\n        this.drawBoundingBox();\n      }\n    );\n  } else {\n    // Tampilkan pesan kesalahan jika koordinat tidak valid\n    alert('Koordinat tidak valid!');\n  }\n};\n\nremoveBoundingBox() {\n  const layers = this.map.getLayers().getArray();\n  const bboxLayers = layers.filter(layer => layer.get('name') === 'bboxLayer');\n  bboxLayers.forEach(bboxLayer => {\n    this.map.removeLayer(bboxLayer);\n  });\n}\n\n  drawBoundingBox() {\n    const { lamin, lomin, lamax, lomax } = this.state;\n\n    const bboxSource = new VectorSource();\n    const bboxLayer = new VectorLayer({\n      source: bboxSource,\n      style: new Style({\n        stroke: new Stroke({\n          color: 'blue',\n          width: 5,\n        }),\n        fill: new Fill({\n          color: 'rgba(0, 0, 255, 0.1)',\n        }),\n      }),\n    });\n\n    const bboxCoords = [\n      [lomin, lamin],\n      [lomin, lamax],\n      [lomax, lamax],\n      [lomax, lamin],\n      [lomin, lamin],\n    ];\n\n    const bboxFeature = new Feature({\n      geometry: new LineString(bboxCoords).transform('EPSG:4326', 'EPSG:3857'),\n    });\n\n    bboxSource.addFeature(bboxFeature);\n\n    bboxLayer.set('name', 'bboxLayer'); // Setel nama lapisan untuk dapat diakses saat dihapus\n\n    this.map.addLayer(bboxLayer);\n  }\n\n  render() {\n    const { lamin, lomin, lamax, lomax } = this.state;\n    return (\n      <div>\n        <div ref={this.mapRef} className=\"map-container\" />\n        <div className=\"coordinate-input\">\n          <form>\n            <input\n              type=\"text\"\n              name=\"coordinateInput\"\n              placeholder=\"Masukkan koordinat (longitude, latitude)\"\n              onChange={this.handleCoordinateInputChange}\n            />\n            <button type=\"button\" onClick={this.handleCoordinateSubmit}>\n              Go\n            </button>\n          </form>\n        </div>\n        {lamin !== null && lomin !== null && lamax !== null && lomax !== null && (\n          <div className=\"bbox-info\">\n            Bounding box: [{lamin}, {lomin}, {lamax}, {lomax}]\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default MapComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}