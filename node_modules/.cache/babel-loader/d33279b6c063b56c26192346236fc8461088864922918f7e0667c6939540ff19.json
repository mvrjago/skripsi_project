{"ast":null,"code":"'use strict';\n\n// Load modules\nconst Any = require('../any');\nconst Hoek = require('hoek');\n\n// Declare internals\n\nconst internals = {};\ninternals.Lazy = class extends Any {\n  constructor() {\n    super();\n    this._type = 'lazy';\n  }\n  _base(value, state, options) {\n    const result = {\n      value\n    };\n    const lazy = this._flags.lazy;\n    if (!lazy) {\n      result.errors = this.createError('lazy.base', null, state, options);\n      return result;\n    }\n    const schema = lazy();\n    if (!(schema instanceof Any)) {\n      result.errors = this.createError('lazy.schema', null, state, options);\n      return result;\n    }\n    return schema._validate(value, state, options);\n  }\n  set(fn) {\n    Hoek.assert(typeof fn === 'function', 'You must provide a function as first argument');\n    const obj = this.clone();\n    obj._flags.lazy = fn;\n    return obj;\n  }\n};\nmodule.exports = new internals.Lazy();","map":{"version":3,"names":["Any","require","Hoek","internals","Lazy","constructor","_type","_base","value","state","options","result","lazy","_flags","errors","createError","schema","_validate","set","fn","assert","obj","clone","module","exports"],"sources":["/Users/mariovicky/Skripsi_OpenLayers/node_modules/joi/lib/types/lazy/index.js"],"sourcesContent":["'use strict';\n\n// Load modules\n\nconst Any = require('../any');\nconst Hoek = require('hoek');\n\n\n// Declare internals\n\nconst internals = {};\n\n\ninternals.Lazy = class extends Any {\n\n    constructor() {\n\n        super();\n        this._type = 'lazy';\n    }\n\n    _base(value, state, options) {\n\n        const result = { value };\n        const lazy = this._flags.lazy;\n\n        if (!lazy) {\n            result.errors = this.createError('lazy.base', null, state, options);\n            return result;\n        }\n\n        const schema = lazy();\n\n        if (!(schema instanceof Any)) {\n            result.errors = this.createError('lazy.schema', null, state, options);\n            return result;\n        }\n\n        return schema._validate(value, state, options);\n    }\n\n    set(fn) {\n\n        Hoek.assert(typeof fn === 'function', 'You must provide a function as first argument');\n\n        const obj = this.clone();\n        obj._flags.lazy = fn;\n        return obj;\n    }\n\n};\n\nmodule.exports = new internals.Lazy();\n"],"mappings":"AAAA,YAAY;;AAEZ;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAC7B,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAM,CAAC;;AAG5B;;AAEA,MAAME,SAAS,GAAG,CAAC,CAAC;AAGpBA,SAAS,CAACC,IAAI,GAAG,cAAcJ,GAAG,CAAC;EAE/BK,WAAWA,CAAA,EAAG;IAEV,KAAK,CAAC,CAAC;IACP,IAAI,CAACC,KAAK,GAAG,MAAM;EACvB;EAEAC,KAAKA,CAACC,KAAK,EAAEC,KAAK,EAAEC,OAAO,EAAE;IAEzB,MAAMC,MAAM,GAAG;MAAEH;IAAM,CAAC;IACxB,MAAMI,IAAI,GAAG,IAAI,CAACC,MAAM,CAACD,IAAI;IAE7B,IAAI,CAACA,IAAI,EAAE;MACPD,MAAM,CAACG,MAAM,GAAG,IAAI,CAACC,WAAW,CAAC,WAAW,EAAE,IAAI,EAAEN,KAAK,EAAEC,OAAO,CAAC;MACnE,OAAOC,MAAM;IACjB;IAEA,MAAMK,MAAM,GAAGJ,IAAI,CAAC,CAAC;IAErB,IAAI,EAAEI,MAAM,YAAYhB,GAAG,CAAC,EAAE;MAC1BW,MAAM,CAACG,MAAM,GAAG,IAAI,CAACC,WAAW,CAAC,aAAa,EAAE,IAAI,EAAEN,KAAK,EAAEC,OAAO,CAAC;MACrE,OAAOC,MAAM;IACjB;IAEA,OAAOK,MAAM,CAACC,SAAS,CAACT,KAAK,EAAEC,KAAK,EAAEC,OAAO,CAAC;EAClD;EAEAQ,GAAGA,CAACC,EAAE,EAAE;IAEJjB,IAAI,CAACkB,MAAM,CAAC,OAAOD,EAAE,KAAK,UAAU,EAAE,+CAA+C,CAAC;IAEtF,MAAME,GAAG,GAAG,IAAI,CAACC,KAAK,CAAC,CAAC;IACxBD,GAAG,CAACR,MAAM,CAACD,IAAI,GAAGO,EAAE;IACpB,OAAOE,GAAG;EACd;AAEJ,CAAC;AAEDE,MAAM,CAACC,OAAO,GAAG,IAAIrB,SAAS,CAACC,IAAI,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}