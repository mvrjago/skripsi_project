{"ast":null,"code":"'use strict';\n\n// Load modules\nconst Any = require('../any');\nconst Ref = require('../../ref');\nconst Hoek = require('hoek');\n\n// Declare internals\n\nconst internals = {\n  precisionRx: /(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/\n};\ninternals.Number = class extends Any {\n  constructor() {\n    super();\n    this._type = 'number';\n    this._invalids.add(Infinity);\n    this._invalids.add(-Infinity);\n  }\n  _base(value, state, options) {\n    const result = {\n      errors: null,\n      value\n    };\n    if (typeof value === 'string' && options.convert) {\n      const number = parseFloat(value);\n      result.value = isNaN(number) || !isFinite(value) ? NaN : number;\n    }\n    const isNumber = typeof result.value === 'number' && !isNaN(result.value);\n    if (options.convert && 'precision' in this._flags && isNumber) {\n      // This is conceptually equivalent to using toFixed but it should be much faster\n      const precision = Math.pow(10, this._flags.precision);\n      result.value = Math.round(result.value * precision) / precision;\n    }\n    result.errors = isNumber ? null : this.createError('number.base', {\n      value\n    }, state, options);\n    return result;\n  }\n  multiple(base) {\n    const isRef = Ref.isRef(base);\n    if (!isRef) {\n      Hoek.assert(typeof base === 'number' && isFinite(base), 'multiple must be a number');\n      Hoek.assert(base > 0, 'multiple must be greater than 0');\n    }\n    return this._test('multiple', base, function (value, state, options) {\n      const divisor = isRef ? base(state.reference || state.parent, options) : base;\n      if (isRef && (typeof divisor !== 'number' || !isFinite(divisor))) {\n        return this.createError('number.ref', {\n          ref: base.key\n        }, state, options);\n      }\n      if (value % divisor === 0) {\n        return value;\n      }\n      return this.createError('number.multiple', {\n        multiple: base,\n        value\n      }, state, options);\n    });\n  }\n  integer() {\n    return this._test('integer', undefined, function (value, state, options) {\n      return Number.isSafeInteger(value) ? value : this.createError('number.integer', {\n        value\n      }, state, options);\n    });\n  }\n  negative() {\n    return this._test('negative', undefined, function (value, state, options) {\n      if (value < 0) {\n        return value;\n      }\n      return this.createError('number.negative', {\n        value\n      }, state, options);\n    });\n  }\n  positive() {\n    return this._test('positive', undefined, function (value, state, options) {\n      if (value > 0) {\n        return value;\n      }\n      return this.createError('number.positive', {\n        value\n      }, state, options);\n    });\n  }\n  precision(limit) {\n    Hoek.assert(Number.isSafeInteger(limit), 'limit must be an integer');\n    Hoek.assert(!('precision' in this._flags), 'precision already set');\n    const obj = this._test('precision', limit, function (value, state, options) {\n      const places = value.toString().match(internals.precisionRx);\n      const decimals = Math.max((places[1] ? places[1].length : 0) - (places[2] ? parseInt(places[2], 10) : 0), 0);\n      if (decimals <= limit) {\n        return value;\n      }\n      return this.createError('number.precision', {\n        limit,\n        value\n      }, state, options);\n    });\n    obj._flags.precision = limit;\n    return obj;\n  }\n  port() {\n    return this._test('port', undefined, function (value, state, options) {\n      if (!Number.isSafeInteger(value) || value < 0 || value > 65535) {\n        return this.createError('number.port', {\n          value\n        }, state, options);\n      }\n      return value;\n    });\n  }\n};\ninternals.compare = function (type, compare) {\n  return function (limit) {\n    const isRef = Ref.isRef(limit);\n    const isNumber = typeof limit === 'number' && !isNaN(limit);\n    Hoek.assert(isNumber || isRef, 'limit must be a number or reference');\n    return this._test(type, limit, function (value, state, options) {\n      let compareTo;\n      if (isRef) {\n        compareTo = limit(state.reference || state.parent, options);\n        if (!(typeof compareTo === 'number' && !isNaN(compareTo))) {\n          return this.createError('number.ref', {\n            ref: limit.key\n          }, state, options);\n        }\n      } else {\n        compareTo = limit;\n      }\n      if (compare(value, compareTo)) {\n        return value;\n      }\n      return this.createError('number.' + type, {\n        limit: compareTo,\n        value\n      }, state, options);\n    });\n  };\n};\ninternals.Number.prototype.min = internals.compare('min', (value, limit) => value >= limit);\ninternals.Number.prototype.max = internals.compare('max', (value, limit) => value <= limit);\ninternals.Number.prototype.greater = internals.compare('greater', (value, limit) => value > limit);\ninternals.Number.prototype.less = internals.compare('less', (value, limit) => value < limit);\nmodule.exports = new internals.Number();","map":{"version":3,"names":["Any","require","Ref","Hoek","internals","precisionRx","Number","constructor","_type","_invalids","add","Infinity","_base","value","state","options","result","errors","convert","number","parseFloat","isNaN","isFinite","NaN","isNumber","_flags","precision","Math","pow","round","createError","multiple","base","isRef","assert","_test","divisor","reference","parent","ref","key","integer","undefined","isSafeInteger","negative","positive","limit","obj","places","toString","match","decimals","max","length","parseInt","port","compare","type","compareTo","prototype","min","greater","less","module","exports"],"sources":["/Users/mariovicky/Skripsi_OpenLayers/node_modules/joi/lib/types/number/index.js"],"sourcesContent":["'use strict';\n\n// Load modules\n\nconst Any = require('../any');\nconst Ref = require('../../ref');\nconst Hoek = require('hoek');\n\n\n// Declare internals\n\nconst internals = {\n    precisionRx: /(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/\n};\n\n\ninternals.Number = class extends Any {\n\n    constructor() {\n\n        super();\n        this._type = 'number';\n        this._invalids.add(Infinity);\n        this._invalids.add(-Infinity);\n    }\n\n    _base(value, state, options) {\n\n        const result = {\n            errors: null,\n            value\n        };\n\n        if (typeof value === 'string' &&\n            options.convert) {\n\n            const number = parseFloat(value);\n            result.value = (isNaN(number) || !isFinite(value)) ? NaN : number;\n        }\n\n        const isNumber = typeof result.value === 'number' && !isNaN(result.value);\n\n        if (options.convert && 'precision' in this._flags && isNumber) {\n\n            // This is conceptually equivalent to using toFixed but it should be much faster\n            const precision = Math.pow(10, this._flags.precision);\n            result.value = Math.round(result.value * precision) / precision;\n        }\n\n        result.errors = isNumber ? null : this.createError('number.base', { value }, state, options);\n        return result;\n    }\n\n    multiple(base) {\n\n        const isRef = Ref.isRef(base);\n\n        if (!isRef) {\n            Hoek.assert(typeof base === 'number' && isFinite(base), 'multiple must be a number');\n            Hoek.assert(base > 0, 'multiple must be greater than 0');\n        }\n\n        return this._test('multiple', base, function (value, state, options) {\n\n            const divisor = isRef ? base(state.reference || state.parent, options) : base;\n\n            if (isRef && (typeof divisor !== 'number' || !isFinite(divisor))) {\n                return this.createError('number.ref', { ref: base.key }, state, options);\n            }\n\n            if (value % divisor === 0) {\n                return value;\n            }\n\n            return this.createError('number.multiple', { multiple: base, value }, state, options);\n        });\n    }\n\n    integer() {\n\n        return this._test('integer', undefined, function (value, state, options) {\n\n            return Number.isSafeInteger(value) ? value : this.createError('number.integer', { value }, state, options);\n        });\n    }\n\n    negative() {\n\n        return this._test('negative', undefined, function (value, state, options) {\n\n            if (value < 0) {\n                return value;\n            }\n\n            return this.createError('number.negative', { value }, state, options);\n        });\n    }\n\n    positive() {\n\n        return this._test('positive', undefined, function (value, state, options) {\n\n            if (value > 0) {\n                return value;\n            }\n\n            return this.createError('number.positive', { value }, state, options);\n        });\n    }\n\n    precision(limit) {\n\n        Hoek.assert(Number.isSafeInteger(limit), 'limit must be an integer');\n        Hoek.assert(!('precision' in this._flags), 'precision already set');\n\n        const obj = this._test('precision', limit, function (value, state, options) {\n\n            const places = value.toString().match(internals.precisionRx);\n            const decimals = Math.max((places[1] ? places[1].length : 0) - (places[2] ? parseInt(places[2], 10) : 0), 0);\n            if (decimals <= limit) {\n                return value;\n            }\n\n            return this.createError('number.precision', { limit, value }, state, options);\n        });\n\n        obj._flags.precision = limit;\n        return obj;\n    }\n\n    port() {\n\n        return this._test('port', undefined, function (value, state, options) {\n\n            if (!Number.isSafeInteger(value) || value < 0 || value > 65535) {\n                return this.createError('number.port', { value }, state, options);\n            }\n\n            return value;\n        });\n    }\n\n};\n\n\ninternals.compare = function (type, compare) {\n\n    return function (limit) {\n\n        const isRef = Ref.isRef(limit);\n        const isNumber = typeof limit === 'number' && !isNaN(limit);\n\n        Hoek.assert(isNumber || isRef, 'limit must be a number or reference');\n\n        return this._test(type, limit, function (value, state, options) {\n\n            let compareTo;\n            if (isRef) {\n                compareTo = limit(state.reference || state.parent, options);\n\n                if (!(typeof compareTo === 'number' && !isNaN(compareTo))) {\n                    return this.createError('number.ref', { ref: limit.key }, state, options);\n                }\n            }\n            else {\n                compareTo = limit;\n            }\n\n            if (compare(value, compareTo)) {\n                return value;\n            }\n\n            return this.createError('number.' + type, { limit: compareTo, value }, state, options);\n        });\n    };\n};\n\n\ninternals.Number.prototype.min = internals.compare('min', (value, limit) => value >= limit);\ninternals.Number.prototype.max = internals.compare('max', (value, limit) => value <= limit);\ninternals.Number.prototype.greater = internals.compare('greater', (value, limit) => value > limit);\ninternals.Number.prototype.less = internals.compare('less', (value, limit) => value < limit);\n\n\nmodule.exports = new internals.Number();\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}