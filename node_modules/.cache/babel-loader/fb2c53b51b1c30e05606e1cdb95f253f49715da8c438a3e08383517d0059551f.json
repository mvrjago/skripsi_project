{"ast":null,"code":"'use strict';\n\n// Load modules\nconst Util = require('util');\nconst Any = require('../any');\nconst Hoek = require('hoek');\n\n// Declare internals\n\nconst internals = {};\ninternals.Map = class extends Map {\n  slice() {\n    return new internals.Map(this);\n  }\n  toString() {\n    return Util.inspect(this);\n  }\n};\ninternals.Symbol = class extends Any {\n  constructor() {\n    super();\n    this._type = 'symbol';\n    this._inner.map = new internals.Map();\n  }\n  _base(value, state, options) {\n    if (options.convert) {\n      const lookup = this._inner.map.get(value);\n      if (lookup) {\n        value = lookup;\n      }\n      if (this._flags.allowOnly) {\n        return {\n          value,\n          errors: typeof value === 'symbol' ? null : this.createError('symbol.map', {\n            map: this._inner.map\n          }, state, options)\n        };\n      }\n    }\n    return {\n      value,\n      errors: typeof value === 'symbol' ? null : this.createError('symbol.base', null, state, options)\n    };\n  }\n  map(iterable) {\n    if (iterable && !iterable[Symbol.iterator] && typeof iterable === 'object') {\n      iterable = Object.entries(iterable);\n    }\n    Hoek.assert(iterable && iterable[Symbol.iterator], 'Iterable must be an iterable or object');\n    const obj = this.clone();\n    const symbols = [];\n    for (const entry of iterable) {\n      Hoek.assert(entry && entry[Symbol.iterator], 'Entry must be an iterable');\n      const [key, value] = entry;\n      Hoek.assert(typeof key !== 'object' && typeof key !== 'function' && typeof key !== 'symbol', 'Key must not be an object, function, or Symbol');\n      Hoek.assert(typeof value === 'symbol', 'Value must be a Symbol');\n      obj._inner.map.set(key, value);\n      symbols.push(value);\n    }\n    return obj.valid(...symbols);\n  }\n  describe() {\n    const description = super.describe();\n    description.map = new Map(this._inner.map);\n    return description;\n  }\n};\nmodule.exports = new internals.Symbol();","map":{"version":3,"names":["Util","require","Any","Hoek","internals","Map","slice","toString","inspect","Symbol","constructor","_type","_inner","map","_base","value","state","options","convert","lookup","get","_flags","allowOnly","errors","createError","iterable","iterator","Object","entries","assert","obj","clone","symbols","entry","key","set","push","valid","describe","description","module","exports"],"sources":["/Users/mariovicky/Skripsi_OpenLayers/node_modules/joi/lib/types/symbol/index.js"],"sourcesContent":["'use strict';\n\n// Load modules\n\nconst Util = require('util');\n\nconst Any = require('../any');\nconst Hoek = require('hoek');\n\n\n// Declare internals\n\nconst internals = {};\n\n\ninternals.Map = class extends Map {\n\n    slice() {\n\n        return new internals.Map(this);\n    }\n\n    toString() {\n\n        return Util.inspect(this);\n    }\n};\n\n\ninternals.Symbol = class extends Any {\n\n    constructor() {\n\n        super();\n        this._type = 'symbol';\n        this._inner.map = new internals.Map();\n    }\n\n    _base(value, state, options) {\n\n        if (options.convert) {\n            const lookup = this._inner.map.get(value);\n            if (lookup) {\n                value = lookup;\n            }\n\n            if (this._flags.allowOnly) {\n                return {\n                    value,\n                    errors: (typeof value === 'symbol') ? null : this.createError('symbol.map', { map: this._inner.map }, state, options)\n                };\n            }\n        }\n\n        return {\n            value,\n            errors: (typeof value === 'symbol') ? null : this.createError('symbol.base', null, state, options)\n        };\n    }\n\n    map(iterable) {\n\n        if (iterable && !iterable[Symbol.iterator] && typeof iterable === 'object') {\n            iterable = Object.entries(iterable);\n        }\n\n        Hoek.assert(iterable && iterable[Symbol.iterator], 'Iterable must be an iterable or object');\n        const obj = this.clone();\n\n        const symbols = [];\n        for (const entry of iterable) {\n            Hoek.assert(entry && entry[Symbol.iterator], 'Entry must be an iterable');\n            const [key, value] = entry;\n\n            Hoek.assert(typeof key !== 'object' && typeof key !== 'function' && typeof key !== 'symbol', 'Key must not be an object, function, or Symbol');\n            Hoek.assert(typeof value === 'symbol', 'Value must be a Symbol');\n            obj._inner.map.set(key, value);\n            symbols.push(value);\n        }\n\n        return obj.valid(...symbols);\n    }\n\n    describe() {\n\n        const description = super.describe();\n        description.map = new Map(this._inner.map);\n        return description;\n    }\n};\n\n\nmodule.exports = new internals.Symbol();\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}