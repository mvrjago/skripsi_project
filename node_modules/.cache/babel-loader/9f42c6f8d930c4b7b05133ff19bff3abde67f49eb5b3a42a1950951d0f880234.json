{"ast":null,"code":"'use strict';\n\n// Load modules\nconst Hoek = require('hoek');\n\n// Declare internals\n\nconst internals = {};\nexports.create = function (key, options) {\n  Hoek.assert(typeof key === 'string', 'Invalid reference key:', key);\n  const settings = Hoek.clone(options); // options can be reused and modified\n\n  const ref = function (value, validationOptions) {\n    return Hoek.reach(ref.isContext ? validationOptions.context : value, ref.key, settings);\n  };\n  ref.isContext = key[0] === (settings && settings.contextPrefix || '$');\n  ref.key = ref.isContext ? key.slice(1) : key;\n  ref.path = ref.key.split(settings && settings.separator || '.');\n  ref.depth = ref.path.length;\n  ref.root = ref.path[0];\n  ref.isJoi = true;\n  ref.toString = function () {\n    return (ref.isContext ? 'context:' : 'ref:') + ref.key;\n  };\n  return ref;\n};\nexports.isRef = function (ref) {\n  return typeof ref === 'function' && ref.isJoi;\n};\nexports.push = function (array, ref) {\n  if (exports.isRef(ref) && !ref.isContext) {\n    array.push(ref.root);\n  }\n};","map":{"version":3,"names":["Hoek","require","internals","exports","create","key","options","assert","settings","clone","ref","value","validationOptions","reach","isContext","context","contextPrefix","slice","path","split","separator","depth","length","root","isJoi","toString","isRef","push","array"],"sources":["/Users/mariovicky/Skripsi_OpenLayers/node_modules/joi/lib/ref.js"],"sourcesContent":["'use strict';\n\n// Load modules\n\nconst Hoek = require('hoek');\n\n\n// Declare internals\n\nconst internals = {};\n\n\nexports.create = function (key, options) {\n\n    Hoek.assert(typeof key === 'string', 'Invalid reference key:', key);\n\n    const settings = Hoek.clone(options);         // options can be reused and modified\n\n    const ref = function (value, validationOptions) {\n\n        return Hoek.reach(ref.isContext ? validationOptions.context : value, ref.key, settings);\n    };\n\n    ref.isContext = (key[0] === ((settings && settings.contextPrefix) || '$'));\n    ref.key = (ref.isContext ? key.slice(1) : key);\n    ref.path = ref.key.split((settings && settings.separator) || '.');\n    ref.depth = ref.path.length;\n    ref.root = ref.path[0];\n    ref.isJoi = true;\n\n    ref.toString = function () {\n\n        return (ref.isContext ? 'context:' : 'ref:') + ref.key;\n    };\n\n    return ref;\n};\n\n\nexports.isRef = function (ref) {\n\n    return typeof ref === 'function' && ref.isJoi;\n};\n\n\nexports.push = function (array, ref) {\n\n    if (exports.isRef(ref) &&\n        !ref.isContext) {\n\n        array.push(ref.root);\n    }\n};\n"],"mappings":"AAAA,YAAY;;AAEZ;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;;AAG5B;;AAEA,MAAMC,SAAS,GAAG,CAAC,CAAC;AAGpBC,OAAO,CAACC,MAAM,GAAG,UAAUC,GAAG,EAAEC,OAAO,EAAE;EAErCN,IAAI,CAACO,MAAM,CAAC,OAAOF,GAAG,KAAK,QAAQ,EAAE,wBAAwB,EAAEA,GAAG,CAAC;EAEnE,MAAMG,QAAQ,GAAGR,IAAI,CAACS,KAAK,CAACH,OAAO,CAAC,CAAC,CAAS;;EAE9C,MAAMI,GAAG,GAAG,SAAAA,CAAUC,KAAK,EAAEC,iBAAiB,EAAE;IAE5C,OAAOZ,IAAI,CAACa,KAAK,CAACH,GAAG,CAACI,SAAS,GAAGF,iBAAiB,CAACG,OAAO,GAAGJ,KAAK,EAAED,GAAG,CAACL,GAAG,EAAEG,QAAQ,CAAC;EAC3F,CAAC;EAEDE,GAAG,CAACI,SAAS,GAAIT,GAAG,CAAC,CAAC,CAAC,MAAOG,QAAQ,IAAIA,QAAQ,CAACQ,aAAa,IAAK,GAAG,CAAE;EAC1EN,GAAG,CAACL,GAAG,GAAIK,GAAG,CAACI,SAAS,GAAGT,GAAG,CAACY,KAAK,CAAC,CAAC,CAAC,GAAGZ,GAAI;EAC9CK,GAAG,CAACQ,IAAI,GAAGR,GAAG,CAACL,GAAG,CAACc,KAAK,CAAEX,QAAQ,IAAIA,QAAQ,CAACY,SAAS,IAAK,GAAG,CAAC;EACjEV,GAAG,CAACW,KAAK,GAAGX,GAAG,CAACQ,IAAI,CAACI,MAAM;EAC3BZ,GAAG,CAACa,IAAI,GAAGb,GAAG,CAACQ,IAAI,CAAC,CAAC,CAAC;EACtBR,GAAG,CAACc,KAAK,GAAG,IAAI;EAEhBd,GAAG,CAACe,QAAQ,GAAG,YAAY;IAEvB,OAAO,CAACf,GAAG,CAACI,SAAS,GAAG,UAAU,GAAG,MAAM,IAAIJ,GAAG,CAACL,GAAG;EAC1D,CAAC;EAED,OAAOK,GAAG;AACd,CAAC;AAGDP,OAAO,CAACuB,KAAK,GAAG,UAAUhB,GAAG,EAAE;EAE3B,OAAO,OAAOA,GAAG,KAAK,UAAU,IAAIA,GAAG,CAACc,KAAK;AACjD,CAAC;AAGDrB,OAAO,CAACwB,IAAI,GAAG,UAAUC,KAAK,EAAElB,GAAG,EAAE;EAEjC,IAAIP,OAAO,CAACuB,KAAK,CAAChB,GAAG,CAAC,IAClB,CAACA,GAAG,CAACI,SAAS,EAAE;IAEhBc,KAAK,CAACD,IAAI,CAACjB,GAAG,CAACa,IAAI,CAAC;EACxB;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}