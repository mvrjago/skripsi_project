{"ast":null,"code":"/**\n * @module ol/render/canvas/hitdetet\n */\nimport CanvasImmediateRenderer from './Immediate.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport { Icon } from '../../style.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { intersects } from '../../extent.js';\nimport { numberSafeCompareFunction } from '../../array.js';\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(size, transforms, features, styleFunction, extent, resolution, rotation) {\n  var width = size[0] / 2;\n  var height = size[1] / 2;\n  var context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  var canvas = context.canvas;\n  var renderer = new CanvasImmediateRenderer(context, 0.5, extent, null, rotation);\n  var featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  var indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  var featuresByZIndex = {};\n  for (var i = 1; i <= featureCount; ++i) {\n    var feature = features[i - 1];\n    var featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    var styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    var index = i * indexFactor;\n    var color = '#' + ('000000' + index.toString(16)).slice(-6);\n    for (var j = 0, jj = styles.length; j < jj; ++j) {\n      var originalStyle = styles[j];\n      var style = originalStyle.clone();\n      var fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      var stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n      }\n      style.setText(undefined);\n      var image = originalStyle.getImage();\n      if (image) {\n        var imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n        var canvas_1 = document.createElement('canvas');\n        canvas_1.width = imgSize[0];\n        canvas_1.height = imgSize[1];\n        var imgContext = canvas_1.getContext('2d', {\n          alpha: false\n        });\n        imgContext.fillStyle = color;\n        var img = imgContext.canvas;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        var width_1 = imgSize ? imgSize[0] : img.width;\n        var height_1 = imgSize ? imgSize[1] : img.height;\n        var iconContext = createCanvasContext2D(width_1, height_1);\n        iconContext.drawImage(img, 0, 0);\n        style.setImage(new Icon({\n          img: img,\n          imgSize: imgSize,\n          anchor: image.getAnchor(),\n          anchorXUnits: IconAnchorUnits.PIXELS,\n          anchorYUnits: IconAnchorUnits.PIXELS,\n          offset: image.getOrigin(),\n          size: image.getSize(),\n          opacity: image.getOpacity(),\n          scale: image.getScale(),\n          rotation: image.getRotation(),\n          rotateWithView: image.getRotateWithView()\n        }));\n      }\n      var zIndex = Number(style.getZIndex());\n      var byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType[GeometryType.POLYGON] = [];\n        byGeometryType[GeometryType.CIRCLE] = [];\n        byGeometryType[GeometryType.LINE_STRING] = [];\n        byGeometryType[GeometryType.POINT] = [];\n      }\n      var geometry = style.getGeometryFunction()(feature);\n      if (geometry && intersects(extent, geometry.getExtent())) {\n        byGeometryType[geometry.getType().replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n  var zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(numberSafeCompareFunction);\n  for (var i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    var byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (var type in byGeometryType) {\n      var geomAndStyle = byGeometryType[type];\n      for (var j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (var k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n  var resultFeatures = [];\n  if (imageData) {\n    var index = (Math.round(pixel[0] / 2) + Math.round(pixel[1] / 2) * imageData.width) * 4;\n    var r = imageData.data[index];\n    var g = imageData.data[index + 1];\n    var b = imageData.data[index + 2];\n    var i = b + 256 * (g + 256 * r);\n    var indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}","map":{"version":3,"names":["CanvasImmediateRenderer","GeometryType","IconAnchorUnits","Icon","createCanvasContext2D","intersects","numberSafeCompareFunction","createHitDetectionImageData","size","transforms","features","styleFunction","extent","resolution","rotation","width","height","context","imageSmoothingEnabled","canvas","renderer","featureCount","length","indexFactor","Math","floor","featuresByZIndex","i","feature","featureStyleFunction","getStyleFunction","styles","Array","isArray","index","color","toString","slice","j","jj","originalStyle","style","clone","fill","getFill","setColor","stroke","getStroke","setText","undefined","image","getImage","imgSize","getImageSize","canvas_1","document","createElement","imgContext","getContext","alpha","fillStyle","img","fillRect","width_1","height_1","iconContext","drawImage","setImage","anchor","getAnchor","anchorXUnits","PIXELS","anchorYUnits","offset","getOrigin","getSize","opacity","getOpacity","scale","getScale","getRotation","rotateWithView","getRotateWithView","zIndex","Number","getZIndex","byGeometryType","POLYGON","CIRCLE","LINE_STRING","POINT","geometry","getGeometryFunction","getExtent","getType","replace","push","zIndexKeys","Object","keys","map","sort","ii","type","geomAndStyle","setStyle","k","kk","setTransform","drawGeometry","getImageData","hitDetect","pixel","imageData","resultFeatures","round","r","data","g","b"],"sources":["/Users/mariovicky/Skripsi_OpenLayers/node_modules/ol/src/render/canvas/hitdetect.js"],"sourcesContent":["/**\n * @module ol/render/canvas/hitdetet\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport {Icon} from '../../style.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] / 2;\n  const height = size[1] / 2;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    0.5,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = '#' + ('000000' + index.toString(16)).slice(-6);\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const canvas = document.createElement('canvas');\n        canvas.width = imgSize[0];\n        canvas.height = imgSize[1];\n        const imgContext = canvas.getContext('2d', {alpha: false});\n        imgContext.fillStyle = color;\n        const img = imgContext.canvas;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        const width = imgSize ? imgSize[0] : img.width;\n        const height = imgSize ? imgSize[1] : img.height;\n        const iconContext = createCanvasContext2D(width, height);\n        iconContext.drawImage(img, 0, 0);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: IconAnchorUnits.PIXELS,\n            anchorYUnits: IconAnchorUnits.PIXELS,\n            offset: image.getOrigin(),\n            size: image.getSize(),\n            opacity: image.getOpacity(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = Number(style.getZIndex());\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType[GeometryType.POLYGON] = [];\n        byGeometryType[GeometryType.CIRCLE] = [];\n        byGeometryType[GeometryType.LINE_STRING] = [];\n        byGeometryType[GeometryType.POINT] = [];\n      }\n      const geometry = style.getGeometryFunction()(feature);\n      if (geometry && intersects(extent, geometry.getExtent())) {\n        byGeometryType[geometry.getType().replace('Multi', '')].push(\n          geometry,\n          style\n        );\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex)\n    .map(Number)\n    .sort(numberSafeCompareFunction);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const index =\n      (Math.round(pixel[0] / 2) + Math.round(pixel[1] / 2) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}