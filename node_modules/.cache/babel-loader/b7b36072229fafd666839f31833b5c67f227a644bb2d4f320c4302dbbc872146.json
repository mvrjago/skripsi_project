{"ast":null,"code":"var _jsxFileName = \"/Users/mariovicky/Skripsi_OpenLayers/src/containers/Map/OpenlayerMaps/Map.js\";\nimport React, { Component } from 'react';\nimport 'ol/ol.css';\nimport './Map.css';\nimport Map from 'ol/Map.js';\nimport View from 'ol/View.js';\nimport { Stroke, Style, Icon } from 'ol/style.js';\nimport { Tile as TileLayer, Vector as VectorLayer } from 'ol/layer.js';\nimport OSM from 'ol/source/OSM.js';\nimport VectorSource from 'ol/source/Vector.js';\nimport Feature from 'ol/Feature.js';\nimport { fromLonLat } from 'ol/proj.js';\nimport LineString from 'ol/geom/LineString.js';\nimport { getVectorContext } from 'ol/render.js';\nimport { getWidth } from 'ol/extent.js';\nimport arc from 'arc';\nimport airplaneimg from './614.png';\nclass MapComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.animateFlights = event => {\n      const vectorContext = getVectorContext(event);\n      const frameState = event.frameState;\n      vectorContext.setStyle(this.style);\n      const features = this.flightsSource.getFeatures();\n      for (let i = 0; i < features.length; i++) {\n        const feature = features[i];\n        if (!feature.get('finished')) {\n          const coords = feature.getGeometry().getCoordinates();\n          const elapsedTime = frameState.time - feature.get('start');\n          if (elapsedTime >= 0) {\n            const elapsedPoints = elapsedTime * this.pointsPerMs;\n            if (elapsedPoints >= coords.length) {\n              feature.set('finished', true);\n            }\n            const maxIndex = Math.min(elapsedPoints, coords.length);\n            const currentLine = new LineString(coords.slice(0, maxIndex));\n            const worldWidth = getWidth(this.map.getView().getProjection().getExtent());\n            const offset = Math.floor(this.map.getView().getCenter()[0] / worldWidth);\n            currentLine.translate(offset * worldWidth, 0);\n            vectorContext.drawGeometry(currentLine);\n            currentLine.translate(worldWidth, 0);\n            vectorContext.drawGeometry(currentLine);\n          }\n        }\n      }\n      this.map.render();\n    };\n    this.handleCoordinateInputChange = event => {\n      this.setState({\n        coordinateInput: event.target.value\n      });\n    };\n    this.handleCoordinateSubmit = () => {\n      const {\n        coordinateInput\n      } = this.state;\n      // Parse koordinat dari string input\n      const coordinates = coordinateInput.split(',').map(coord => parseFloat(coord.trim()));\n      // Cek apakah koordinat valid\n      if (coordinates.length === 2 && !isNaN(coordinates[0]) && !isNaN(coordinates[1])) {\n        // Atur tampilan ke koordinat yang dipilih\n        const view = this.map.getView();\n        const center = fromLonLat(coordinates); // Ubah koordinat menjadi titik dalam EPSG:3857\n        view.setCenter(center);\n        view.setZoom(10); // Ganti dengan zoom level yang diinginkan\n\n        // Atur state dengan koordinat terkait\n        this.setState({\n          lamin: coordinates[1] - 1,\n          lomin: coordinates[0] - 1,\n          lamax: coordinates[1] + 1,\n          lomax: coordinates[0] + 1\n        });\n\n        // Hapus layer kotak sebelumnya (jika ada)\n        if (this.boxLayer) {\n          this.map.removeLayer(this.boxLayer);\n        }\n\n        // Buat layer kotak baru\n        const boxExtent = [coordinates[0] - 1, coordinates[1] - 1, coordinates[0] + 1, coordinates[1] + 1];\n        const boxGeometry = new LineString([[boxExtent[0], boxExtent[1]], [boxExtent[0], boxExtent[3]], [boxExtent[2], boxExtent[3]], [boxExtent[2], boxExtent[1]], [boxExtent[0], boxExtent[1]]]);\n        const boxFeature = new Feature({\n          geometry: boxGeometry\n        });\n        const boxStyle = new Style({\n          stroke: new Stroke({\n            color: 'blue',\n            width: 2\n          })\n        });\n        this.boxLayer = new VectorLayer({\n          source: new VectorSource({\n            features: [boxFeature]\n          }),\n          style: boxStyle\n        });\n        this.map.addLayer(this.boxLayer);\n      } else {\n        // Tampilkan pesan kesalahan jika koordinat tidak valid\n        alert('Koordinat tidak valid!');\n      }\n    };\n    this.mapRef = /*#__PURE__*/React.createRef();\n    this.map = null;\n    this.flightsSource = null;\n    this.tileLayer = null;\n    this.flightsLayer = null;\n    this.style = null;\n    this.airplaneIcon = null;\n    this.pointsPerMs = 0.02;\n    this.state = {\n      coordinateInput: '',\n      lamin: null,\n      lomin: null,\n      lamax: null,\n      lomax: null\n    };\n  }\n  componentDidMount() {\n    this.initializeMap();\n  }\n  initializeMap() {\n    this.tileLayer = new TileLayer({\n      source: new OSM()\n    });\n    this.map = new Map({\n      layers: [this.tileLayer],\n      target: this.mapRef.current,\n      view: new View({\n        center: [-11000000, 4600000],\n        zoom: 2\n      })\n    });\n    this.airplaneIcon = new Icon({\n      src: airplaneimg,\n      scale: 0.5\n    });\n    this.style = new Style({\n      stroke: new Stroke({\n        color: 'red',\n        width: 2\n      }),\n      image: this.airplaneIcon\n    });\n    this.flightsSource = new VectorSource({\n      loader: () => {\n        const url = '/data/openflights/flights.json';\n        fetch(url).then(response => {\n          if (!response.ok) {\n            throw new Error('Network response was not ok');\n          }\n          return response.json();\n        }).then(json => {\n          const flightsData = json.flights;\n          for (let i = 0; i < flightsData.length; i++) {\n            const flight = flightsData[i];\n            const from = flight[0];\n            const to = flight[1];\n            const arcGenerator = new arc.GreatCircle({\n              x: from[1],\n              y: from[0]\n            }, {\n              x: to[1],\n              y: to[0]\n            });\n            const arcLine = arcGenerator.Arc(100, {\n              offset: 10\n            });\n            const features = [];\n            arcLine.geometries.forEach(geometry => {\n              const line = new LineString(geometry.coords);\n              line.transform('EPSG:4326', 'EPSG:3857');\n              features.push(new Feature({\n                geometry: line,\n                finished: false\n              }));\n            });\n            this.addLater(features, i * 50);\n          }\n          this.tileLayer.on('postrender', this.animateFlights);\n        }).catch(error => {\n          console.error('Error fetching JSON:', error);\n          console.error('URL:', url);\n        });\n      }\n    });\n    this.flightsLayer = new VectorLayer({\n      source: this.flightsSource,\n      style: feature => {\n        if (feature.get('finished')) {\n          return this.style;\n        }\n        return null;\n      }\n    });\n    this.map.addLayer(this.flightsLayer);\n  }\n  addLater(features, timeout) {\n    window.setTimeout(() => {\n      let start = Date.now();\n      features.forEach(feature => {\n        feature.set('start', start);\n        this.flightsSource.addFeature(feature);\n        const duration = (feature.getGeometry().getCoordinates().length - 1) / this.pointsPerMs;\n        start += duration;\n      });\n    }, timeout);\n  }\n  render() {\n    const {\n      lamin,\n      lomin,\n      lamax,\n      lomax\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.mapRef,\n      className: \"map-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"coordinate-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"coordinateInput\",\n      placeholder: \"Masukkan koordinat (longitude, latitude)\",\n      onChange: this.handleCoordinateInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.handleCoordinateSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 13\n      }\n    }, \"Go\"))), lamin !== null && lomin !== null && lamax !== null && lomax !== null && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 13\n      }\n    }, \"Lamin: \", lamin), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 13\n      }\n    }, \"Lomin: \", lomin), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 13\n      }\n    }, \"Lamax: \", lamax), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 13\n      }\n    }, \"Lomax: \", lomax)));\n  }\n}\nexport default MapComponent;","map":{"version":3,"names":["React","Component","Map","View","Stroke","Style","Icon","Tile","TileLayer","Vector","VectorLayer","OSM","VectorSource","Feature","fromLonLat","LineString","getVectorContext","getWidth","arc","airplaneimg","MapComponent","constructor","props","animateFlights","event","vectorContext","frameState","setStyle","style","features","flightsSource","getFeatures","i","length","feature","get","coords","getGeometry","getCoordinates","elapsedTime","time","elapsedPoints","pointsPerMs","set","maxIndex","Math","min","currentLine","slice","worldWidth","map","getView","getProjection","getExtent","offset","floor","getCenter","translate","drawGeometry","render","handleCoordinateInputChange","setState","coordinateInput","target","value","handleCoordinateSubmit","state","coordinates","split","coord","parseFloat","trim","isNaN","view","center","setCenter","setZoom","lamin","lomin","lamax","lomax","boxLayer","removeLayer","boxExtent","boxGeometry","boxFeature","geometry","boxStyle","stroke","color","width","source","addLayer","alert","mapRef","createRef","tileLayer","flightsLayer","airplaneIcon","componentDidMount","initializeMap","layers","current","zoom","src","scale","image","loader","url","fetch","then","response","ok","Error","json","flightsData","flights","flight","from","to","arcGenerator","GreatCircle","x","y","arcLine","Arc","geometries","forEach","line","transform","push","finished","addLater","on","catch","error","console","timeout","window","setTimeout","start","Date","now","addFeature","duration","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","ref","className","type","name","placeholder","onChange","onClick"],"sources":["/Users/mariovicky/Skripsi_OpenLayers/src/containers/Map/OpenlayerMaps/Map.js"],"sourcesContent":["import React, { Component } from 'react';\nimport 'ol/ol.css';\nimport './Map.css';\nimport Map from 'ol/Map.js';\nimport View from 'ol/View.js';\nimport { Stroke, Style, Icon } from 'ol/style.js';\nimport { Tile as TileLayer, Vector as VectorLayer } from 'ol/layer.js';\nimport OSM from 'ol/source/OSM.js';\nimport VectorSource from 'ol/source/Vector.js';\nimport Feature from 'ol/Feature.js';\nimport { fromLonLat } from 'ol/proj.js';\nimport LineString from 'ol/geom/LineString.js';\nimport { getVectorContext } from 'ol/render.js';\nimport { getWidth } from 'ol/extent.js';\nimport arc from 'arc';\nimport airplaneimg from './614.png';\n\nclass MapComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.mapRef = React.createRef();\n    this.map = null;\n    this.flightsSource = null;\n    this.tileLayer = null;\n    this.flightsLayer = null;\n    this.style = null;\n    this.airplaneIcon = null;\n    this.pointsPerMs = 0.02;\n    this.state = {\n      coordinateInput: '',\n      lamin: null,\n      lomin: null,\n      lamax: null,\n      lomax: null,\n    };\n  }\n\n  componentDidMount() {\n    this.initializeMap();\n  }\n\n  initializeMap() {\n    this.tileLayer = new TileLayer({\n      source: new OSM(),\n    });\n\n    this.map = new Map({\n      layers: [this.tileLayer],\n      target: this.mapRef.current,\n      view: new View({\n        center: [-11000000, 4600000],\n        zoom: 2,\n      }),\n    });\n\n    this.airplaneIcon = new Icon({\n      src: airplaneimg,\n      scale: 0.5,\n    });\n\n    this.style = new Style({\n      stroke: new Stroke({\n        color: 'red',\n        width: 2,\n      }),\n      image: this.airplaneIcon,\n    });\n\n    this.flightsSource = new VectorSource({\n      loader: () => {\n        const url = '/data/openflights/flights.json';\n        fetch(url)\n          .then((response) => {\n            if (!response.ok) {\n              throw new Error('Network response was not ok');\n            }\n            return response.json();\n          })\n          .then((json) => {\n            const flightsData = json.flights;\n            for (let i = 0; i < flightsData.length; i++) {\n              const flight = flightsData[i];\n              const from = flight[0];\n              const to = flight[1];\n\n              const arcGenerator = new arc.GreatCircle(\n                { x: from[1], y: from[0] },\n                { x: to[1], y: to[0] }\n              );\n\n              const arcLine = arcGenerator.Arc(100, { offset: 10 });\n              const features = [];\n              arcLine.geometries.forEach((geometry) => {\n                const line = new LineString(geometry.coords);\n                line.transform('EPSG:4326', 'EPSG:3857');\n\n                features.push(\n                  new Feature({\n                    geometry: line,\n                    finished: false,\n                  })\n                );\n              });\n\n              this.addLater(features, i * 50);\n            }\n\n            this.tileLayer.on('postrender', this.animateFlights);\n          })\n          .catch((error) => {\n            console.error('Error fetching JSON:', error);\n            console.error('URL:', url);\n          });\n      },\n    });\n\n    this.flightsLayer = new VectorLayer({\n      source: this.flightsSource,\n      style: (feature) => {\n        if (feature.get('finished')) {\n          return this.style;\n        }\n        return null;\n      },\n    });\n\n    this.map.addLayer(this.flightsLayer);\n  }\n\n  animateFlights = (event) => {\n    const vectorContext = getVectorContext(event);\n    const frameState = event.frameState;\n    vectorContext.setStyle(this.style);\n\n    const features = this.flightsSource.getFeatures();\n    for (let i = 0; i < features.length; i++) {\n      const feature = features[i];\n      if (!feature.get('finished')) {\n        const coords = feature.getGeometry().getCoordinates();\n        const elapsedTime = frameState.time - feature.get('start');\n        if (elapsedTime >= 0) {\n          const elapsedPoints = elapsedTime * this.pointsPerMs;\n\n          if (elapsedPoints >= coords.length) {\n            feature.set('finished', true);\n          }\n\n          const maxIndex = Math.min(elapsedPoints, coords.length);\n          const currentLine = new LineString(coords.slice(0, maxIndex));\n\n          const worldWidth = getWidth(this.map.getView().getProjection().getExtent());\n          const offset = Math.floor(this.map.getView().getCenter()[0] / worldWidth);\n\n          currentLine.translate(offset * worldWidth, 0);\n          vectorContext.drawGeometry(currentLine);\n          currentLine.translate(worldWidth, 0);\n          vectorContext.drawGeometry(currentLine);\n        }\n      }\n    }\n\n    this.map.render();\n  };\n\n  addLater(features, timeout) {\n    window.setTimeout(() => {\n      let start = Date.now();\n      features.forEach((feature) => {\n        feature.set('start', start);\n        this.flightsSource.addFeature(feature);\n        const duration =\n          (feature.getGeometry().getCoordinates().length - 1) / this.pointsPerMs;\n        start += duration;\n      });\n    }, timeout);\n  }\n\n  handleCoordinateInputChange = (event) => {\n    this.setState({ coordinateInput: event.target.value });\n  };\n\n  handleCoordinateSubmit = () => {\n    const { coordinateInput } = this.state;\n    // Parse koordinat dari string input\n    const coordinates = coordinateInput.split(',').map((coord) => parseFloat(coord.trim()));\n    // Cek apakah koordinat valid\n    if (coordinates.length === 2 && !isNaN(coordinates[0]) && !isNaN(coordinates[1])) {\n      // Atur tampilan ke koordinat yang dipilih\n      const view = this.map.getView();\n      const center = fromLonLat(coordinates); // Ubah koordinat menjadi titik dalam EPSG:3857\n      view.setCenter(center);\n      view.setZoom(10); // Ganti dengan zoom level yang diinginkan\n  \n      // Atur state dengan koordinat terkait\n      this.setState({\n        lamin: coordinates[1] - 1,\n        lomin: coordinates[0] - 1,\n        lamax: coordinates[1] + 1,\n        lomax: coordinates[0] + 1,\n      });\n  \n      // Hapus layer kotak sebelumnya (jika ada)\n      if (this.boxLayer) {\n        this.map.removeLayer(this.boxLayer);\n      }\n  \n      // Buat layer kotak baru\n      const boxExtent = [coordinates[0] - 1, coordinates[1] - 1, coordinates[0] + 1, coordinates[1] + 1];\n      const boxGeometry = new LineString([\n        [boxExtent[0], boxExtent[1]],\n        [boxExtent[0], boxExtent[3]],\n        [boxExtent[2], boxExtent[3]],\n        [boxExtent[2], boxExtent[1]],\n        [boxExtent[0], boxExtent[1]],\n      ]);\n      const boxFeature = new Feature({\n        geometry: boxGeometry,\n      });\n      const boxStyle = new Style({\n        stroke: new Stroke({\n          color: 'blue',\n          width: 2,\n        }),\n      });\n      this.boxLayer = new VectorLayer({\n        source: new VectorSource({\n          features: [boxFeature],\n        }),\n        style: boxStyle,\n      });\n      this.map.addLayer(this.boxLayer);\n    } else {\n      // Tampilkan pesan kesalahan jika koordinat tidak valid\n      alert('Koordinat tidak valid!');\n    }\n  };\n  \n\n  render() {\n    const { lamin, lomin, lamax, lomax } = this.state;\n    return (\n      <div>\n        <div ref={this.mapRef} className=\"map-container\" />\n        <div className=\"coordinate-input\">\n          <form>\n            <input\n              type=\"text\"\n              name=\"coordinateInput\"\n              placeholder=\"Masukkan koordinat (longitude, latitude)\"\n              onChange={this.handleCoordinateInputChange}\n            />\n            <button type=\"button\" onClick={this.handleCoordinateSubmit}>\n              Go\n            </button>\n          </form>\n        </div>\n        {lamin !== null && lomin !== null && lamax !== null && lomax !== null && (\n          <div>\n            <p>Lamin: {lamin}</p>\n            <p>Lomin: {lomin}</p>\n            <p>Lamax: {lamax}</p>\n            <p>Lomax: {lomax}</p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default MapComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}