{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport { createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter } from '../extent.js';\nimport { easeOut } from '../easing.js';\nimport { shiftKeyOnly } from '../events/condition.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /** @class */function (_super) {\n  __extends(DragZoom, _super);\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  function DragZoom(opt_options) {\n    var _this = this;\n    var options = opt_options ? opt_options : {};\n    var condition = options.condition ? options.condition : shiftKeyOnly;\n    _this = _super.call(this, {\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea\n    }) || this;\n    /**\n     * @private\n     * @type {number}\n     */\n    _this.duration_ = options.duration !== undefined ? options.duration : 200;\n    /**\n     * @private\n     * @type {boolean}\n     */\n    _this.out_ = options.out !== undefined ? options.out : false;\n    return _this;\n  }\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  DragZoom.prototype.onBoxEnd = function (event) {\n    var map = this.getMap();\n    var view = /** @type {!import(\"../View.js\").default} */map.getView();\n    var size = /** @type {!import(\"../size.js\").Size} */map.getSize();\n    var extent = this.getGeometry().getExtent();\n    if (this.out_) {\n      var mapExtent = view.calculateExtentInternal(size);\n      var boxPixelExtent = createOrUpdateFromCoordinates([map.getPixelFromCoordinateInternal(getBottomLeft(extent)), map.getPixelFromCoordinateInternal(getTopRight(extent))]);\n      var factor = view.getResolutionForExtentInternal(boxPixelExtent, size);\n      scaleFromCenter(mapExtent, 1 / factor);\n      extent = mapExtent;\n    }\n    var resolution = view.getConstrainedResolution(view.getResolutionForExtentInternal(extent, size));\n    var center = view.getConstrainedCenter(getCenter(extent), resolution);\n    view.animateInternal({\n      resolution: resolution,\n      center: center,\n      duration: this.duration_,\n      easing: easeOut\n    });\n  };\n  return DragZoom;\n}(DragBox);\nexport default DragZoom;","map":{"version":3,"names":["DragBox","createOrUpdateFromCoordinates","getBottomLeft","getCenter","getTopRight","scaleFromCenter","easeOut","shiftKeyOnly","DragZoom","_super","__extends","opt_options","_this","options","condition","call","className","minArea","duration_","duration","undefined","out_","out","prototype","onBoxEnd","event","map","getMap","view","getView","size","getSize","extent","getGeometry","getExtent","mapExtent","calculateExtentInternal","boxPixelExtent","getPixelFromCoordinateInternal","factor","getResolutionForExtentInternal","resolution","getConstrainedResolution","center","getConstrainedCenter","animateInternal","easing"],"sources":["/Users/mariovicky/Skripsi_OpenLayers/node_modules/ol/src/interaction/DragZoom.js"],"sourcesContent":["/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {\n  createOrUpdateFromCoordinates,\n  getBottomLeft,\n  getCenter,\n  getTopRight,\n  scaleFromCenter,\n} from '../extent.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    const size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n    let extent = this.getGeometry().getExtent();\n\n    if (this.out_) {\n      const mapExtent = view.calculateExtentInternal(size);\n      const boxPixelExtent = createOrUpdateFromCoordinates([\n        map.getPixelFromCoordinateInternal(getBottomLeft(extent)),\n        map.getPixelFromCoordinateInternal(getTopRight(extent)),\n      ]);\n      const factor = view.getResolutionForExtentInternal(boxPixelExtent, size);\n\n      scaleFromCenter(mapExtent, 1 / factor);\n      extent = mapExtent;\n    }\n\n    const resolution = view.getConstrainedResolution(\n      view.getResolutionForExtentInternal(extent, size)\n    );\n    const center = view.getConstrainedCenter(getCenter(extent), resolution);\n\n    view.animateInternal({\n      resolution: resolution,\n      center: center,\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;;AAGA,OAAOA,OAAO,MAAM,cAAc;AAClC,SACEC,6BAA6B,EAC7BC,aAAa,EACbC,SAAS,EACTC,WAAW,EACXC,eAAe,QACV,cAAc;AACrB,SAAQC,OAAO,QAAO,cAAc;AACpC,SAAQC,YAAY,QAAO,wBAAwB;AAEnD;;;;;;;;;;;;;AAcA;;;;;;;;;;AAUA,IAAAC,QAAA,0BAAAC,MAAA;EAAuBC,SAAA,CAAAF,QAAA,EAAAC,MAAA;EACrB;;;EAGA,SAAAD,SAAYG,WAAW;IAAvB,IAAAC,KAAA;IACE,IAAMC,OAAO,GAAGF,WAAW,GAAGA,WAAW,GAAG,EAAE;IAE9C,IAAMG,SAAS,GAAGD,OAAO,CAACC,SAAS,GAAGD,OAAO,CAACC,SAAS,GAAGP,YAAY;IAEtEK,KAAA,GAAAH,MAAA,CAAAM,IAAA,OAAM;MACJD,SAAS,EAAEA,SAAS;MACpBE,SAAS,EAAEH,OAAO,CAACG,SAAS,IAAI,aAAa;MAC7CC,OAAO,EAAEJ,OAAO,CAACI;KAClB,CAAC;IAEF;;;;IAIAL,KAAI,CAACM,SAAS,GAAGL,OAAO,CAACM,QAAQ,KAAKC,SAAS,GAAGP,OAAO,CAACM,QAAQ,GAAG,GAAG;IAExE;;;;IAIAP,KAAI,CAACS,IAAI,GAAGR,OAAO,CAACS,GAAG,KAAKF,SAAS,GAAGP,OAAO,CAACS,GAAG,GAAG,KAAK;;EAC7D;EAEA;;;;EAIAd,QAAA,CAAAe,SAAA,CAAAC,QAAQ,GAAR,UAASC,KAAK;IACZ,IAAMC,GAAG,GAAG,IAAI,CAACC,MAAM,EAAE;IACzB,IAAMC,IAAI,GAAG,4CAA8CF,GAAG,CAACG,OAAO,EAAG;IACzE,IAAMC,IAAI,GAAG,yCAA2CJ,GAAG,CAACK,OAAO,EAAG;IACtE,IAAIC,MAAM,GAAG,IAAI,CAACC,WAAW,EAAE,CAACC,SAAS,EAAE;IAE3C,IAAI,IAAI,CAACb,IAAI,EAAE;MACb,IAAMc,SAAS,GAAGP,IAAI,CAACQ,uBAAuB,CAACN,IAAI,CAAC;MACpD,IAAMO,cAAc,GAAGpC,6BAA6B,CAAC,CACnDyB,GAAG,CAACY,8BAA8B,CAACpC,aAAa,CAAC8B,MAAM,CAAC,CAAC,EACzDN,GAAG,CAACY,8BAA8B,CAAClC,WAAW,CAAC4B,MAAM,CAAC,CAAC,CACxD,CAAC;MACF,IAAMO,MAAM,GAAGX,IAAI,CAACY,8BAA8B,CAACH,cAAc,EAAEP,IAAI,CAAC;MAExEzB,eAAe,CAAC8B,SAAS,EAAE,CAAC,GAAGI,MAAM,CAAC;MACtCP,MAAM,GAAGG,SAAS;;IAGpB,IAAMM,UAAU,GAAGb,IAAI,CAACc,wBAAwB,CAC9Cd,IAAI,CAACY,8BAA8B,CAACR,MAAM,EAAEF,IAAI,CAAC,CAClD;IACD,IAAMa,MAAM,GAAGf,IAAI,CAACgB,oBAAoB,CAACzC,SAAS,CAAC6B,MAAM,CAAC,EAAES,UAAU,CAAC;IAEvEb,IAAI,CAACiB,eAAe,CAAC;MACnBJ,UAAU,EAAEA,UAAU;MACtBE,MAAM,EAAEA,MAAM;MACdxB,QAAQ,EAAE,IAAI,CAACD,SAAS;MACxB4B,MAAM,EAAExC;KACT,CAAC;EACJ,CAAC;EACH,OAAAE,QAAC;AAAD,CAAC,CA9DsBR,OAAO;AAgE9B,eAAeQ,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}