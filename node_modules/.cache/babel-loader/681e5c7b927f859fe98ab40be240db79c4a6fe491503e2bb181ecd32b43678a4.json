{"ast":null,"code":"/**\n * @module ol/net\n */\nimport { getUid } from './util.js';\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {function()=} opt_errback Callback on error.\n * @param {string=} opt_callbackParam Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, opt_errback, opt_callbackParam) {\n  var script = document.createElement('script');\n  var key = 'olc_' + getUid(callback);\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n  script.async = true;\n  script.src = url + (url.indexOf('?') == -1 ? '?' : '&') + (opt_callbackParam || 'callback') + '=' + key;\n  var timer = setTimeout(function () {\n    cleanup();\n    if (opt_errback) {\n      opt_errback();\n    }\n  }, 10000);\n  window[key] = function (data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n  document.getElementsByTagName('head')[0].appendChild(script);\n}","map":{"version":3,"names":["getUid","jsonp","url","callback","opt_errback","opt_callbackParam","script","document","createElement","key","cleanup","window","parentNode","removeChild","async","src","indexOf","timer","setTimeout","data","clearTimeout","getElementsByTagName","appendChild"],"sources":["/Users/mariovicky/Skripsi_OpenLayers/node_modules/ol/src/net.js"],"sourcesContent":["/**\n * @module ol/net\n */\nimport {getUid} from './util.js';\n\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {function()=} opt_errback Callback on error.\n * @param {string=} opt_callbackParam Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, opt_errback, opt_callbackParam) {\n  const script = document.createElement('script');\n  const key = 'olc_' + getUid(callback);\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n  script.async = true;\n  script.src =\n    url +\n    (url.indexOf('?') == -1 ? '?' : '&') +\n    (opt_callbackParam || 'callback') +\n    '=' +\n    key;\n  const timer = setTimeout(function () {\n    cleanup();\n    if (opt_errback) {\n      opt_errback();\n    }\n  }, 10000);\n  window[key] = function (data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n  document.getElementsByTagName('head')[0].appendChild(script);\n}\n"],"mappings":"AAAA;;;AAGA,SAAQA,MAAM,QAAO,WAAW;AAEhC;;;;;;;;;;;AAWA,OAAM,SAAUC,KAAKA,CAACC,GAAG,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,iBAAiB;EACjE,IAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;EAC/C,IAAMC,GAAG,GAAG,MAAM,GAAGT,MAAM,CAACG,QAAQ,CAAC;EACrC,SAASO,OAAOA,CAAA;IACd,OAAOC,MAAM,CAACF,GAAG,CAAC;IAClBH,MAAM,CAACM,UAAU,CAACC,WAAW,CAACP,MAAM,CAAC;EACvC;EACAA,MAAM,CAACQ,KAAK,GAAG,IAAI;EACnBR,MAAM,CAACS,GAAG,GACRb,GAAG,IACFA,GAAG,CAACc,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,IACnCX,iBAAiB,IAAI,UAAU,CAAC,GACjC,GAAG,GACHI,GAAG;EACL,IAAMQ,KAAK,GAAGC,UAAU,CAAC;IACvBR,OAAO,EAAE;IACT,IAAIN,WAAW,EAAE;MACfA,WAAW,EAAE;;EAEjB,CAAC,EAAE,KAAK,CAAC;EACTO,MAAM,CAACF,GAAG,CAAC,GAAG,UAAUU,IAAI;IAC1BC,YAAY,CAACH,KAAK,CAAC;IACnBP,OAAO,EAAE;IACTP,QAAQ,CAACgB,IAAI,CAAC;EAChB,CAAC;EACDZ,QAAQ,CAACc,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAACC,WAAW,CAAChB,MAAM,CAAC;AAC9D"},"metadata":{},"sourceType":"module","externalDependencies":[]}