{"ast":null,"code":"var _jsxFileName = \"/Users/mariovicky/Skripsi_OpenLayers/src/containers/Map/Map.js\";\nimport React, { Component } from 'react';\nimport 'leaflet/dist/leaflet.css';\nimport './Map.css';\nimport L from 'leaflet';\nimport airplaneimg from './614.png';\nconst map = L.map('map').setView([51.505, -0.09], 2); // Set the initial center and zoom level\n\nL.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n  attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors'\n}).addTo(map);\nconst airplaneIcon = L.icon({\n  iconUrl: airplaneimg,\n  iconSize: [32, 32]\n});\nconst flightsLayer = L.featureGroup().addTo(map);\nconst pointsPerMs = 0.02;\nfunction animateFlights() {\n  const features = flightsLayer.getLayers();\n  const currentTime = Date.now();\n  features.forEach(function (feature) {\n    const elapsedTime = currentTime - feature.start;\n    if (elapsedTime >= 0) {\n      const elapsedPoints = elapsedTime * pointsPerMs;\n      if (elapsedPoints >= feature.coords.length) {\n        feature.finished = true;\n      }\n      const maxIndex = Math.min(elapsedPoints, feature.coords.length);\n      const currentLine = feature.coords.slice(0, maxIndex);\n      const worldWidth = map.getBounds().getEast() - map.getBounds().getWest();\n      const offset = Math.floor(map.getCenter().lng / worldWidth);\n      const transformedCoords = currentLine.map(function (coord) {\n        return [coord[1] + offset * worldWidth, coord[0]];\n      });\n      const polyline = L.polyline(transformedCoords, {\n        color: 'red'\n      }).addTo(map);\n      feature.polyline = polyline;\n      const iconLatLng = L.latLng(transformedCoords[maxIndex - 1]);\n      const airplaneMarker = L.marker(iconLatLng, {\n        icon: airplaneIcon\n      }).addTo(map);\n      feature.airplaneMarker = airplaneMarker;\n      if (maxIndex === feature.coords.length) {\n        feature.finished = true;\n      }\n    }\n  });\n  map.eachLayer(function (layer) {\n    if (layer !== flightsLayer) {\n      map.removeLayer(layer);\n    }\n  });\n  map.addLayer(flightsLayer);\n  requestAnimationFrame(animateFlights);\n}\nclass MapComponent extends Component {\n  componentDidMount() {\n    const bbox = L.latLngBounds(L.latLng(28.70, -127.50), L.latLng(48.85, -55.90)); // Set the desired bbox\n    map.fitBounds(bbox); // Fit the map to the bbox\n\n    fetch('/data/openflights/flights.json').then(function (response) {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(function (json) {\n      const flightsData = json.flights;\n      for (let i = 0; i < flightsData.length; i++) {\n        const flight = flightsData[i];\n        const from = flight[0];\n        const to = flight[1];\n        const arcGenerator = new arc.GreatCircle({\n          x: from[1],\n          y: from[0]\n        }, {\n          x: to[1],\n          y: to[0]\n        });\n        const arcLine = arcGenerator.Arc(100, {\n          offset: 10\n        });\n        const coords = arcLine.geometries[0].coords;\n        const feature = {\n          start: Date.now() + i * 50,\n          finished: false,\n          coords: coords,\n          polyline: null,\n          airplaneMarker: null\n        };\n        flightsLayer.addLayer(feature);\n      }\n      requestAnimationFrame(animateFlights);\n    }).catch(function (error) {\n      console.error('Error fetching JSON:', error);\n    });\n  }\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"map\",\n      className: \"map\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 12\n      }\n    });\n  }\n}\nexport default MapComponent;","map":{"version":3,"names":["React","Component","L","airplaneimg","map","setView","tileLayer","attribution","addTo","airplaneIcon","icon","iconUrl","iconSize","flightsLayer","featureGroup","pointsPerMs","animateFlights","features","getLayers","currentTime","Date","now","forEach","feature","elapsedTime","start","elapsedPoints","coords","length","finished","maxIndex","Math","min","currentLine","slice","worldWidth","getBounds","getEast","getWest","offset","floor","getCenter","lng","transformedCoords","coord","polyline","color","iconLatLng","latLng","airplaneMarker","marker","eachLayer","layer","removeLayer","addLayer","requestAnimationFrame","MapComponent","componentDidMount","bbox","latLngBounds","fitBounds","fetch","then","response","ok","Error","json","flightsData","flights","i","flight","from","to","arcGenerator","arc","GreatCircle","x","y","arcLine","Arc","geometries","catch","error","console","render","createElement","id","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/mariovicky/Skripsi_OpenLayers/src/containers/Map/Map.js"],"sourcesContent":["import React, { Component } from 'react';\nimport 'leaflet/dist/leaflet.css';\nimport './Map.css';\nimport L from 'leaflet';\nimport airplaneimg from './614.png';\n\nconst map = L.map('map').setView([51.505, -0.09], 2); // Set the initial center and zoom level\n\nL.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n  attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors',\n}).addTo(map);\n\nconst airplaneIcon = L.icon({\n  iconUrl: airplaneimg,\n  iconSize: [32, 32],\n});\n\nconst flightsLayer = L.featureGroup().addTo(map);\n\nconst pointsPerMs = 0.02;\nfunction animateFlights() {\n  const features = flightsLayer.getLayers();\n  const currentTime = Date.now();\n\n  features.forEach(function (feature) {\n    const elapsedTime = currentTime - feature.start;\n    if (elapsedTime >= 0) {\n      const elapsedPoints = elapsedTime * pointsPerMs;\n\n      if (elapsedPoints >= feature.coords.length) {\n        feature.finished = true;\n      }\n\n      const maxIndex = Math.min(elapsedPoints, feature.coords.length);\n      const currentLine = feature.coords.slice(0, maxIndex);\n\n      const worldWidth = map.getBounds().getEast() - map.getBounds().getWest();\n      const offset = Math.floor(map.getCenter().lng / worldWidth);\n\n      const transformedCoords = currentLine.map(function (coord) {\n        return [coord[1] + offset * worldWidth, coord[0]];\n      });\n\n      const polyline = L.polyline(transformedCoords, { color: 'red' }).addTo(map);\n      feature.polyline = polyline;\n\n      const iconLatLng = L.latLng(transformedCoords[maxIndex - 1]);\n      const airplaneMarker = L.marker(iconLatLng, { icon: airplaneIcon }).addTo(map);\n      feature.airplaneMarker = airplaneMarker;\n\n      if (maxIndex === feature.coords.length) {\n        feature.finished = true;\n      }\n    }\n  });\n\n  map.eachLayer(function (layer) {\n    if (layer !== flightsLayer) {\n      map.removeLayer(layer);\n    }\n  });\n\n  map.addLayer(flightsLayer);\n\n  requestAnimationFrame(animateFlights);\n}\n\nclass MapComponent extends Component {\n  componentDidMount() {\n    const bbox = L.latLngBounds(L.latLng(28.70, -127.50), L.latLng(48.85, -55.90)); // Set the desired bbox\n    map.fitBounds(bbox); // Fit the map to the bbox\n\n    fetch('/data/openflights/flights.json')\n      .then(function (response) {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then(function (json) {\n        const flightsData = json.flights;\n        for (let i = 0; i < flightsData.length; i++) {\n          const flight = flightsData[i];\n          const from = flight[0];\n          const to = flight[1];\n\n          const arcGenerator = new arc.GreatCircle(\n            { x: from[1], y: from[0] },\n            { x: to[1], y: to[0] }\n          );\n\n          const arcLine = arcGenerator.Arc(100, { offset: 10 });\n          const coords = arcLine.geometries[0].coords;\n\n          const feature = {\n            start: Date.now() + i * 50,\n            finished: false,\n            coords: coords,\n            polyline: null,\n            airplaneMarker: null,\n          };\n\n          flightsLayer.addLayer(feature);\n        }\n\n        requestAnimationFrame(animateFlights);\n      })\n      .catch(function (error) {\n        console.error('Error fetching JSON:', error);\n      });\n  }\n\n  render() {\n    return <div id=\"map\" className=\"map\" />;\n  }\n}\n\nexport default MapComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}